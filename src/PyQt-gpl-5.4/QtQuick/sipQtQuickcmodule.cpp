/*
 * Module code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:17:46 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtQuick.h"

#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgnode.sip"
#include <qsgnode.h>
#line 32 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 35 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 192 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 38 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 199 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 41 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgtexture.sip"
#include <qsgtexture.h>
#line 44 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 165 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 47 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 37 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 52 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 55 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 58 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgtextureprovider.sip"
#include <qsgtextureprovider.h>
#line 61 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 178 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 66 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 69 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 72 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 75 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 534 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 78 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 583 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 81 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 556 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 84 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 572 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 87 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 232 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 90 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 479 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 93 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 63 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 98 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 101 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 104 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 99 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 107 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickimageprovider.sip"
#include <qquickimageprovider.h>
#line 110 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 113 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 116 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 119 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "sip/QtGui/qimage.sip"
#include <qimage.h>
#line 122 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickwindow.sip"
#include <qquickwindow.h>
#line 125 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickframebufferobject.sip"
#include <qquickframebufferobject.h>
#line 35 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickframebufferobject.sip"
#include <qquickframebufferobject.h>
#line 130 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickframebufferobject.sip"
#include <qquickframebufferobject.h>
#line 133 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 28 "sip/QtGui/qopenglframebufferobject.sip"
#include <qopenglframebufferobject.h>
#line 136 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 139 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickpainteditem.sip"
#include <qquickpainteditem.h>
#line 142 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickwindow.sip"
#include <qquickwindow.h>
#line 145 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 34 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgabstractrenderer.sip"
#include <qsgabstractrenderer.h>
#line 148 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgengine.sip"
#include <qsgengine.h>
#line 151 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 55 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 156 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 231 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 161 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 242 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 166 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 255 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsggeometry.sip"
#include <qsggeometry.h>
#line 171 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 37 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 176 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 199 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 179 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgnode.sip"
#include <qsgnode.h>
#line 182 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgnode.sip"
#include <qsgnode.h>
#line 185 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgsimpletexturenode.sip"
#include <qsgsimpletexturenode.h>
#line 188 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtQuick[] = {
    'Q', 'S', 'G', 'S', 'i', 'm', 'p', 'l', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'N', 'o', 'd', 'e', ':', ':', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'o', 'o', 'r', 'd', 'i', 'n', 'a', 't', 'e', 's', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'o', 'd', 'e', 0,
    'Q', 'S', 'G', 'S', 'i', 'm', 'p', 'l', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'N', 'o', 'd', 'e', ':', ':', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'o', 'o', 'r', 'd', 'i', 'n', 'a', 't', 'e', 's', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'F', 'l', 'a', 'g', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 'S', 'h', 'a', 'd', 'e', 'r', ':', ':', 'R', 'e', 'n', 'd', 'e', 'r', 'S', 't', 'a', 't', 'e', ':', ':', 'D', 'i', 'r', 't', 'y', 'S', 't', 'a', 't', 'e', 's', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 'S', 'h', 'a', 'd', 'e', 'r', ':', ':', 'R', 'e', 'n', 'd', 'e', 'r', 'S', 't', 'a', 't', 'e', ':', ':', 'D', 'i', 'r', 't', 'y', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'P', 'a', 'i', 'n', 't', 'e', 'd', 'I', 't', 'e', 'm', ':', ':', 'P', 'e', 'r', 'f', 'o', 'r', 'm', 'a', 'n', 'c', 'e', 'H', 'i', 'n', 't', 's', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'W', 'i', 'n', 'd', 'o', 'w', ':', ':', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'P', 'a', 'i', 'n', 't', 'e', 'd', 'I', 't', 'e', 'm', ':', ':', 'P', 'e', 'r', 'f', 'o', 'r', 'm', 'a', 'n', 'c', 'e', 'H', 'i', 'n', 't', 0,
    'R', 'e', 'q', 'u', 'i', 'r', 'e', 's', 'F', 'u', 'l', 'l', 'M', 'a', 't', 'r', 'i', 'x', 'E', 'x', 'c', 'e', 'p', 't', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', '_', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'd', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'Q', 'S', 'G', 'A', 'b', 's', 't', 'r', 'a', 'c', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', ':', ':', 'C', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 'B', 'i', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'W', 'i', 'n', 'd', 'o', 'w', ':', ':', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'F', 'r', 'a', 'm', 'e', 'b', 'u', 'f', 'f', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', ':', ':', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', '_', 'C', 'o', 'l', 'o', 'r', 'e', 'd', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'Q', 'S', 'G', 'E', 'n', 'g', 'i', 'n', 'e', ':', ':', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'P', 'a', 'i', 'n', 't', 'e', 'd', 'I', 't', 'e', 'm', ':', ':', 'R', 'e', 'n', 'd', 'e', 'r', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', ':', ':', 'U', 'p', 'd', 'a', 't', 'e', 'P', 'a', 'i', 'n', 't', 'N', 'o', 'd', 'e', 'D', 'a', 't', 'a', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'o', 'o', 'r', 'd', 'i', 'n', 'a', 't', 'e', 's', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 'S', 'h', 'a', 'd', 'e', 'r', ':', ':', 'R', 'e', 'n', 'd', 'e', 'r', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'S', 'G', 'E', 'n', 'g', 'i', 'n', 'e', ':', ':', 'C', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'Q', 'S', 'G', 'A', 'b', 's', 't', 'r', 'a', 'c', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', ':', ':', 'C', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    'c', 'o', 'n', 'v', 'e', 'r', 't', 'T', 'o', 'N', 'o', 'r', 'm', 'a', 'l', 'i', 'z', 'e', 'd', 'S', 'o', 'u', 'r', 'c', 'e', 'R', 'e', 'c', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'W', 'i', 'n', 'd', 'o', 'w', ':', ':', 'S', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 'E', 'r', 'r', 'o', 'r', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'F', 'o', 'l', 'l', 'o', 'w', 's', 'I', 't', 'e', 'm', 'S', 'i', 'z', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', ':', ':', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'd', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'P', 'y', 'Q', 't', '5', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'o', 'o', 'r', 'd', 'i', 'n', 'a', 't', 'e', 's', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 'A', 's', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'd', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', ':', ':', 'C', 'o', 'l', 'o', 'r', 'e', 'd', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', ':', ':', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'i', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 'F', 'r', 'a', 'm', 'e', 'b', 'u', 'f', 'f', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 'A', 's', 'C', 'o', 'l', 'o', 'r', 'e', 'd', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'd', 'R', 'e', 'c', 't', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    's', 'e', 't', 'P', 'e', 'r', 's', 'i', 's', 't', 'e', 'n', 't', 'O', 'p', 'e', 'n', 'G', 'L', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'I', 'n', 'v', 'e', 'r', 't', 'e', 'd', 'Y', 'F', 'r', 'a', 'm', 'e', 'b', 'u', 'f', 'f', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    's', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 's', 'C', 'h', 'i', 'l', 'd', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 's', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', ':', ':', 'I', 't', 'e', 'm', 'C', 'h', 'a', 'n', 'g', 'e', 'D', 'a', 't', 'a', 0,
    'I', 't', 'e', 'm', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'i', 'n', 'g', 'H', 'a', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', '_', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', ':', ':', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'S', 'e', 't', 0,
    's', 'e', 't', 'P', 'r', 'o', 'j', 'e', 'c', 't', 'i', 'o', 'n', 'M', 'a', 't', 'r', 'i', 'x', 'T', 'o', 'R', 'e', 'c', 't', 0,
    'e', 'f', 'f', 'e', 'c', 't', 'i', 'v', 'e', 'D', 'e', 'v', 'i', 'c', 'e', 'P', 'i', 'x', 'e', 'l', 'R', 'a', 't', 'i', 'o', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'W', 'i', 'n', 'd', 'o', 'w', ':', ':', 'R', 'e', 'n', 'd', 'e', 'r', 'S', 't', 'a', 'g', 'e', 0,
    'i', 's', 'P', 'e', 'r', 's', 'i', 's', 't', 'e', 'n', 't', 'O', 'p', 'e', 'n', 'G', 'L', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'I', 't', 'e', 'm', 'A', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 'H', 'a', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'F', 'o', 'l', 'l', 'o', 'w', 's', 'I', 't', 'e', 'm', 'S', 'i', 'z', 'e', 0,
    'Q', 'S', 'G', 'O', 'p', 'a', 'q', 'u', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'n', 'o', 'r', 'm', 'a', 'l', 'i', 'z', 'e', 'd', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'S', 'u', 'b', 'R', 'e', 'c', 't', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', ':', ':', 'D', 'a', 't', 'a', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'B', 'e', 'f', 'o', 'r', 'e', 'S', 'y', 'n', 'c', 'h', 'r', 'o', 'n', 'i', 'z', 'i', 'n', 'g', 'S', 't', 'a', 'g', 'e', 0,
    'I', 't', 'e', 'm', 'C', 'l', 'i', 'p', 's', 'C', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 'T', 'o', 'S', 'h', 'a', 'p', 'e', 0,
    'A', 'f', 't', 'e', 'r', 'S', 'y', 'n', 'c', 'h', 'r', 'o', 'n', 'i', 'z', 'i', 'n', 'g', 'S', 't', 'a', 'g', 'e', 0,
    's', 'e', 't', 'P', 'e', 'r', 's', 'i', 's', 't', 'e', 'n', 't', 'S', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 0,
    's', 'e', 't', 'C', 'l', 'e', 'a', 'r', 'B', 'e', 'f', 'o', 'r', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 'C', 'h', 'i', 'l', 'd', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 's', 0,
    's', 'e', 't', 'A', 'c', 'c', 'e', 'p', 't', 'e', 'd', 'M', 'o', 'u', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 's', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'F', 'r', 'a', 'm', 'e', 'b', 'u', 'f', 'f', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'F', 'r', 'a', 'm', 'e', 'b', 'u', 'f', 'f', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'Q', 'S', 'G', 'V', 'e', 'r', 't', 'e', 'x', 'C', 'o', 'l', 'o', 'r', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'Q', 'S', 'G', 'N', 'o', 'd', 'e', ':', ':', 'D', 'i', 'r', 't', 'y', 'S', 't', 'a', 't', 'e', 'B', 'i', 't', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', ':', ':', 'A', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 0,
    'a', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 'I', 't', 'e', 'm', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'i', 's', 'P', 'e', 'r', 's', 'i', 's', 't', 'e', 'n', 't', 'S', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'F', 'r', 'o', 'm', 'I', 'm', 'a', 'g', 'e', 0,
    'T', 'e', 'x', 't', 'u', 'r', 'e', 'H', 'a', 's', 'A', 'l', 'p', 'h', 'a', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'V', 'i', 'e', 'w', ':', ':', 'R', 'e', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    'I', 't', 'e', 'm', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 'H', 'a', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'I', 't', 'e', 'm', 'C', 'h', 'i', 'l', 'd', 'R', 'e', 'm', 'o', 'v', 'e', 'd', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', ':', ':', 'I', 't', 'e', 'm', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'I', 't', 'e', 'm', 'A', 'c', 'c', 'e', 'p', 't', 's', 'I', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'F', 'o', 'l', 'l', 'o', 'w', 's', 'I', 't', 'e', 'm', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'W', 'r', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    'Q', 'S', 'G', 'T', 'e', 'x', 't', 'u', 'r', 'e', ':', ':', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 0,
    'i', 'n', 's', 'e', 'r', 't', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    's', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 'A', 'b', 'o', 'u', 't', 'T', 'o', 'S', 't', 'o', 'p', 0,
    's', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 'l', 'p', 'h', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'h', 'a', 's', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'A', 'l', 'p', 'h', 'a', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    's', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 'I', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 'd', 0,
    's', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 'I', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'd', 0,
    'c', 'h', 'i', 'l', 'd', 'M', 'o', 'u', 's', 'e', 'E', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'I', 't', 'e', 'm', 'O', 'p', 'a', 'c', 'i', 't', 'y', 'H', 'a', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'I', 't', 'e', 'm', 'V', 'i', 's', 'i', 'b', 'l', 'e', 'H', 'a', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'm', 'o', 'u', 's', 'e', 'D', 'o', 'u', 'b', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 'E', 'v', 'e', 'n', 't', 0,
    'Q', 'S', 'G', 'T', 'e', 'x', 't', 'u', 'r', 'e', ':', ':', 'W', 'r', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    'Q', 'S', 'G', 'S', 'i', 'm', 'p', 'l', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'N', 'o', 'd', 'e', 0,
    'Q', 'S', 'G', 'B', 'a', 's', 'i', 'c', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'N', 'o', 'd', 'e', 0,
    'i', 'n', 's', 'e', 'r', 't', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 'A', 'f', 't', 'e', 'r', 0,
    's', 'e', 't', 'S', 'h', 'a', 'd', 'e', 'r', 'S', 'o', 'u', 'r', 'c', 'e', 'F', 'i', 'l', 'e', 's', 0,
    's', 'e', 't', 'V', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', ':', ':', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'Q', 'S', 'G', 'F', 'l', 'a', 't', 'C', 'o', 'l', 'o', 'r', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'B', 'e', 'f', 'o', 'r', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'S', 't', 'a', 'g', 'e', 0,
    'o', 'p', 'e', 'n', 'g', 'l', 'C', 'o', 'n', 't', 'e', 'x', 't', 'C', 'r', 'e', 'a', 't', 'e', 'd', 0,
    'c', 'l', 'e', 'a', 'r', 'B', 'e', 'f', 'o', 'r', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 0,
    'T', 'e', 'x', 't', 'u', 'r', 'e', 'O', 'w', 'n', 's', 'G', 'L', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'S', 'i', 'z', 'e', 'R', 'o', 'o', 't', 'O', 'b', 'j', 'e', 'c', 't', 'T', 'o', 'V', 'i', 'e', 'w', 0,
    'S', 'i', 'z', 'e', 'V', 'i', 'e', 'w', 'T', 'o', 'R', 'o', 'o', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 'c', 'a', 'l', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 's', 'B', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', 'G', 'r', 'a', 'b', 'R', 'e', 's', 'u', 'l', 't', 0,
    'n', 'e', 'x', 't', 'I', 't', 'e', 'm', 'I', 'n', 'F', 'o', 'c', 'u', 's', 'C', 'h', 'a', 'i', 'n', 0,
    's', 'e', 't', 'A', 'c', 'c', 'e', 'p', 't', 'H', 'o', 'v', 'e', 'r', 'E', 'v', 'e', 'n', 't', 's', 0,
    'a', 'c', 'c', 'e', 'p', 't', 'e', 'd', 'M', 'o', 'u', 's', 'e', 'B', 'u', 't', 't', 'o', 'n', 's', 0,
    'I', 't', 'e', 'm', 'P', 'a', 'r', 'e', 'n', 't', 'H', 'a', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'I', 't', 'e', 'm', 'C', 'h', 'i', 'l', 'd', 'A', 'd', 'd', 'e', 'd', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'i', 'n', 'c', 'u', 'b', 'a', 't', 'i', 'o', 'n', 'C', 'o', 'n', 't', 'r', 'o', 'l', 'l', 'e', 'r', 0,
    's', 'e', 't', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'W', 'r', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'A', 'l', 'l', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 's', 0,
    'Q', 'S', 'G', 'N', 'o', 'd', 'e', ':', ':', 'D', 'i', 'r', 't', 'y', 'S', 't', 'a', 't', 'e', 0,
    'R', 'e', 'q', 'u', 'i', 'r', 'e', 's', 'D', 'e', 't', 'e', 'r', 'm', 'i', 'n', 'a', 'n', 't', 0,
    's', 'e', 't', 'S', 'h', 'a', 'd', 'e', 'r', 'S', 'o', 'u', 'r', 'c', 'e', 'F', 'i', 'l', 'e', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 'A', 's', 'P', 'o', 'i', 'n', 't', '2', 'D', 0,
    'm', 'a', 'r', 'k', 'V', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 'D', 'i', 'r', 't', 'y', 0,
    's', 'e', 't', 'I', 'n', 'd', 'e', 'x', 'D', 'a', 't', 'a', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'A', 'l', 'w', 'a', 'y', 's', 'U', 'p', 'l', 'o', 'a', 'd', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    's', 'e', 't', 'P', 'r', 'o', 'j', 'e', 'c', 't', 'i', 'o', 'n', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'Q', 'S', 'G', 'A', 'b', 's', 't', 'r', 'a', 'c', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'A', 'f', 't', 'e', 'r', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 'S', 't', 'a', 'g', 'e', 0,
    'C', 'o', 'n', 't', 'e', 'x', 't', 'N', 'o', 't', 'A', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 0,
    'b', 'e', 'f', 'o', 'r', 'e', 'S', 'y', 'n', 'c', 'h', 'r', 'o', 'n', 'i', 'z', 'i', 'n', 'g', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'F', 'r', 'o', 'm', 'I', 'd', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'R', 'e', 'n', 'd', 'e', 'r', 'C', 'o', 'n', 't', 'r', 'o', 'l', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'T', 'a', 'r', 'g', 'e', 't', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 'i', 'z', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    's', 'e', 't', 'P', 'e', 'r', 'f', 'o', 'r', 'm', 'a', 'n', 'c', 'e', 'H', 'i', 'n', 't', 's', 0,
    's', 'e', 't', 'A', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 'O', 'n', 'T', 'a', 'b', 0,
    'i', 's', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', '*', '>', 0,
    'Q', 'S', 'G', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'Q', 'S', 'G', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'h', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'W', 'r', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'M', 'i', 'p', 'm', 'a', 'p', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 0,
    'M', 'i', 'r', 'r', 'o', 'r', 'H', 'o', 'r', 'i', 'z', 'o', 'n', 't', 'a', 'l', 'l', 'y', 0,
    'O', 'w', 'n', 's', 'O', 'p', 'a', 'q', 'u', 'e', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', ':', ':', 'F', 'l', 'a', 'g', 's', 0,
    'R', 'e', 'q', 'u', 'i', 'r', 'e', 's', 'F', 'u', 'l', 'l', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'm', 'a', 'r', 'k', 'I', 'n', 'd', 'e', 'x', 'D', 'a', 't', 'a', 'D', 'i', 'r', 't', 'y', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'R', 'e', 'c', 't', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'i', 's', 'V', 'e', 'r', 't', 'e', 'x', 'C', 'o', 'o', 'r', 'd', 'i', 'n', 'a', 't', 'e', 0,
    'C', 'l', 'e', 'a', 'r', 'S', 't', 'e', 'n', 'c', 'i', 'l', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'a', 'f', 't', 'e', 'r', 'S', 'y', 'n', 'c', 'h', 'r', 'o', 'n', 'i', 'z', 'i', 'n', 'g', 0,
    'T', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'a', 'n', 'U', 's', 'e', 'A', 't', 'l', 'a', 's', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'V', 'i', 'e', 'w', ':', ':', 'S', 't', 'a', 't', 'u', 's', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'T', 'e', 'x', 't', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'a', 't', 't', 'a', 'c', 'h', 'e', 'd', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    's', 'e', 't', 'P', 'e', 'r', 'f', 'o', 'r', 'm', 'a', 'n', 'c', 'e', 'H', 'i', 'n', 't', 0,
    'Q', 'S', 'G', 'D', 'y', 'n', 'a', 'm', 'i', 'c', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'B', 'i', 'n', 'd', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'Q', 'S', 'G', 'S', 'i', 'm', 'p', 'l', 'e', 'R', 'e', 'c', 't', 'N', 'o', 'd', 'e', 0,
    's', 'e', 't', 'O', 'p', 'a', 'q', 'u', 'e', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'Q', 'S', 'G', 'N', 'o', 'd', 'e', ':', ':', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'C', 'u', 's', 't', 'o', 'm', 'C', 'o', 'm', 'p', 'i', 'l', 'e', 'S', 't', 'e', 'p', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', ':', ':', 'F', 'l', 'a', 'g', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 'S', 'h', 'a', 'd', 'e', 'r', 0,
    'i', 'n', 'd', 'e', 'x', 'D', 'a', 't', 'a', 'A', 's', 'U', 'S', 'h', 'o', 'r', 't', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'G', 'L', '_', 'T', 'R', 'I', 'A', 'N', 'G', 'L', 'E', '_', 'S', 'T', 'R', 'I', 'P', 0,
    's', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    's', 'c', 'h', 'e', 'd', 'u', 'l', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'J', 'o', 'b', 0,
    'T', 'e', 'x', 't', 'u', 'r', 'e', 'H', 'a', 's', 'M', 'i', 'p', 'm', 'a', 'p', 's', 0,
    'r', 'e', 's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'O', 'p', 'a', 'q', 'u', 'e', 'P', 'a', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'P', 'a', 'i', 'n', 't', 'e', 'd', 'I', 't', 'e', 'm', 0,
    'r', 'e', 's', 'e', 't', 'A', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'i', 'n', 'g', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'I', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 0,
    'u', 'n', 'g', 'r', 'a', 'b', 'T', 'o', 'u', 'c', 'h', 'P', 'o', 'i', 'n', 't', 's', 0,
    'a', 'c', 'c', 'e', 'p', 't', 'H', 'o', 'v', 'e', 'r', 'E', 'v', 'e', 'n', 't', 's', 0,
    's', 'e', 't', 'I', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    's', 'e', 't', 'B', 'a', 's', 'e', 'l', 'i', 'n', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', ':', ':', 'F', 'l', 'a', 'g', 's', 0,
    'i', 's', 'T', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'f', 'r', 'a', 'm', 'e', 'b', 'u', 'f', 'f', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'c', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'm', 'o', 'u', 's', 'e', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'i', 's', 'S', 'i', 'g', 'n', 'a', 'l', 'C', 'o', 'n', 'n', 'e', 'c', 't', 'e', 'd', 0,
    's', 'e', 'n', 'd', 'e', 'r', 'S', 'i', 'g', 'n', 'a', 'l', 'I', 'n', 'd', 'e', 'x', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    'v', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'W', 'r', 'a', 'p', 'M', 'o', 'd', 'e', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'd', 'F', 'r', 'o', 'm', 'A', 't', 'l', 'a', 's', 0,
    'M', 'i', 'r', 'r', 'o', 'r', 'V', 'e', 'r', 't', 'i', 'c', 'a', 'l', 'l', 'y', 0,
    'Q', 'S', 'G', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'N', 'o', 'd', 'e', 0,
    's', 'e', 't', 'I', 's', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'u', 'l', 'a', 'r', 0,
    'i', 's', 'S', 'u', 'b', 't', 'r', 'e', 'e', 'B', 'l', 'o', 'c', 'k', 'e', 'd', 0,
    'p', 'r', 'e', 'p', 'e', 'n', 'd', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 0,
    'D', 'i', 'r', 't', 'y', 'N', 'o', 'd', 'e', 'R', 'e', 'm', 'o', 'v', 'e', 'd', 0,
    'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'i', 'n', 'd', 'e', 'x', 'D', 'a', 't', 'a', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'p', 'r', 'o', 'j', 'e', 'c', 't', 'i', 'o', 'n', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'C', 'l', 'e', 'a', 'r', 'D', 'e', 'p', 't', 'h', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'C', 'l', 'e', 'a', 'r', 'C', 'o', 'l', 'o', 'r', 'B', 'u', 'f', 'f', 'e', 'r', 0,
    'r', 'e', 's', 'e', 't', 'O', 'p', 'e', 'n', 'G', 'L', 'S', 't', 'a', 't', 'e', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'T', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'm', 'o', 'u', 's', 'e', 'G', 'r', 'a', 'b', 'b', 'e', 'r', 'I', 't', 'e', 'm', 0,
    'f', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 'c', 'a', 'l', 'e', 0,
    'p', 'e', 'r', 'f', 'o', 'r', 'm', 'a', 'n', 'c', 'e', 'H', 'i', 'n', 't', 's', 0,
    'a', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 'O', 'n', 'T', 'a', 'b', 0,
    't', 'o', 'u', 'c', 'h', 'U', 'n', 'g', 'r', 'a', 'b', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'U', 'n', 'g', 'r', 'a', 'b', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'Q', 'u', 'e', 'r', 'y', 0,
    'f', 'o', 'r', 'c', 'e', 'A', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 0,
    'm', 'a', 'p', 'R', 'e', 'c', 't', 'F', 'r', 'o', 'm', 'S', 'c', 'e', 'n', 'e', 0,
    's', 'e', 't', 'K', 'e', 'e', 'p', 'T', 'o', 'u', 'c', 'h', 'G', 'r', 'a', 'b', 0,
    's', 'e', 't', 'K', 'e', 'e', 'p', 'M', 'o', 'u', 's', 'e', 'G', 'r', 'a', 'b', 0,
    's', 'e', 't', 'I', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'W', 'i', 'd', 't', 'h', 0,
    'I', 't', 'e', 'm', 'A', 'c', 'c', 'e', 'p', 't', 's', 'D', 'r', 'o', 'p', 's', 0,
    'I', 't', 'e', 'm', 'I', 's', 'F', 'o', 'c', 'u', 's', 'S', 'c', 'o', 'p', 'e', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', ':', ':', 'F', 'l', 'a', 'g', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'B', 'y', 't', 'e', 'C', 'o', 'u', 'n', 't', 0,
    'r', 'e', 'l', 'e', 'a', 's', 'e', 'R', 'e', 's', 'o', 'u', 'r', 'c', 'e', 's', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'P', 'i', 'x', 'e', 'l', 'R', 'a', 't', 'i', 'o', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'm', 'i', 'p', 'm', 'a', 'p', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'N', 'o', 'd', 'e', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'C', 'h', 'i', 'l', 'd', 'N', 'o', 'd', 'e', 0,
    'O', 'p', 'a', 'c', 'i', 't', 'y', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 'T', 'y', 'p', 'e', 0,
    'm', 'o', 'd', 'e', 'l', 'V', 'i', 'e', 'w', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'i', 'n', 'd', 'e', 'x', 'D', 'a', 't', 'a', 'A', 's', 'U', 'I', 'n', 't', 0,
    'G', 'L', '_', 'T', 'R', 'I', 'A', 'N', 'G', 'L', 'E', '_', 'F', 'A', 'N', 0,
    's', 'e', 't', 'V', 'i', 'e', 'w', 'p', 'o', 'r', 't', 'R', 'e', 'c', 't', 0,
    's', 'c', 'e', 'n', 'e', 'G', 'r', 'a', 'p', 'h', 'E', 'r', 'r', 'o', 'r', 0,
    'b', 'e', 'f', 'o', 'r', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 0,
    'a', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 'I', 't', 'e', 'm', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'R', 'e', 'q', 'u', 'e', 's', 't', 'e', 'd', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'W', 'i', 'n', 'd', 'o', 'w', 'F', 'o', 'r', 0,
    's', 'e', 't', 'R', 'e', 'n', 'd', 'e', 'r', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'F', 'a', 's', 't', 'F', 'B', 'O', 'R', 'e', 's', 'i', 'z', 'i', 'n', 'g', 0,
    'h', 'o', 'v', 'e', 'r', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'o', 'v', 'e', 'r', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'a', 'p', 'R', 'e', 'c', 't', 'F', 'r', 'o', 'm', 'I', 't', 'e', 'm', 0,
    's', 'c', 'o', 'p', 'e', 'd', 'F', 'o', 'c', 'u', 's', 'I', 't', 'e', 'm', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'I', 't', 'e', 'm', 'S', 'c', 'e', 'n', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'I', 't', 'e', 'm', 'H', 'a', 's', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'P', 'a', 'i', 'n', 't', 'N', 'o', 'd', 'e', 0,
    'm', 'o', 'u', 's', 'e', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'g', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'a', 's', 'p', 'e', 'c', 't', 'R', 'a', 't', 'i', 'o', 'M', 'o', 'd', 'e', 0,
    'h', 'a', 's', 'A', 'l', 'p', 'h', 'a', 'C', 'h', 'a', 'n', 'n', 'e', 'l', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'i', 's', 'A', 't', 'l', 'a', 's', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    's', 'e', 't', 'O', 'w', 'n', 's', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'Q', 'S', 'G', 'O', 'p', 'a', 'c', 'i', 't', 'y', 'N', 'o', 'd', 'e', 0,
    'o', 'p', 'a', 'q', 'u', 'e', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'D', 'i', 'r', 't', 'y', 'N', 'o', 'd', 'e', 'A', 'd', 'd', 'e', 'd', 0,
    'Q', 'S', 'G', 'N', 'o', 'd', 'e', ':', ':', 'F', 'l', 'a', 'g', 's', 0,
    'f', 'r', 'a', 'g', 'm', 'e', 'n', 't', 'S', 'h', 'a', 'd', 'e', 'r', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'N', 'a', 'm', 'e', 's', 0,
    'c', 'o', 'm', 'b', 'i', 'n', 'e', 'd', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'i', 's', 'O', 'p', 'a', 'c', 'i', 't', 'y', 'D', 'i', 'r', 't', 'y', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 'C', 'o', 'u', 'n', 't', 0,
    's', 'e', 't', 'D', 'r', 'a', 'w', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'D', 'y', 'n', 'a', 'm', 'i', 'c', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'A', 'f', 't', 'e', 'r', 'S', 'w', 'a', 'p', 'S', 't', 'a', 'g', 'e', 0,
    'a', 'f', 't', 'e', 'r', 'A', 'n', 'i', 'm', 'a', 't', 'i', 'n', 'g', 0,
    'a', 'f', 't', 'e', 'r', 'R', 'e', 'n', 'd', 'e', 'r', 'i', 'n', 'g', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'T', 'a', 'r', 'g', 'e', 't', 'I', 'd', 0,
    'o', 'p', 'a', 'q', 'u', 'e', 'P', 'a', 'i', 'n', 't', 'i', 'n', 'g', 0,
    'd', 'r', 'a', 'g', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'a', 'g', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'o', 'v', 'e', 'r', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'a', 'p', 'R', 'e', 'c', 't', 'T', 'o', 'S', 'c', 'e', 'n', 'e', 0,
    'h', 'a', 's', 'A', 'c', 't', 'i', 'v', 'e', 'F', 'o', 'c', 'u', 's', 0,
    'i', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'b', 'a', 's', 'e', 'l', 'i', 'n', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'R', 'e', 'n', 'd', 'e', 'r', 'e', 'r', 0,
    'm', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'i', 's', 'R', 'e', 'c', 't', 'a', 'n', 'g', 'u', 'l', 'a', 'r', 0,
    'D', 'i', 'r', 't', 'y', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'D', 'i', 'r', 't', 'y', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'U', 's', 'e', 'P', 'r', 'e', 'p', 'r', 'o', 'c', 'e', 's', 's', 0,
    'O', 'w', 'n', 'e', 'd', 'B', 'y', 'P', 'a', 'r', 'e', 'n', 't', 0,
    'Q', 'S', 'G', 'N', 'o', 'd', 'e', ':', ':', 'F', 'l', 'a', 'g', 0,
    'B', 'a', 's', 'i', 'c', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'i', 's', 'M', 'a', 't', 'r', 'i', 'x', 'D', 'i', 'r', 't', 'y', 0,
    'S', 't', 'a', 't', 'i', 'c', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'S', 't', 'r', 'e', 'a', 'm', 'P', 'a', 't', 't', 'e', 'r', 'n', 0,
    'G', 'L', '_', 'L', 'I', 'N', 'E', '_', 'S', 'T', 'R', 'I', 'P', 0,
    's', 'e', 't', 'C', 'l', 'e', 'a', 'r', 'C', 'o', 'l', 'o', 'r', 0,
    's', 'e', 't', 'D', 'e', 'v', 'i', 'c', 'e', 'R', 'e', 'c', 't', 0,
    'o', 'p', 'e', 'n', 'g', 'l', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    's', 'e', 't', 'R', 'e', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 'c', 'a', 'l', 'e', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'd', 'r', 'a', 'g', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'N', 'o', 'd', 'e', 0,
    'm', 'a', 'p', 'R', 'e', 'c', 't', 'T', 'o', 'I', 't', 'e', 'm', 0,
    'k', 'e', 'e', 'p', 'T', 'o', 'u', 'c', 'h', 'G', 'r', 'a', 'b', 0,
    'k', 'e', 'e', 'p', 'M', 'o', 'u', 's', 'e', 'G', 'r', 'a', 'b', 0,
    'i', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'W', 'i', 'd', 't', 'h', 0,
    's', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'I', 't', 'e', 'm', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'P', 'i', 'x', 'm', 'a', 'p', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    's', 't', 'a', 't', 'u', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'k', 'e', 'y', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'f', 'o', 'c', 'u', 's', 'O', 'u', 't', 'E', 'v', 'e', 'n', 't', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'o', 'd', 'e', 0,
    'P', 'y', 'Q', 't', '5', '.', 'Q', 't', 'Q', 'u', 'i', 'c', 'k', 0,
    's', 'e', 't', 'F', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 0,
    'c', 'h', 'i', 'l', 'd', 'A', 't', 'I', 'n', 'd', 'e', 'x', 0,
    'O', 'w', 'n', 's', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'O', 'w', 'n', 's', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'C', 'l', 'i', 'p', 'N', 'o', 'd', 'e', 'T', 'y', 'p', 'e', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'S', 'h', 'a', 'd', 'e', 'r', 0,
    's', 'i', 'z', 'e', 'O', 'f', 'V', 'e', 'r', 't', 'e', 'x', 0,
    'G', 'L', '_', 'T', 'R', 'I', 'A', 'N', 'G', 'L', 'E', 'S', 0,
    'G', 'L', '_', 'L', 'I', 'N', 'E', '_', 'L', 'O', 'O', 'P', 0,
    'c', 'r', 'e', 'a', 't', 'e', 'S', 'h', 'a', 'd', 'e', 'r', 0,
    's', 'e', 't', 'C', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    'v', 'i', 'e', 'w', 'p', 'o', 'r', 't', 'R', 'e', 'c', 't', 0,
    'c', 'o', 'l', 'o', 'r', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    't', 'e', 'x', 't', 'D', 'o', 'c', 'u', 'm', 'e', 'n', 't', 0,
    's', 'c', 'e', 'n', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'T', 'a', 'r', 'g', 'e', 't', 0,
    's', 'e', 't', 'F', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 's', 'S', 'i', 'z', 'e', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'P', 'o', 'l', 'i', 's', 'h', 0,
    'm', 'a', 'p', 'F', 'r', 'o', 'm', 'S', 'c', 'e', 'n', 'e', 0,
    'i', 's', 'F', 'o', 'c', 'u', 's', 'S', 'c', 'o', 'p', 'e', 0,
    'a', 'n', 't', 'i', 'a', 'l', 'i', 'a', 's', 'i', 'n', 'g', 0,
    'c', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 'R', 'e', 'c', 't', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'I', 'm', 'a', 'g', 'e', 0,
    'f', 'o', 'c', 'u', 's', 'I', 'n', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'L', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'D', 'i', 'r', 't', 'y', 'O', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'f', 'r', 'a', 'm', 'e', 'S', 'w', 'a', 'p', 'p', 'e', 'd', 0,
    'b', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'o', 'w', 'n', 's', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'N', 'o', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'Q', 'S', 'G', 'C', 'l', 'i', 'p', 'N', 'o', 'd', 'e', 0,
    's', 'e', 't', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'n', 'e', 'x', 't', 'S', 'i', 'b', 'l', 'i', 'n', 'g', 0,
    'd', 'i', 'r', 't', 'y', 'S', 't', 'a', 't', 'e', 's', 0,
    'D', 'i', 'r', 't', 'y', 'M', 'a', 't', 'r', 'i', 'x', 0,
    's', 'i', 'z', 'e', 'O', 'f', 'I', 'n', 'd', 'e', 'x', 0,
    'd', 'r', 'a', 'w', 'i', 'n', 'g', 'M', 'o', 'd', 'e', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'C', 'o', 'u', 'n', 't', 0,
    'Q', 'S', 'G', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'Q', 'S', 'G', 'M', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 'S', 'c', 'e', 'n', 'e', 0,
    'c', 'o', 'n', 't', 'e', 'n', 't', 'I', 't', 'e', 'm', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'p', 'o', 'l', 'i', 's', 'h', 'I', 't', 'e', 'm', 's', 0,
    'g', 'r', 'a', 'b', 'T', 'o', 'I', 'm', 'a', 'g', 'e', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'V', 'a', 'l', 'i', 'd', 0,
    'm', 'a', 'p', 'F', 'r', 'o', 'm', 'I', 't', 'e', 'm', 0,
    'u', 'n', 'g', 'r', 'a', 'b', 'M', 'o', 'u', 's', 'e', 0,
    's', 'e', 't', 'R', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    'r', 'e', 's', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    's', 't', 'a', 'c', 'k', 'B', 'e', 'f', 'o', 'r', 'e', 0,
    'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'S', 'i', 'z', 'e', 0,
    's', 'y', 'n', 'c', 'h', 'r', 'o', 'n', 'i', 'z', 'e', 0,
    'r', 'o', 'o', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    't', 'a', 'b', 'l', 'e', 't', 'E', 'v', 'e', 'n', 't', 0,
    'u', 'n', 's', 'e', 't', 'C', 'u', 'r', 's', 'o', 'r', 0,
    's', 'e', 't', 'G', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'e', 'x', 'p', 'o', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'a', 't', 'c', 'h', 'P', 'o', 'l', 'i', 'c', 'y', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'C', 'l', 'a', 'm', 'p', 'T', 'o', 'E', 'd', 'g', 'e', 0,
    's', 'u', 'r', 'f', 'a', 'c', 'e', 'T', 'y', 'p', 'e', 0,
    'd', 'e', 't', 'e', 'r', 'm', 'i', 'n', 'a', 'n', 't', 0,
    's', 'e', 't', 'C', 'l', 'i', 'p', 'R', 'e', 'c', 't', 0,
    'f', 'o', 'c', 'u', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'u', 'p', 'd', 'a', 't', 'e', 'S', 't', 'a', 't', 'e', 0,
    'h', 'a', 's', 'M', 'i', 'p', 'm', 'a', 'p', 's', 0,
    'Q', 'S', 'G', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'p', 'r', 'e', 'p', 'r', 'o', 'c', 'e', 's', 's', 0,
    'f', 'i', 'r', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'c', 'h', 'i', 'l', 'd', 'C', 'o', 'u', 'n', 't', 0,
    'd', 'e', 'a', 'c', 't', 'i', 'v', 'a', 't', 'e', 0,
    'v', 'e', 'r', 't', 'e', 'x', 'D', 'a', 't', 'a', 0,
    'i', 'n', 'd', 'e', 'x', 'C', 'o', 'u', 'n', 't', 0,
    'i', 's', 'P', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'c', 'l', 'e', 'a', 'r', 'C', 'o', 'l', 'o', 'r', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'R', 'e', 'c', 't', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    'r', 'o', 'o', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'V', 'i', 'e', 'w', 0,
    's', 'a', 'v', 'e', 'T', 'o', 'F', 'i', 'l', 'e', 0,
    't', 'a', 'r', 'g', 'e', 't', 'S', 'i', 'z', 'e', 0,
    'w', 'i', 'd', 't', 'h', 'V', 'a', 'l', 'i', 'd', 0,
    'i', 't', 'e', 'm', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'm', 'a', 'p', 'T', 'o', 'S', 'c', 'e', 'n', 'e', 0,
    'r', 'e', 's', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'c', 'h', 'i', 'l', 'd', 'I', 't', 'e', 'm', 's', 0,
    's', 't', 'a', 'c', 'k', 'A', 'f', 't', 'e', 'r', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'I', 't', 'e', 'm', 0,
    'B', 'o', 't', 't', 'o', 'm', 'L', 'e', 'f', 't', 0,
    'Q', 'Q', 'u', 'i', 'c', 'k', 'I', 't', 'e', 'm', 0,
    'c', 'l', 'a', 's', 's', 'B', 'e', 'g', 'i', 'n', 0,
    'f', 'o', 'r', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    't', 'o', 'u', 'c', 'h', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'h', 'e', 'e', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'g', 'r', 'a', 'b', 'W', 'i', 'n', 'd', 'o', 'w', 0,
    's', 'e', 't', 'O', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'g', 'e', 'n', 'M', 'i', 'p', 'M', 'a', 'p', 's', 0,
    's', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 0,
    's', 'e', 't', 'T', 'e', 'x', 't', 'u', 'r', 'e', 0,
    'a', 't', 't', 'r', 'i', 'b', 'u', 't', 'e', 's', 0,
    's', 'e', 't', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'v', 'a', 'l', 'i', 'd', 'a', 't', 'e', 0,
    '_', '_', 'i', 'n', 'v', 'e', 'r', 't', '_', '_', 0,
    'f', 'i', 'l', 't', 'e', 'r', 'i', 'n', 'g', 0,
    'm', 'a', 'r', 'k', 'D', 'i', 'r', 't', 'y', 0,
    'l', 'a', 's', 't', 'C', 'h', 'i', 'l', 'd', 0,
    'i', 'n', 'd', 'e', 'x', 'D', 'a', 't', 'a', 0,
    'i', 'n', 'd', 'e', 'x', 'T', 'y', 'p', 'e', 0,
    'G', 'L', '_', 'P', 'O', 'I', 'N', 'T', 'S', 0,
    'G', 'L', '_', 'D', 'O', 'U', 'B', 'L', 'E', 0,
    'Q', 'S', 'G', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    'c', 'l', 'e', 'a', 'r', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'f', 'i', 'l', 'l', 'C', 'o', 'l', 'o', 'r', 0,
    'd', 'r', 'o', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'a', 'p', 'T', 'o', 'I', 't', 'e', 'm', 0,
    's', 'e', 't', 'S', 'm', 'o', 'o', 't', 'h', 0,
    'b', 'o', 'o', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    'r', 'e', 'a', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    'i', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'h', 'i', 'd', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'h', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'M', 'a', 't', 'r', 'i', 'x', 0,
    'o', 'p', 'e', 'r', 'a', 't', 'i', 'o', 'n', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 'I', 'd', 0,
    't', 'u', 'p', 'l', 'e', 'S', 'i', 'z', 'e', 0,
    's', 'e', 't', 'M', 'i', 'p', 'm', 'a', 'p', 0,
    'i', 's', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'l', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    'i', 's', 'E', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'r', 'e', 'c', 'e', 'i', 'v', 'e', 'r', 's', 0,
    's', 'e', 'n', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'p', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'm', 'a', 't', 'e', 'r', 'i', 'a', 'l', 0,
    'B', 'l', 'e', 'n', 'd', 'i', 'n', 'g', 0,
    'G', 'L', '_', 'L', 'I', 'N', 'E', 'S', 0,
    'G', 'L', '_', 'F', 'L', 'O', 'A', 'T', 0,
    's', 'e', 't', 'F', 'o', 'c', 'u', 's', 0,
    'h', 'a', 's', 'F', 'o', 'c', 'u', 's', 0,
    's', 'e', 't', 'S', 'c', 'a', 'l', 'e', 0,
    's', 'e', 't', 'S', 't', 'a', 't', 'e', 0,
    'T', 'o', 'p', 'R', 'i', 'g', 'h', 't', 0,
    'p', 'r', 'o', 't', 'o', 'c', 'o', 'l', 0,
    'g', 'e', 'o', 'm', 'e', 't', 'r', 'y', 0,
    'f', 'i', 'l', 'l', 'R', 'u', 'l', 'e', 0,
    'a', 'l', 'l', 'o', 'c', 'a', 't', 'e', 0,
    'c', 'l', 'i', 'p', 'R', 'e', 'c', 't', 0,
    's', 'e', 't', 'F', 'l', 'a', 'g', 's', 0,
    't', 'a', 'b', 'A', 'r', 'r', 'a', 'y', 0,
    't', 'a', 'b', 'S', 't', 'o', 'p', 's', 0,
    'r', 'o', 't', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'C', 'o', 'l', 'o', 'r', 0,
    'n', 'a', 'm', 'e', 'T', 'y', 'p', 'e', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    '_', '_', 'b', 'o', 'o', 'l', '_', '_', 0,
    '_', '_', 'i', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'a', 'n', 'd', '_', '_', 0,
    'Q', 'S', 'G', 'N', 'o', 'd', 'e', 0,
    'c', 'o', 'm', 'p', 'i', 'l', 'e', 0,
    'G', 'L', '_', 'B', 'Y', 'T', 'E', 0,
    'f', 'o', 'r', 'w', 'a', 'r', 'd', 0,
    'c', 'h', 'i', 'l', 'd', 'A', 't', 0,
    's', 'e', 't', 'C', 'l', 'i', 'p', 0,
    'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'L', 'o', 'a', 'd', 'i', 'n', 'g', 0,
    'e', 'x', 'p', 'o', 's', 'e', 'd', 0,
    'o', 'p', 'a', 'c', 'i', 't', 'y', 0,
    'N', 'e', 'a', 'r', 'e', 's', 't', 0,
    'b', 'u', 'f', 'f', 'e', 'r', 's', 0,
    'q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    's', 'e', 't', 'F', 'l', 'a', 'g', 0,
    'q', 'u', 'e', 'r', 'i', 'e', 's', 0,
    't', 'e', 'x', 't', 'u', 'r', 'e', 0,
    's', 'e', 't', 'R', 'e', 'c', 't', 0,
    'p', 'r', 'o', 'g', 'r', 'a', 'm', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 0,
    'c', 'o', 'm', 'p', 'a', 'r', 'e', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    '_', '_', 'a', 'n', 'd', '_', '_', 0,
    '_', '_', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'n', 't', '_', '_', 0,
    '_', '_', 'i', 'o', 'r', '_', '_', 0,
    'G', 'L', '_', 'I', 'N', 'T', 0,
    'p', 'o', 'l', 'i', 's', 'h', 0,
    's', 'm', 'o', 'o', 't', 'h', 0,
    'B', 'o', 't', 't', 'o', 'm', 0,
    'C', 'e', 'n', 't', 'e', 'r', 0,
    'r', 'e', 'n', 'd', 'e', 'r', 0,
    'e', 'r', 'r', 'o', 'r', 's', 0,
    'R', 'e', 'p', 'e', 'a', 't', 0,
    's', 't', 'r', 'i', 'd', 'e', 0,
    'm', 'i', 'p', 'm', 'a', 'p', 0,
    'e', 'n', 'g', 'i', 'n', 'e', 0,
    's', 'o', 'u', 'r', 'c', 'e', 0,
    'm', 'a', 't', 'r', 'i', 'x', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 0,
    'u', 'p', 'd', 'a', 't', 'e', 0,
    'c', 'u', 'r', 's', 'o', 'r', 0,
    'c', 'r', 'e', 'a', 't', 'e', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 0,
    's', 'e', 'n', 'd', 'e', 'r', 0,
    'v', 'a', 'l', 'u', 'e', '9', 0,
    'v', 'a', 'l', 'u', 'e', '8', 0,
    'v', 'a', 'l', 'u', 'e', '7', 0,
    'v', 'a', 'l', 'u', 'e', '6', 0,
    'v', 'a', 'l', 'u', 'e', '5', 0,
    'v', 'a', 'l', 'u', 'e', '4', 0,
    'v', 'a', 'l', 'u', 'e', '3', 0,
    'v', 'a', 'l', 'u', 'e', '2', 0,
    'v', 'a', 'l', 'u', 'e', '1', 0,
    'v', 'a', 'l', 'u', 'e', '0', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    'h', 'e', 'i', 'g', 'h', 't', 0,
    's', 'u', 'f', 'f', 'i', 'x', 0,
    'o', 'f', 'f', 's', 'e', 't', 0,
    'L', 'i', 'n', 'e', 'a', 'r', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    'f', 'i', 'l', 't', 'e', 'r', 0,
    's', 't', 'a', 't', 'u', 's', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 0,
    'o', 'p', 't', 'i', 'o', 'n', 0,
    'l', 'o', 'c', 'a', 'l', 'e', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    '_', '_', 'o', 'r', '_', '_', 0,
    'f', 'o', 'r', 'c', 'e', 0,
    'f', 'b', 'o', 'I', 'd', 0,
    'r', 'e', 'a', 'd', 'y', 0,
    'R', 'e', 'a', 'd', 'y', 0,
    'p', 'a', 'i', 'n', 't', 0,
    's', 'c', 'a', 'l', 'e', 0,
    't', 'y', 'p', 'e', 's', 0,
    'c', 'o', 'l', 'o', 'r', 0,
    'i', 'm', 'a', 'g', 'e', 0,
    'w', 'i', 'd', 't', 'h', 0,
    'c', 'o', 'u', 'n', 't', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'm', 's', 'e', 'c', 's', 0,
    's', 't', 'a', 't', 'e', 0,
    'g', 'r', 'a', 'b', 0,
    's', 'e', 't', 'Z', 0,
    'b', 'i', 'n', 'd', 0,
    'i', 't', 'e', 'm', 0,
    'r', 'e', 'c', 't', 0,
    'c', 'l', 'i', 'p', 0,
    'p', 'o', 'r', 't', 0,
    's', 'y', 'n', 'c', 0,
    's', 'e', 't', 'Y', 0,
    's', 'e', 't', 'X', 0,
    'N', 'u', 'l', 'l', 0,
    'm', 'o', 'd', 'e', 0,
    't', 'y', 'p', 'e', 0,
    'N', 'o', 'n', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'b', 'a', 's', 'e', 0,
    's', 'i', 'z', 'e', 0,
    'f', 'r', 'o', 'm', 0,
    's', 'o', 'r', 't', 0,
    'T', 'o', 'p', 0,
    'u', 'r', 'l', 0,
    'p', 'o', 's', 0,
    't', 'x', 0,
    's', 'w', 0,
    's', 'y', 0,
    's', 'x', 0,
    'z', 0,
};
#line 24 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickitem.sip"
#include <qquickitem.h>
#line 24 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickpainteditem.sip"
#include <qquickpainteditem.h>
#line 25 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgabstractrenderer.sip"
#include <qsgabstractrenderer.h>
#line 24 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
#include <qsgmaterial.h>
#line 24 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgnode.sip"
#include <qsgnode.h>
#line 24 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgsimpletexturenode.sip"
#include <qsgsimpletexturenode.h>
#line 801 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"

QSGMaterialShader* sipVH_QtQuick_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QSGMaterialShader* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QSGMaterialShader, &sipRes);

    return sipRes;
}

QSGMaterialType* sipVH_QtQuick_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QSGMaterialType* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QSGMaterialType, &sipRes);

    return sipRes;
}

int sipVH_QtQuick_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QSGMaterial*a0)
{
    int sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",const_cast<QSGMaterial *>(a0),sipType_QSGMaterial,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "i", &sipRes);

    return sipRes;
}

QSGTexture* sipVH_QtQuick_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QSGTexture* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QSGTexture, &sipRes);

    return sipRes;
}

QSGTexture* sipVH_QtQuick_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QSGTexture* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QSGTexture, &sipRes);

    return sipRes;
}

QRectF sipVH_QtQuick_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QRectF sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QRectF, &sipRes);

    return sipRes;
}

const char* sipVH_QtQuick_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int sipResKey)
{
    char* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "B", sipResKey, &sipRes);

    return sipRes;
}

const char* const* sipVH_QtQuick_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, int)
{
    char* const* sipRes = 0;
    int sipIsErr = 0;

#line 109 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgmaterial.sip"
        char **result = 0;
        PyObject *names = sipCallMethod(&sipIsErr, sipMethod, "");
        
        if (names)
        {
            if (PyList_Check(names))
            {
                // Note that the converted value will leak.  This shouldn't matter
                // because the data should be static anyway.
                result = new char *[PyList_GET_SIZE(names) + 1];
                result[PyList_GET_SIZE(names)] = 0;
        
                for (SIP_SSIZE_T i = 0; i < PyList_GET_SIZE(names); ++i)
                {
                    char *name;
                    PyObject *el = PyList_GET_ITEM(names, i);
                    
        #if PY_MAJOR_VERSION >= 3
                    PyObject *name_obj = PyUnicode_AsASCIIString(el);
        
                    name = (name_obj ? PyBytes_AS_STRING(name_obj) : 0);
        #else
                    name = PyString_AsString(el);
        #endif
        
                    if (!name)
                    {
                        result[i] = 0;
                        sipBadCatcherResult(sipMethod);
                        sipIsErr = 1;
                        break;
                    }
        
                    char *name_copy = new char[strlen(name) + 1];
                    strcpy(name_copy, name);
                    result[i] = name_copy;
        
        #if PY_MAJOR_VERSION >= 3
                    Py_DECREF(name_obj);
        #endif
                }
            }
            else
            {
                sipBadCatcherResult(sipMethod);
                sipIsErr = 1;
            }
            
            Py_DECREF(names);
        }
#line 929 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"

    Py_DECREF(sipMethod);

    if (sipIsErr)
        sipCallErrorHandler(sipErrorHandler, sipPySelf, sipGILState);

    SIP_RELEASE_GIL(sipGILState)

    return sipRes;
}

void sipVH_QtQuick_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QSGMaterialShader::RenderState& a0,QSGMaterial*a1,QSGMaterial*a2)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NDD",new QSGMaterialShader::RenderState(a0),sipType_QSGMaterialShader_RenderState,NULL,a1,sipType_QSGMaterial,NULL,a2,sipType_QSGMaterial,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, uint a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "u",a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QWindow* sipVH_QtQuick_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QPoint*a0)
{
    QWindow* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QPoint,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QWindow, &sipRes);

    return sipRes;
}

QSGTextureProvider* sipVH_QtQuick_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QSGTextureProvider* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QSGTextureProvider, &sipRes);

    return sipRes;
}

QSGNode* sipVH_QtQuick_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QSGNode*a0,QQuickItem::UpdatePaintNodeData*a1)
{
    QSGNode* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DD",a0,sipType_QSGNode,NULL,a1,sipType_QQuickItem_UpdatePaintNodeData,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QSGNode, &sipRes);

    return sipRes;
}

void sipVH_QtQuick_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QPainter*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QPainter,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QRectF& a0,const QRectF& a1)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NN",new QRectF(a0),sipType_QRectF,NULL,new QRectF(a1),sipType_QRectF,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

bool sipVH_QtQuick_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QQuickItem*a0,QEvent*a1)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DD",a0,sipType_QQuickItem,NULL,a1,sipType_QEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtQuick_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QDropEvent*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QDropEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QDragLeaveEvent*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QDragLeaveEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_18(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QDragMoveEvent*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QDragMoveEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_19(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QDragEnterEvent*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QDragEnterEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_20(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QHoverEvent*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QHoverEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_21(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QInputMethodEvent*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QInputMethodEvent,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtQuick_22(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QQuickItem::ItemChange a0,const QQuickItem::ItemChangeData& a1)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "FN",a0,sipType_QQuickItem_ItemChange,new QQuickItem::ItemChangeData(a1),sipType_QQuickItem_ItemChangeData,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QVariant sipVH_QtQuick_23(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, Qt::InputMethodQuery a0)
{
    QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "F",a0,sipType_Qt_InputMethodQuery);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

bool sipVH_QtQuick_24(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QPointF& a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "N",new QPointF(a0),sipType_QPointF,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

QQuickTextureFactory* sipVH_QtQuick_25(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,QSize*a1,const QSize& a2)
{
    QQuickTextureFactory* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NN",new QString(a0),sipType_QString,NULL,new QSize(a2),sipType_QSize,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H2H4)", sipType_QQuickTextureFactory, &sipRes, sipType_QSize, a1);

    return sipRes;
}

QPixmap sipVH_QtQuick_26(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,QSize*a1,const QSize& a2)
{
    QPixmap sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NN",new QString(a0),sipType_QString,NULL,new QSize(a2),sipType_QSize,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H5H4)", sipType_QPixmap, &sipRes, sipType_QSize, a1);

    return sipRes;
}

QImage sipVH_QtQuick_27(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,QSize*a1,const QSize& a2)
{
    QImage sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NN",new QString(a0),sipType_QString,NULL,new QSize(a2),sipType_QSize,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H5H4)", sipType_QImage, &sipRes, sipType_QSize, a1);

    return sipRes;
}

QImage sipVH_QtQuick_28(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QImage sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QImage, &sipRes);

    return sipRes;
}

QSGTexture* sipVH_QtQuick_29(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QQuickWindow*a0)
{
    QSGTexture* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QQuickWindow,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QSGTexture, &sipRes);

    return sipRes;
}

QQuickFramebufferObject::Renderer* sipVH_QtQuick_30(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QQuickFramebufferObject::Renderer* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QQuickFramebufferObject_Renderer, &sipRes);

    return sipRes;
}

void sipVH_QtQuick_31(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QQuickFramebufferObject*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QQuickFramebufferObject,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QOpenGLFramebufferObject* sipVH_QtQuick_32(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QSize& a0)
{
    QOpenGLFramebufferObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "N",new QSize(a0),sipType_QSize,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QOpenGLFramebufferObject, &sipRes);

    return sipRes;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QQuickWindow(void **);}
static const sipTypeDef *sipSubClass_QQuickWindow(void **sipCppRet)
{
    QObject *sipCpp = reinterpret_cast<QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickwindow.sip"
    static struct class_graph {
        const char *name;
        sipTypeDef **type;
        int yes, no;
    } graph[] = {
        {sipName_QSGTextureProvider, &sipType_QSGTextureProvider, -1, 1},
        {sipName_QSGTexture, &sipType_QSGTexture, 10, 2},
    #if QT_VERSION >= 0x050400
        {sipName_QQuickRenderControl, &sipType_QQuickRenderControl, -1, 3},
    #else
        {0, 0, -1, 3},
    #endif
        {sipName_QQuickItem, &sipType_QQuickItem, 11, 4},
        {sipName_QQuickTextureFactory, &sipType_QQuickTextureFactory, -1, 5},
    #if QT_VERSION >= 0x050400
        {sipName_QSGAbstractRenderer, &sipType_QSGAbstractRenderer, -1, 6},
    #else
        {0, 0, -1, 6},
    #endif
    #if QT_VERSION >= 0x050400
        {sipName_QQuickItemGrabResult, &sipType_QQuickItemGrabResult, -1, 7},
    #else
        {0, 0, -1, 7},
    #endif
    #if QT_VERSION >= 0x050400
        {sipName_QSGEngine, &sipType_QSGEngine, -1, 8},
    #else
        {0, 0, -1, 8},
    #endif
        {sipName_QQuickWindow, &sipType_QQuickWindow, 13, 9},
    #if QT_VERSION >= 0x050100
        {sipName_QQuickTextDocument, &sipType_QQuickTextDocument, -1, -1},
    #else
        {0, 0, -1, -1},
    #endif
        {sipName_QSGDynamicTexture, &sipType_QSGDynamicTexture, -1, -1},
    #if QT_VERSION >= 0x050200
        {sipName_QQuickFramebufferObject, &sipType_QQuickFramebufferObject, -1, 12},
    #else
        {0, 0, -1, 12},
    #endif
        {sipName_QQuickPaintedItem, &sipType_QQuickPaintedItem, -1, -1},
        {sipName_QQuickView, &sipType_QQuickView, -1, -1},
    };
    
    int i = 0;
    
    sipType = NULL;
    
    do
    {
        struct class_graph *cg = &graph[i];
    
        if (cg->name != NULL && sipCpp->inherits(cg->name))
        {
            sipType = *cg->type;
            i = cg->yes;
        }
        else
            i = cg->no;
    }
    while (i >= 0);
#line 1226 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"

    return sipType;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QSGNode(void **);}
static const sipTypeDef *sipSubClass_QSGNode(void **sipCppRet)
{
    QSGNode *sipCpp = reinterpret_cast<QSGNode *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 130 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qsgnode.sip"
    switch (sipCpp->type())
    {
    case QSGNode::BasicNodeType:
        sipType = sipType_QSGBasicGeometryNode;
        break;
    
    case QSGNode::GeometryNodeType:
        sipType = sipType_QSGGeometryNode;
        break;
    
    case QSGNode::TransformNodeType:
        sipType = sipType_QSGClipNode;
        break;
    
    case QSGNode::ClipNodeType:
        sipType = sipType_QSGTransformNode;
        break;
    
    case QSGNode::OpacityNodeType:
        sipType = sipType_QSGOpacityNode;
        break;
    
    default:
        sipType = 0;
    }
#line 1265 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"

    return sipType;
}


extern "C" {static PyObject *slot_QSGSimpleTextureNode_TextureCoordinatesTransformFlag___or__(PyObject *,PyObject *);}
static PyObject *slot_QSGSimpleTextureNode_TextureCoordinatesTransformFlag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QSGSimpleTextureNode::TextureCoordinatesTransformFlag a0;
        QSGSimpleTextureNode::TextureCoordinatesTransformMode* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QSGSimpleTextureNode_TextureCoordinatesTransformFlag, &a0, sipType_QSGSimpleTextureNode_TextureCoordinatesTransformMode, &a1, &a1State))
        {
            QSGSimpleTextureNode::TextureCoordinatesTransformMode*sipRes;

            sipRes = new QSGSimpleTextureNode::TextureCoordinatesTransformMode((a0 | *a1));
            sipReleaseType(a1,sipType_QSGSimpleTextureNode_TextureCoordinatesTransformMode,a1State);

            return sipConvertFromNewType(sipRes,sipType_QSGSimpleTextureNode_TextureCoordinatesTransformMode,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QSGSimpleTextureNode_TextureCoordinatesTransformFlag[] = {
    {(void *)slot_QSGSimpleTextureNode_TextureCoordinatesTransformFlag___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QSGNode_DirtyStateBit___or__(PyObject *,PyObject *);}
static PyObject *slot_QSGNode_DirtyStateBit___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QSGNode::DirtyStateBit a0;
        QSGNode::DirtyState* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QSGNode_DirtyStateBit, &a0, sipType_QSGNode_DirtyState, &a1, &a1State))
        {
            QSGNode::DirtyState*sipRes;

            sipRes = new QSGNode::DirtyState((a0 | *a1));
            sipReleaseType(a1,sipType_QSGNode_DirtyState,a1State);

            return sipConvertFromNewType(sipRes,sipType_QSGNode_DirtyState,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QSGNode_DirtyStateBit[] = {
    {(void *)slot_QSGNode_DirtyStateBit___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QSGNode_Flag___or__(PyObject *,PyObject *);}
static PyObject *slot_QSGNode_Flag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QSGNode::Flag a0;
        QSGNode::Flags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QSGNode_Flag, &a0, sipType_QSGNode_Flags, &a1, &a1State))
        {
            QSGNode::Flags*sipRes;

            sipRes = new QSGNode::Flags((a0 | *a1));
            sipReleaseType(a1,sipType_QSGNode_Flags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QSGNode_Flags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QSGNode_Flag[] = {
    {(void *)slot_QSGNode_Flag___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QSGMaterial_Flag___or__(PyObject *,PyObject *);}
static PyObject *slot_QSGMaterial_Flag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QSGMaterial::Flag a0;
        QSGMaterial::Flags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QSGMaterial_Flag, &a0, sipType_QSGMaterial_Flags, &a1, &a1State))
        {
            QSGMaterial::Flags*sipRes;

            sipRes = new QSGMaterial::Flags((a0 | *a1));
            sipReleaseType(a1,sipType_QSGMaterial_Flags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QSGMaterial_Flags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QSGMaterial_Flag[] = {
    {(void *)slot_QSGMaterial_Flag___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QSGMaterialShader_RenderState_DirtyState___or__(PyObject *,PyObject *);}
static PyObject *slot_QSGMaterialShader_RenderState_DirtyState___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QSGMaterialShader::RenderState::DirtyState a0;
        QSGMaterialShader::RenderState::DirtyStates* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QSGMaterialShader_RenderState_DirtyState, &a0, sipType_QSGMaterialShader_RenderState_DirtyStates, &a1, &a1State))
        {
            QSGMaterialShader::RenderState::DirtyStates*sipRes;

            sipRes = new QSGMaterialShader::RenderState::DirtyStates((a0 | *a1));
            sipReleaseType(a1,sipType_QSGMaterialShader_RenderState_DirtyStates,a1State);

            return sipConvertFromNewType(sipRes,sipType_QSGMaterialShader_RenderState_DirtyStates,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QSGMaterialShader_RenderState_DirtyState[] = {
    {(void *)slot_QSGMaterialShader_RenderState_DirtyState___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QSGAbstractRenderer_ClearModeBit___or__(PyObject *,PyObject *);}
static PyObject *slot_QSGAbstractRenderer_ClearModeBit___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QSGAbstractRenderer::ClearModeBit a0;
        QSGAbstractRenderer::ClearMode* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QSGAbstractRenderer_ClearModeBit, &a0, sipType_QSGAbstractRenderer_ClearMode, &a1, &a1State))
        {
            QSGAbstractRenderer::ClearMode*sipRes;

            sipRes = new QSGAbstractRenderer::ClearMode((a0 | *a1));
            sipReleaseType(a1,sipType_QSGAbstractRenderer_ClearMode,a1State);

            return sipConvertFromNewType(sipRes,sipType_QSGAbstractRenderer_ClearMode,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QSGAbstractRenderer_ClearModeBit[] = {
    {(void *)slot_QSGAbstractRenderer_ClearModeBit___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QQuickPaintedItem_PerformanceHint___or__(PyObject *,PyObject *);}
static PyObject *slot_QQuickPaintedItem_PerformanceHint___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QQuickPaintedItem::PerformanceHint a0;
        QQuickPaintedItem::PerformanceHints* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QQuickPaintedItem_PerformanceHint, &a0, sipType_QQuickPaintedItem_PerformanceHints, &a1, &a1State))
        {
            QQuickPaintedItem::PerformanceHints*sipRes;

            sipRes = new QQuickPaintedItem::PerformanceHints((a0 | *a1));
            sipReleaseType(a1,sipType_QQuickPaintedItem_PerformanceHints,a1State);

            return sipConvertFromNewType(sipRes,sipType_QQuickPaintedItem_PerformanceHints,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QQuickPaintedItem_PerformanceHint[] = {
    {(void *)slot_QQuickPaintedItem_PerformanceHint___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QQuickItem_Flag___or__(PyObject *,PyObject *);}
static PyObject *slot_QQuickItem_Flag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QQuickItem::Flag a0;
        QQuickItem::Flags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QQuickItem_Flag, &a0, sipType_QQuickItem_Flags, &a1, &a1State))
        {
            QQuickItem::Flags*sipRes;

            sipRes = new QQuickItem::Flags((a0 | *a1));
            sipReleaseType(a1,sipType_QQuickItem_Flags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QQuickItem_Flags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QQuickItem_Flag[] = {
    {(void *)slot_QQuickItem_Flag___or__, or_slot},
    {0, (sipPySlotType)0}
};

static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGTexture__Filtering, {0}}, sipNameNr_Filtering, 65, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGTexture__WrapMode, {0}}, sipNameNr_WrapMode, 65, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGSimpleTextureNode__TextureCoordinatesTransformFlag, {0}}, sipNameNr_TextureCoordinatesTransformFlag, 62, slots_QSGSimpleTextureNode_TextureCoordinatesTransformFlag},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGNode__DirtyStateBit, {0}}, sipNameNr_DirtyStateBit, 53, slots_QSGNode_DirtyStateBit},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGNode__Flag, {0}}, sipNameNr_Flag, 53, slots_QSGNode_Flag},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGNode__NodeType, {0}}, sipNameNr_NodeType, 53, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGMaterial__Flag, {0}}, sipNameNr_Flag, 45, slots_QSGMaterial_Flag},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGMaterialShader__RenderState__DirtyState, {0}}, sipNameNr_DirtyState, 49, slots_QSGMaterialShader_RenderState_DirtyState},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGGeometry__DataPattern, {0}}, sipNameNr_DataPattern, 37, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGEngine__CreateTextureOption, {0}}, sipNameNr_CreateTextureOption, 33, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QSGAbstractRenderer__ClearModeBit, {0}}, sipNameNr_ClearModeBit, 27, slots_QSGAbstractRenderer_ClearModeBit},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickWindow__RenderStage, {0}}, sipNameNr_RenderStage, 22, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickWindow__SceneGraphError, {0}}, sipNameNr_SceneGraphError, 22, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickWindow__CreateTextureOption, {0}}, sipNameNr_CreateTextureOption, 22, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickView__Status, {0}}, sipNameNr_Status, 19, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickView__ResizeMode, {0}}, sipNameNr_ResizeMode, 19, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickPaintedItem__PerformanceHint, {0}}, sipNameNr_PerformanceHint, 12, slots_QQuickPaintedItem_PerformanceHint},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickPaintedItem__RenderTarget, {0}}, sipNameNr_RenderTarget, 12, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickItem__TransformOrigin, {0}}, sipNameNr_TransformOrigin, 4, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickItem__ItemChange, {0}}, sipNameNr_ItemChange, 4, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QQuickItem__Flag, {0}}, sipNameNr_Flag, 4, slots_QQuickItem_Flag},
};


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef_QtQuick_QList_0101QQuickItem.mtd_base,
    &sipTypeDef_QtQuick_QQuickFramebufferObject.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickFramebufferObject_Renderer.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickImageProvider.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickItem.super.ctd_base,
    &enumTypes[20].etd_base,
    &sipTypeDef_QtQuick_QQuickItem_Flags.super.ctd_base,
    &enumTypes[19].etd_base,
    &sipTypeDef_QtQuick_QQuickItem_ItemChangeData.super.ctd_base,
    &enumTypes[18].etd_base,
    &sipTypeDef_QtQuick_QQuickItem_UpdatePaintNodeData.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickItemGrabResult.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickPaintedItem.super.ctd_base,
    &enumTypes[16].etd_base,
    &sipTypeDef_QtQuick_QQuickPaintedItem_PerformanceHints.super.ctd_base,
    &enumTypes[17].etd_base,
    &sipTypeDef_QtQuick_QQuickRenderControl.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickTextDocument.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickTextureFactory.super.ctd_base,
    &sipTypeDef_QtQuick_QQuickView.super.ctd_base,
    &enumTypes[15].etd_base,
    &enumTypes[14].etd_base,
    &sipTypeDef_QtQuick_QQuickWindow.super.ctd_base,
    &enumTypes[13].etd_base,
    &sipTypeDef_QtQuick_QQuickWindow_CreateTextureOptions.super.ctd_base,
    &enumTypes[11].etd_base,
    &enumTypes[12].etd_base,
    &sipTypeDef_QtQuick_QSGAbstractRenderer.super.ctd_base,
    &sipTypeDef_QtQuick_QSGAbstractRenderer_ClearMode.super.ctd_base,
    &enumTypes[10].etd_base,
    &sipTypeDef_QtQuick_QSGBasicGeometryNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGClipNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGDynamicTexture.super.ctd_base,
    &sipTypeDef_QtQuick_QSGEngine.super.ctd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef_QtQuick_QSGEngine_CreateTextureOptions.super.ctd_base,
    &sipTypeDef_QtQuick_QSGFlatColorMaterial.super.ctd_base,
    &sipTypeDef_QtQuick_QSGGeometry.super.ctd_base,
    &sipTypeDef_QtQuick_QSGGeometry_Attribute.super.ctd_base,
    &sipTypeDef_QtQuick_QSGGeometry_AttributeSet.super.ctd_base,
    &sipTypeDef_QtQuick_QSGGeometry_ColoredPoint2D.super.ctd_base,
    &enumTypes[8].etd_base,
    &sipTypeDef_QtQuick_QSGGeometry_Point2D.super.ctd_base,
    &sipTypeDef_QtQuick_QSGGeometry_TexturedPoint2D.super.ctd_base,
    &sipTypeDef_QtQuick_QSGGeometryNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGMaterial.super.ctd_base,
    &enumTypes[6].etd_base,
    &sipTypeDef_QtQuick_QSGMaterial_Flags.super.ctd_base,
    &sipTypeDef_QtQuick_QSGMaterialShader.super.ctd_base,
    &sipTypeDef_QtQuick_QSGMaterialShader_RenderState.super.ctd_base,
    &enumTypes[7].etd_base,
    &sipTypeDef_QtQuick_QSGMaterialShader_RenderState_DirtyStates.super.ctd_base,
    &sipTypeDef_QtQuick_QSGMaterialType.super.ctd_base,
    &sipTypeDef_QtQuick_QSGNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGNode_DirtyState.super.ctd_base,
    &enumTypes[3].etd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef_QtQuick_QSGNode_Flags.super.ctd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef_QtQuick_QSGOpacityNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGOpaqueTextureMaterial.super.ctd_base,
    &sipTypeDef_QtQuick_QSGSimpleRectNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGSimpleTextureNode.super.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef_QtQuick_QSGSimpleTextureNode_TextureCoordinatesTransformMode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGTexture.super.ctd_base,
    &enumTypes[0].etd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef_QtQuick_QSGTextureMaterial.super.ctd_base,
    &sipTypeDef_QtQuick_QSGTextureProvider.super.ctd_base,
    &sipTypeDef_QtQuick_QSGTransformNode.super.ctd_base,
    &sipTypeDef_QtQuick_QSGVertexColorMaterial.super.ctd_base,
};


/*
 * This defines the virtual handlers that this module implements and can be
 * used by other modules.
 */
static sipVirtHandlerFunc virtHandlersTable[] = {
    (sipVirtHandlerFunc)sipVH_QtQuick_0,
    (sipVirtHandlerFunc)sipVH_QtQuick_1,
    (sipVirtHandlerFunc)sipVH_QtQuick_2,
    (sipVirtHandlerFunc)sipVH_QtQuick_3,
    (sipVirtHandlerFunc)sipVH_QtQuick_4,
    (sipVirtHandlerFunc)sipVH_QtQuick_5,
    (sipVirtHandlerFunc)sipVH_QtQuick_6,
    (sipVirtHandlerFunc)sipVH_QtQuick_7,
    (sipVirtHandlerFunc)sipVH_QtQuick_8,
    (sipVirtHandlerFunc)sipVH_QtQuick_9,
    (sipVirtHandlerFunc)sipVH_QtQuick_10,
    (sipVirtHandlerFunc)sipVH_QtQuick_11,
    (sipVirtHandlerFunc)sipVH_QtQuick_12,
    (sipVirtHandlerFunc)sipVH_QtQuick_13,
    (sipVirtHandlerFunc)sipVH_QtQuick_14,
    (sipVirtHandlerFunc)sipVH_QtQuick_15,
    (sipVirtHandlerFunc)sipVH_QtQuick_16,
    (sipVirtHandlerFunc)sipVH_QtQuick_17,
    (sipVirtHandlerFunc)sipVH_QtQuick_18,
    (sipVirtHandlerFunc)sipVH_QtQuick_19,
    (sipVirtHandlerFunc)sipVH_QtQuick_20,
    (sipVirtHandlerFunc)sipVH_QtQuick_21,
    (sipVirtHandlerFunc)sipVH_QtQuick_22,
    (sipVirtHandlerFunc)sipVH_QtQuick_23,
    (sipVirtHandlerFunc)sipVH_QtQuick_24,
    (sipVirtHandlerFunc)sipVH_QtQuick_25,
    (sipVirtHandlerFunc)sipVH_QtQuick_26,
    (sipVirtHandlerFunc)sipVH_QtQuick_27,
    (sipVirtHandlerFunc)sipVH_QtQuick_28,
    (sipVirtHandlerFunc)sipVH_QtQuick_29,
    (sipVirtHandlerFunc)sipVH_QtQuick_30,
    (sipVirtHandlerFunc)sipVH_QtQuick_31,
    (sipVirtHandlerFunc)sipVH_QtQuick_32,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt5.QtCore", 1, NULL},
    {"PyQt5.QtNetwork", -1, NULL},
    {"PyQt5.QtQml", -1, NULL},
    {"PyQt5.QtGui", -1, NULL},
    {NULL, -1, NULL}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_QQuickWindow, {162, 0, 0}, NULL},
    {sipSubClass_QSGNode, {53, 255, 0}, NULL},
    {NULL, {0, 0, 0}, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtQuick = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_PyQt5_QtQuick,
    0,
    -1,
    sipStrings_QtQuick,
    importsTable,
    NULL,
    72,
    typesTable,
    NULL,
    0,
    NULL,
    0,
    NULL,
    virtHandlersTable,
    NULL,
    convertorsTable,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtQuick;
const sipExportedModuleDef *sipModuleAPI_QtQuick_QtCore;
const sipExportedModuleDef *sipModuleAPI_QtQuick_QtNetwork;
const sipExportedModuleDef *sipModuleAPI_QtQuick_QtQml;
const sipExportedModuleDef *sipModuleAPI_QtQuick_QtGui;

sip_qt_metaobject_func sip_QtQuick_qt_metaobject;
sip_qt_metacall_func sip_QtQuick_qt_metacall;
sip_qt_metacast_func sip_QtQuick_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_QtQuick
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initQtQuick
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt5.QtQuick",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_PyQt5_QtQuick, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_PyQt5_QtQuick), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule(SIP_MODULE_NAME);
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>(SIP_MODULE_NAME));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == NULL || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_QtQuick = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, SIP_MODULE_NAME "._C_API"));
#else
    sipAPI_QtQuick = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_QtQuick == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtQuick,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip_QtQuick_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtQuick_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtQuick_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_QtQuick_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtQuick,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI_QtQuick_QtCore = sipModuleAPI_QtQuick.em_imports[0].im_module;
    sipModuleAPI_QtQuick_QtNetwork = sipModuleAPI_QtQuick.em_imports[1].im_module;
    sipModuleAPI_QtQuick_QtQml = sipModuleAPI_QtQuick.em_imports[2].im_module;
    sipModuleAPI_QtQuick_QtGui = sipModuleAPI_QtQuick.em_imports[3].im_module;
#line 236 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtQuick/qquickwindow.sip"
qpyquick_post_init();
#line 1894 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtQuick/sipQtQuickcmodule.cpp"

    SIP_MODULE_RETURN(sipModule);
}
