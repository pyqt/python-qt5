/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:12 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 488 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"

#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 327 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 1016 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 99 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 51 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 165 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 54 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 57 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qbrush.sip"
#include <qbrush.h>
#line 60 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qpen.sip"
#include <qpen.h>
#line 63 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 66 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 69 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 72 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 75 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 638 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 78 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 81 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 84 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 87 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 90 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 93 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 120 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 96 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 99 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 89 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 102 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 333 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 105 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 108 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 479 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 111 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 165 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 114 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 117 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 200 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 120 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 140 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 123 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 126 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 129 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 132 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 135 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 606 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 138 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 141 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsPolygonItem.cpp"


class sipQGraphicsPolygonItem : public QGraphicsPolygonItem
{
public:
    sipQGraphicsPolygonItem(QGraphicsItem*);
    sipQGraphicsPolygonItem(const QPolygonF&,QGraphicsItem*);
    virtual ~sipQGraphicsPolygonItem();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent*);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent*);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent*);
    void sipProtectVirt_hoverEnterEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverLeaveEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverMoveEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent*);
    QVariant sipProtectVirt_inputMethodQuery(bool,Qt::InputMethodQuery) const;
    QVariant sipProtectVirt_itemChange(bool,QGraphicsItem::GraphicsItemChange,const QVariant&);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent*);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent*);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEvent(bool,QEvent*);
    bool sipProtectVirt_sceneEventFilter(bool,QGraphicsItem*,QEvent*);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent*);
    void sipProtect_updateMicroFocus();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent(QGraphicsSceneWheelEvent*);
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    bool sceneEvent(QEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    void advance(int);
    int type() const;
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    bool contains(const QPointF&) const;
    QPainterPath shape() const;
    QRectF boundingRect() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsPolygonItem(const sipQGraphicsPolygonItem &);
    sipQGraphicsPolygonItem &operator = (const sipQGraphicsPolygonItem &);

    char sipPyMethods[32];
};

sipQGraphicsPolygonItem::sipQGraphicsPolygonItem(QGraphicsItem*a0): QGraphicsPolygonItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsPolygonItem::sipQGraphicsPolygonItem(const QPolygonF& a0,QGraphicsItem*a1): QGraphicsPolygonItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsPolygonItem::~sipQGraphicsPolygonItem()
{
    sipCommonDtor(sipPySelf);
}

void sipQGraphicsPolygonItem::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_117(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_117(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPolygonItem::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsPolygonItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_125(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return sipVH_QtWidgets_125(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPolygonItem::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsPolygonItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsPolygonItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsPolygonItem::itemChange(a0,a1);

    extern QVariant sipVH_QtWidgets_108(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtWidgets_108(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

QVariant sipQGraphicsPolygonItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsPolygonItem::inputMethodQuery(a0);

    extern QVariant sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtWidgets_6(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtWidgets_7(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_104(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_104(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_104(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_104(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_104(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_104(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_121(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_121(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsPolygonItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsPolygonItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_126(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtWidgets_126(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsPolygonItem::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[23]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsPolygonItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_127(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return sipVH_QtWidgets_127(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsPolygonItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQGraphicsPolygonItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsPolygonItem::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QPainterPath sipQGraphicsPolygonItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsPolygonItem::opaqueArea();

    extern QPainterPath sipVH_QtWidgets_111(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_111(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQGraphicsPolygonItem::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsPolygonItem::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_123(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return sipVH_QtWidgets_123(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsPolygonItem::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QGraphicsPolygonItem::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtWidgets_113(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQGraphicsPolygonItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsPolygonItem::contains(a0);

    extern bool sipVH_QtWidgets_124(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtWidgets_124(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsPolygonItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[30]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsPolygonItem::shape();

    extern QPainterPath sipVH_QtWidgets_111(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_111(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QRectF sipQGraphicsPolygonItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[31]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return QGraphicsPolygonItem::boundingRect();

    extern QRectF sipVH_QtWidgets_112(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_112(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsPolygonItem::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dropEvent(a0) : dropEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusInEvent(a0) : focusInEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

QVariant sipQGraphicsPolygonItem::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg,Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ? QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

QVariant sipQGraphicsPolygonItem::sipProtectVirt_itemChange(bool sipSelfWasArg,QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    return (sipSelfWasArg ? QGraphicsItem::itemChange(a0,a1) : itemChange(a0,a1));
}

void sipQGraphicsPolygonItem::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtect_prepareGeometryChange()
{
    QGraphicsItem::prepareGeometryChange();
}

bool sipQGraphicsPolygonItem::sipProtectVirt_sceneEvent(bool sipSelfWasArg,QEvent*a0)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQGraphicsPolygonItem::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg,QGraphicsItem*a0,QEvent*a1)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

void sipQGraphicsPolygonItem::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::wheelEvent(a0) : wheelEvent(a0));
}

void sipQGraphicsPolygonItem::sipProtect_updateMicroFocus()
{
    QGraphicsItem::updateMicroFocus();
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_contextMenuEvent, "QGraphicsPolygonItem.contextMenuEvent(QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_contextMenuEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_contextMenuEvent, doc_QGraphicsPolygonItem_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_dragEnterEvent, "QGraphicsPolygonItem.dragEnterEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_dragEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_dragEnterEvent, doc_QGraphicsPolygonItem_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_dragLeaveEvent, "QGraphicsPolygonItem.dragLeaveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_dragLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_dragLeaveEvent, doc_QGraphicsPolygonItem_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_dragMoveEvent, "QGraphicsPolygonItem.dragMoveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_dragMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_dragMoveEvent, doc_QGraphicsPolygonItem_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_dropEvent, "QGraphicsPolygonItem.dropEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_dropEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_dropEvent, doc_QGraphicsPolygonItem_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_focusInEvent, "QGraphicsPolygonItem.focusInEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_focusInEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_focusInEvent, doc_QGraphicsPolygonItem_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_focusOutEvent, "QGraphicsPolygonItem.focusOutEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_focusOutEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_focusOutEvent, doc_QGraphicsPolygonItem_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_hoverEnterEvent, "QGraphicsPolygonItem.hoverEnterEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_hoverEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_hoverEnterEvent, doc_QGraphicsPolygonItem_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_hoverLeaveEvent, "QGraphicsPolygonItem.hoverLeaveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_hoverLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_hoverLeaveEvent, doc_QGraphicsPolygonItem_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_hoverMoveEvent, "QGraphicsPolygonItem.hoverMoveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_hoverMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_hoverMoveEvent, doc_QGraphicsPolygonItem_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_inputMethodEvent, "QGraphicsPolygonItem.inputMethodEvent(QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_inputMethodEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_inputMethodEvent, doc_QGraphicsPolygonItem_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_inputMethodQuery, "QGraphicsPolygonItem.inputMethodQuery(Qt.InputMethodQuery) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_inputMethodQuery(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        const sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BE", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_inputMethodQuery, doc_QGraphicsPolygonItem_inputMethodQuery);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_itemChange, "QGraphicsPolygonItem.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_itemChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_itemChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant* a1;
        int a1State = 0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BEJ1", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_itemChange, doc_QGraphicsPolygonItem_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_keyPressEvent, "QGraphicsPolygonItem.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_keyPressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_keyPressEvent, doc_QGraphicsPolygonItem_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_keyReleaseEvent, "QGraphicsPolygonItem.keyReleaseEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_keyReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_keyReleaseEvent, doc_QGraphicsPolygonItem_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_mouseDoubleClickEvent, "QGraphicsPolygonItem.mouseDoubleClickEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_mouseDoubleClickEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_mouseDoubleClickEvent, doc_QGraphicsPolygonItem_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_mouseMoveEvent, "QGraphicsPolygonItem.mouseMoveEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_mouseMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_mouseMoveEvent, doc_QGraphicsPolygonItem_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_mousePressEvent, "QGraphicsPolygonItem.mousePressEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_mousePressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_mousePressEvent, doc_QGraphicsPolygonItem_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_mouseReleaseEvent, "QGraphicsPolygonItem.mouseReleaseEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_mouseReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_mouseReleaseEvent, doc_QGraphicsPolygonItem_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_prepareGeometryChange, "QGraphicsPolygonItem.prepareGeometryChange()");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_prepareGeometryChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            sipCpp->sipProtect_prepareGeometryChange();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_prepareGeometryChange, doc_QGraphicsPolygonItem_prepareGeometryChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_sceneEvent, "QGraphicsPolygonItem.sceneEvent(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_sceneEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_sceneEvent, doc_QGraphicsPolygonItem_sceneEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_sceneEventFilter, "QGraphicsPolygonItem.sceneEventFilter(QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_sceneEventFilter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem* a0;
        QEvent* a1;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8J8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_sceneEventFilter, doc_QGraphicsPolygonItem_sceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_wheelEvent, "QGraphicsPolygonItem.wheelEvent(QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_wheelEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent* a0;
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_wheelEvent, doc_QGraphicsPolygonItem_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_updateMicroFocus, "QGraphicsPolygonItem.updateMicroFocus()");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_updateMicroFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsPolygonItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            sipCpp->sipProtect_updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_updateMicroFocus, doc_QGraphicsPolygonItem_updateMicroFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_polygon, "QGraphicsPolygonItem.polygon() -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_polygon(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_polygon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            QPolygonF*sipRes;

            sipRes = new QPolygonF(sipCpp->polygon());

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_polygon, doc_QGraphicsPolygonItem_polygon);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_setPolygon, "QGraphicsPolygonItem.setPolygon(QPolygonF)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_setPolygon(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_setPolygon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPolygonF* a0;
        QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QPolygonF, &a0))
        {
            sipCpp->setPolygon(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_setPolygon, doc_QGraphicsPolygonItem_setPolygon);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_fillRule, "QGraphicsPolygonItem.fillRule() -> Qt.FillRule");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_fillRule(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_fillRule(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            Qt::FillRule sipRes;

            sipRes = sipCpp->fillRule();

            return sipConvertFromEnum(sipRes,sipType_Qt_FillRule);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_fillRule, doc_QGraphicsPolygonItem_fillRule);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_setFillRule, "QGraphicsPolygonItem.setFillRule(Qt.FillRule)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_setFillRule(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_setFillRule(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::FillRule a0;
        QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_Qt_FillRule, &a0))
        {
            sipCpp->setFillRule(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_setFillRule, doc_QGraphicsPolygonItem_setFillRule);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_boundingRect, "QGraphicsPolygonItem.boundingRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF((sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_boundingRect, doc_QGraphicsPolygonItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_shape, "QGraphicsPolygonItem.shape() -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            QPainterPath*sipRes;

            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_shape, doc_QGraphicsPolygonItem_shape);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_contains, "QGraphicsPolygonItem.contains(QPointF) -> bool");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::contains(*a0) : sipCpp->contains(*a0));
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_contains, doc_QGraphicsPolygonItem_contains);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_paint, "QGraphicsPolygonItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None)");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2 = 0;
        QGraphicsPolygonItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_paint, doc_QGraphicsPolygonItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_isObscuredBy, "QGraphicsPolygonItem.isObscuredBy(QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem* a0;
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_isObscuredBy, doc_QGraphicsPolygonItem_isObscuredBy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_opaqueArea, "QGraphicsPolygonItem.opaqueArea() -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            QPainterPath*sipRes;

            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::opaqueArea() : sipCpp->opaqueArea()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_opaqueArea, doc_QGraphicsPolygonItem_opaqueArea);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsPolygonItem_type, "QGraphicsPolygonItem.type() -> int");

extern "C" {static PyObject *meth_QGraphicsPolygonItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsPolygonItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsPolygonItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsPolygonItem, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsPolygonItem::type() : sipCpp->type());

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsPolygonItem, sipName_type, doc_QGraphicsPolygonItem_type);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsPolygonItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsPolygonItem(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsPolygonItem)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QAbstractGraphicsShapeItem)->ctd_cast((QAbstractGraphicsShapeItem *)(QGraphicsPolygonItem *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsPolygonItem(void *, int);}
static void release_QGraphicsPolygonItem(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsPolygonItem *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsPolygonItem *>(sipCppV);
}


extern "C" {static void dealloc_QGraphicsPolygonItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsPolygonItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsPolygonItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsPolygonItem(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsPolygonItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsPolygonItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsPolygonItem *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsPolygonItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const QPolygonF* a0;
        QGraphicsItem* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J9|JH", sipType_QPolygonF, &a0, sipType_QGraphicsItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsPolygonItem(*a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsPolygonItem[] = {{1, 255, 1}};


static PyMethodDef methods_QGraphicsPolygonItem[] = {
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsPolygonItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QGraphicsPolygonItem_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_contains)},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), (PyCFunction)meth_QGraphicsPolygonItem_contextMenuEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), (PyCFunction)meth_QGraphicsPolygonItem_dragEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), (PyCFunction)meth_QGraphicsPolygonItem_dragLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), (PyCFunction)meth_QGraphicsPolygonItem_dragMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), (PyCFunction)meth_QGraphicsPolygonItem_dropEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_fillRule), meth_QGraphicsPolygonItem_fillRule, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_fillRule)},
    {SIP_MLNAME_CAST(sipName_focusInEvent), (PyCFunction)meth_QGraphicsPolygonItem_focusInEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), (PyCFunction)meth_QGraphicsPolygonItem_focusOutEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), (PyCFunction)meth_QGraphicsPolygonItem_hoverEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), (PyCFunction)meth_QGraphicsPolygonItem_hoverLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), (PyCFunction)meth_QGraphicsPolygonItem_hoverMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), (PyCFunction)meth_QGraphicsPolygonItem_inputMethodEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), (PyCFunction)meth_QGraphicsPolygonItem_inputMethodQuery, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QGraphicsPolygonItem_isObscuredBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_isObscuredBy)},
    {SIP_MLNAME_CAST(sipName_itemChange), (PyCFunction)meth_QGraphicsPolygonItem_itemChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), (PyCFunction)meth_QGraphicsPolygonItem_keyPressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), (PyCFunction)meth_QGraphicsPolygonItem_keyReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), (PyCFunction)meth_QGraphicsPolygonItem_mouseDoubleClickEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), (PyCFunction)meth_QGraphicsPolygonItem_mouseMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), (PyCFunction)meth_QGraphicsPolygonItem_mousePressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), (PyCFunction)meth_QGraphicsPolygonItem_mouseReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QGraphicsPolygonItem_opaqueArea, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_opaqueArea)},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsPolygonItem_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_paint)},
    {SIP_MLNAME_CAST(sipName_polygon), meth_QGraphicsPolygonItem_polygon, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_polygon)},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), (PyCFunction)meth_QGraphicsPolygonItem_prepareGeometryChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEvent), (PyCFunction)meth_QGraphicsPolygonItem_sceneEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), (PyCFunction)meth_QGraphicsPolygonItem_sceneEventFilter, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setFillRule), meth_QGraphicsPolygonItem_setFillRule, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_setFillRule)},
    {SIP_MLNAME_CAST(sipName_setPolygon), meth_QGraphicsPolygonItem_setPolygon, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_setPolygon)},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsPolygonItem_shape, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_shape)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsPolygonItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsPolygonItem_type)},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), (PyCFunction)meth_QGraphicsPolygonItem_updateMicroFocus, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), (PyCFunction)meth_QGraphicsPolygonItem_wheelEvent, METH_VARARGS|METH_KEYWORDS, NULL}
};

PyDoc_STRVAR(doc_QGraphicsPolygonItem, "\1QGraphicsPolygonItem(QGraphicsItem parent=None)\n"
    "QGraphicsPolygonItem(QPolygonF, QGraphicsItem parent=None)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QGraphicsPolygonItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsPolygonItem,
        {0}
    },
    {
        sipNameNr_QGraphicsPolygonItem,
        {0, 0, 1},
        35, methods_QGraphicsPolygonItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsPolygonItem,
    -1,
    -1,
    supers_QGraphicsPolygonItem,
    0,
    init_type_QGraphicsPolygonItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsPolygonItem,
    0,
    0,
    0,
    release_QGraphicsPolygonItem,
    cast_QGraphicsPolygonItem,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
