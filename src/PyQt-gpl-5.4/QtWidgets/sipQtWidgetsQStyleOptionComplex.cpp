/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:10 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 697 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQStyleOptionComplex.cpp"

#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQStyleOptionComplex.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQStyleOptionComplex.cpp"


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QStyleOptionComplex(void *, const sipTypeDef *);}
static void *cast_QStyleOptionComplex(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QStyleOptionComplex)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QStyleOption)->ctd_cast((QStyleOption *)(QStyleOptionComplex *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QStyleOptionComplex(void *, int);}
static void release_QStyleOptionComplex(void *sipCppV,int)
{
    delete reinterpret_cast<QStyleOptionComplex *>(sipCppV);
}


extern "C" {static void assign_QStyleOptionComplex(void *, SIP_SSIZE_T, const void *);}
static void assign_QStyleOptionComplex(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QStyleOptionComplex *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QStyleOptionComplex *>(sipSrc);
}


extern "C" {static void *array_QStyleOptionComplex(SIP_SSIZE_T);}
static void *array_QStyleOptionComplex(SIP_SSIZE_T sipNrElem)
{
    return new QStyleOptionComplex[sipNrElem];
}


extern "C" {static void *copy_QStyleOptionComplex(const void *, SIP_SSIZE_T);}
static void *copy_QStyleOptionComplex(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QStyleOptionComplex(reinterpret_cast<const QStyleOptionComplex *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QStyleOptionComplex(sipSimpleWrapper *);}
static void dealloc_QStyleOptionComplex(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QStyleOptionComplex(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QStyleOptionComplex(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QStyleOptionComplex(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QStyleOptionComplex *sipCpp = 0;

    {
        int a0 = QStyleOptionComplex::Version;
        int a1 = QStyleOption::SO_Complex;

        static const char *sipKwdList[] = {
            sipName_version,
            sipName_type,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|ii", &a0, &a1))
        {
            sipCpp = new QStyleOptionComplex(a0,a1);

            return sipCpp;
        }
    }

    {
        const QStyleOptionComplex* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QStyleOptionComplex, &a0))
        {
            sipCpp = new QStyleOptionComplex(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QStyleOptionComplex[] = {{308, 255, 1}};

static sipEnumMemberDef enummembers_QStyleOptionComplex[] = {
    {sipName_Type, static_cast<int>(QStyleOptionComplex::Type), 321},
    {sipName_Version, static_cast<int>(QStyleOptionComplex::Version), 322},
};


extern "C" {static PyObject *varget_QStyleOptionComplex_activeSubControls(void *, PyObject *, PyObject *);}
static PyObject *varget_QStyleOptionComplex_activeSubControls(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
    QStyle::SubControls*sipVal;
    QStyleOptionComplex *sipCpp = reinterpret_cast<QStyleOptionComplex *>(sipSelf);

    sipVal = &sipCpp->activeSubControls;

    sipPy = sipConvertFromType(sipVal, sipType_QStyle_SubControls, NULL);
    sipKeepReference(sipPy, -1, sipPySelf);

    return sipPy;
}


extern "C" {static int varset_QStyleOptionComplex_activeSubControls(void *, PyObject *, PyObject *);}
static int varset_QStyleOptionComplex_activeSubControls(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QStyle::SubControls*sipVal;
    QStyleOptionComplex *sipCpp = reinterpret_cast<QStyleOptionComplex *>(sipSelf);

    int sipValState;
    int sipIsErr = 0;

    sipVal = reinterpret_cast<QStyle::SubControls *>(sipForceConvertToType(sipPy,sipType_QStyle_SubControls,NULL,SIP_NOT_NONE,&sipValState,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->activeSubControls = *sipVal;

    sipReleaseType(sipVal, sipType_QStyle_SubControls, sipValState);

    return 0;
}


extern "C" {static PyObject *varget_QStyleOptionComplex_subControls(void *, PyObject *, PyObject *);}
static PyObject *varget_QStyleOptionComplex_subControls(void *sipSelf, PyObject *sipPySelf, PyObject *)
{
    PyObject *sipPy;
    QStyle::SubControls*sipVal;
    QStyleOptionComplex *sipCpp = reinterpret_cast<QStyleOptionComplex *>(sipSelf);

    sipVal = &sipCpp->subControls;

    sipPy = sipConvertFromType(sipVal, sipType_QStyle_SubControls, NULL);
    sipKeepReference(sipPy, -1, sipPySelf);

    return sipPy;
}


extern "C" {static int varset_QStyleOptionComplex_subControls(void *, PyObject *, PyObject *);}
static int varset_QStyleOptionComplex_subControls(void *sipSelf, PyObject *sipPy, PyObject *)
{
    QStyle::SubControls*sipVal;
    QStyleOptionComplex *sipCpp = reinterpret_cast<QStyleOptionComplex *>(sipSelf);

    int sipValState;
    int sipIsErr = 0;

    sipVal = reinterpret_cast<QStyle::SubControls *>(sipForceConvertToType(sipPy,sipType_QStyle_SubControls,NULL,SIP_NOT_NONE,&sipValState,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->subControls = *sipVal;

    sipReleaseType(sipVal, sipType_QStyle_SubControls, sipValState);

    return 0;
}

sipVariableDef variables_QStyleOptionComplex[] = {
    {InstanceVariable, sipName_activeSubControls, (PyMethodDef *)varget_QStyleOptionComplex_activeSubControls, (PyMethodDef *)varset_QStyleOptionComplex_activeSubControls, NULL, NULL},
    {InstanceVariable, sipName_subControls, (PyMethodDef *)varget_QStyleOptionComplex_subControls, (PyMethodDef *)varset_QStyleOptionComplex_subControls, NULL, NULL},
};

PyDoc_STRVAR(doc_QStyleOptionComplex, "\1QStyleOptionComplex(int version=QStyleOptionComplex.Version, int type=QStyleOption.SO_Complex)\n"
    "QStyleOptionComplex(QStyleOptionComplex)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QStyleOptionComplex = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QStyleOptionComplex,
        {0}
    },
    {
        sipNameNr_QStyleOptionComplex,
        {0, 0, 1},
        0, 0,
        2, enummembers_QStyleOptionComplex,
        2, variables_QStyleOptionComplex,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QStyleOptionComplex,
    -1,
    -1,
    supers_QStyleOptionComplex,
    0,
    init_type_QStyleOptionComplex,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QStyleOptionComplex,
    assign_QStyleOptionComplex,
    array_QStyleOptionComplex,
    copy_QStyleOptionComplex,
    release_QStyleOptionComplex,
    cast_QStyleOptionComplex,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
