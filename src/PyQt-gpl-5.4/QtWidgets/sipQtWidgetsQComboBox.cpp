/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:12 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qcombobox.sip"
#include <qcombobox.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"

#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 479 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 452 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 247 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 333 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 51 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 202 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 441 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 430 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 368 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 63 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 395 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 66 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 69 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 72 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 819 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 75 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 78 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qcompleter.sip"
#include <qcompleter.h>
#line 81 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 84 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qabstractitemview.sip"
#include <qabstractitemview.h>
#line 87 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qicon.sip"
#include <qicon.h>
#line 90 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 34 "sip/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 93 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 96 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 105 "sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 99 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qabstractitemdelegate.sip"
#include <qabstractitemdelegate.h>
#line 102 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtGui/qvalidator.sip"
#include <qvalidator.h>
#line 105 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qlineedit.sip"
#include <qlineedit.h>
#line 108 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 111 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 114 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 117 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtGui/qwindow.sip"
#include <qwindow.h>
#line 120 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 123 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 126 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 129 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 132 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 135 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 138 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 141 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 144 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 192 "sip/QtCore/qglobal.sip"
#include <QtGlobal>
#line 147 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 150 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 153 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 156 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 159 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 162 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 165 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 168 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 171 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 534 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 174 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 583 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 177 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 556 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 180 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 572 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 183 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 635 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 186 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 275 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 189 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 408 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 192 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 382 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 195 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 56 "sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 198 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 201 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 204 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qlayout.sip"
#include <qlayout.h>
#line 207 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 210 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 213 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 216 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 219 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 222 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 225 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 228 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 231 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 234 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 234 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 222 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 237 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 240 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 243 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 246 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 249 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 252 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 255 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 30 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 258 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 261 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"


class sipQComboBox : public QComboBox
{
public:
    sipQComboBox(QWidget*);
    virtual ~sipQComboBox();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    QObject* sipProtect_sender() const;
    int sipProtect_receivers(const char*) const;
    void sipProtectVirt_timerEvent(bool,QTimerEvent*);
    void sipProtectVirt_childEvent(bool,QChildEvent*);
    void sipProtectVirt_customEvent(bool,QEvent*);
    void sipProtectVirt_connectNotify(bool,const QMetaMethod&);
    void sipProtectVirt_disconnectNotify(bool,const QMetaMethod&);
    int sipProtect_senderSignalIndex() const;
    bool sipProtect_isSignalConnected(const QMetaMethod&) const;
    void sipProtectVirt_mouseDoubleClickEvent(bool,QMouseEvent*);
    void sipProtectVirt_mouseMoveEvent(bool,QMouseEvent*);
    void sipProtectVirt_enterEvent(bool,QEvent*);
    void sipProtectVirt_leaveEvent(bool,QEvent*);
    void sipProtectVirt_moveEvent(bool,QMoveEvent*);
    void sipProtectVirt_closeEvent(bool,QCloseEvent*);
    void sipProtectVirt_tabletEvent(bool,QTabletEvent*);
    void sipProtectVirt_actionEvent(bool,QActionEvent*);
    void sipProtectVirt_dragEnterEvent(bool,QDragEnterEvent*);
    void sipProtectVirt_dragMoveEvent(bool,QDragMoveEvent*);
    void sipProtectVirt_dragLeaveEvent(bool,QDragLeaveEvent*);
    void sipProtectVirt_dropEvent(bool,QDropEvent*);
    int sipProtectVirt_metric(bool,QPaintDevice::PaintDeviceMetric) const;
    void sipProtect_updateMicroFocus();
    void sipProtect_create(WId,bool,bool);
    void sipProtect_destroy(bool,bool);
    bool sipProtectVirt_focusNextPrevChild(bool,bool);
    bool sipProtect_focusNextChild();
    bool sipProtect_focusPreviousChild();
    bool sipProtectVirt_nativeEvent(bool,const QByteArray&,void*,long*);
    QPainter* sipProtectVirt_sharedPainter(bool) const;
    void sipProtectVirt_initPainter(bool,QPainter*) const;
    void sipProtect_initStyleOption(QStyleOptionComboBox*) const;
    void sipProtectVirt_focusInEvent(bool,QFocusEvent*);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent*);
    void sipProtectVirt_changeEvent(bool,QEvent*);
    void sipProtectVirt_resizeEvent(bool,QResizeEvent*);
    void sipProtectVirt_paintEvent(bool,QPaintEvent*);
    void sipProtectVirt_showEvent(bool,QShowEvent*);
    void sipProtectVirt_hideEvent(bool,QHideEvent*);
    void sipProtectVirt_mousePressEvent(bool,QMouseEvent*);
    void sipProtectVirt_mouseReleaseEvent(bool,QMouseEvent*);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent*);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent*);
    void sipProtectVirt_wheelEvent(bool,QWheelEvent*);
    void sipProtectVirt_contextMenuEvent(bool,QContextMenuEvent*);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent*);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    void initPainter(QPainter*) const;
    QPainter* sharedPainter() const;
    bool nativeEvent(const QByteArray&,void*,long*);
    bool hasHeightForWidth() const;
    bool focusNextPrevChild(bool);
    int metric(QPaintDevice::PaintDeviceMetric) const;
    void dropEvent(QDropEvent*);
    void dragLeaveEvent(QDragLeaveEvent*);
    void dragMoveEvent(QDragMoveEvent*);
    void dragEnterEvent(QDragEnterEvent*);
    void actionEvent(QActionEvent*);
    void tabletEvent(QTabletEvent*);
    void closeEvent(QCloseEvent*);
    void moveEvent(QMoveEvent*);
    void leaveEvent(QEvent*);
    void enterEvent(QEvent*);
    void mouseMoveEvent(QMouseEvent*);
    void mouseDoubleClickEvent(QMouseEvent*);
    QPaintEngine* paintEngine() const;
    int heightForWidth(int) const;
    void setVisible(bool);
    int devType() const;
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    void contextMenuEvent(QContextMenuEvent*);
    void wheelEvent(QWheelEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    void mouseReleaseEvent(QMouseEvent*);
    void mousePressEvent(QMouseEvent*);
    void hideEvent(QHideEvent*);
    void showEvent(QShowEvent*);
    void paintEvent(QPaintEvent*);
    void resizeEvent(QResizeEvent*);
    void changeEvent(QEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    bool event(QEvent*);
    void hidePopup();
    void showPopup();
    QSize minimumSizeHint() const;
    QSize sizeHint() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQComboBox(const sipQComboBox &);
    sipQComboBox &operator = (const sipQComboBox &);

    char sipPyMethods[48];
};

sipQComboBox::sipQComboBox(QWidget*a0): QComboBox(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQComboBox::~sipQComboBox()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQComboBox::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QComboBox);
}

int sipQComboBox::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QComboBox::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QComboBox,_c,_id,_a);

    return _id;
}

void *sipQComboBox::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QComboBox, _clname, &sipCpp) ? sipCpp : QComboBox::qt_metacast(_clname));
}

void sipQComboBox::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QComboBox::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QComboBox::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QComboBox::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QComboBox::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[47]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QComboBox::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQComboBox::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QComboBox::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[26]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQComboBox::initPainter(QPainter*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_initPainter);

    if (!sipMeth)
    {
        QComboBox::initPainter(a0);
        return;
    }

    extern void sipVH_QtWidgets_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*);

    sipVH_QtWidgets_3(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainter* sipQComboBox::sharedPainter() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_sharedPainter);

    if (!sipMeth)
        return QComboBox::sharedPainter();

    extern QPainter* sipVH_QtWidgets_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_4(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQComboBox::nativeEvent(const QByteArray& a0,void*a1,long*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_nativeEvent);

    if (!sipMeth)
        return QComboBox::nativeEvent(a0,a1,a2);

    typedef bool (*sipVH_QtCore_58)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QByteArray&,void*,long*);

    return ((sipVH_QtCore_58)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[58]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

bool sipQComboBox::hasHeightForWidth() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[9]),sipPySelf,NULL,sipName_hasHeightForWidth);

    if (!sipMeth)
        return QComboBox::hasHeightForWidth();

    typedef bool (*sipVH_QtCore_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_7)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQComboBox::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return QComboBox::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_5(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQComboBox::metric(QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[11]),sipPySelf,NULL,sipName_metric);

    if (!sipMeth)
        return QComboBox::metric(a0);

    typedef int (*sipVH_QtGui_28)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintDevice::PaintDeviceMetric);

    return ((sipVH_QtGui_28)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[28]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::dropEvent(QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QComboBox::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDropEvent*);

    sipVH_QtWidgets_8(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::dragLeaveEvent(QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QComboBox::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragLeaveEvent*);

    sipVH_QtWidgets_9(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::dragMoveEvent(QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QComboBox::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragMoveEvent*);

    sipVH_QtWidgets_10(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::dragEnterEvent(QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QComboBox::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragEnterEvent*);

    sipVH_QtWidgets_11(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::actionEvent(QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_actionEvent);

    if (!sipMeth)
    {
        QComboBox::actionEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QActionEvent*);

    sipVH_QtWidgets_12(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::tabletEvent(QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_tabletEvent);

    if (!sipMeth)
    {
        QComboBox::tabletEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_0)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTabletEvent*);

    ((sipVH_QtGui_0)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[0]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::closeEvent(QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
        QComboBox::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QCloseEvent*);

    sipVH_QtWidgets_14(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::moveEvent(QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
        QComboBox::moveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_8)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMoveEvent*);

    ((sipVH_QtGui_8)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[8]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::leaveEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_leaveEvent);

    if (!sipMeth)
    {
        QComboBox::leaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::enterEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_enterEvent);

    if (!sipMeth)
    {
        QComboBox::enterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::mouseMoveEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QComboBox::mouseMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::mouseDoubleClickEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QComboBox::mouseDoubleClickEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPaintEngine* sipQComboBox::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_paintEngine);

    if (!sipMeth)
        return QComboBox::paintEngine();

    typedef QPaintEngine* (*sipVH_QtGui_29)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_29)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[29]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

int sipQComboBox::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_heightForWidth);

    if (!sipMeth)
        return QComboBox::heightForWidth(a0);

    typedef int (*sipVH_QtCore_63)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return ((sipVH_QtCore_63)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[63]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_setVisible);

    if (!sipMeth)
    {
        QComboBox::setVisible(a0);
        return;
    }

    extern void sipVH_QtWidgets_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtWidgets_0(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQComboBox::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_devType);

    if (!sipMeth)
        return QComboBox::devType();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QVariant sipQComboBox::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[28]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QComboBox::inputMethodQuery(a0);

    extern QVariant sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtWidgets_6(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QComboBox::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtWidgets_7(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::contextMenuEvent(QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QComboBox::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QContextMenuEvent*);

    sipVH_QtWidgets_13(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::wheelEvent(QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QComboBox::wheelEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_2)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWheelEvent*);

    ((sipVH_QtGui_2)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[2]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QComboBox::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QComboBox::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::mouseReleaseEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QComboBox::mouseReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::mousePressEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QComboBox::mousePressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_3)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    ((sipVH_QtGui_3)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[3]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::hideEvent(QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
        QComboBox::hideEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHideEvent*);

    ((sipVH_QtGui_5)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::showEvent(QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
        QComboBox::showEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QShowEvent*);

    ((sipVH_QtGui_6)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::paintEvent(QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_paintEvent);

    if (!sipMeth)
    {
        QComboBox::paintEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_52)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintEvent*);

    ((sipVH_QtGui_52)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[52]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::resizeEvent(QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
        QComboBox::resizeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QResizeEvent*);

    ((sipVH_QtGui_9)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::changeEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
        QComboBox::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QComboBox::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QComboBox::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQComboBox::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QComboBox::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQComboBox::hidePopup()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_hidePopup);

    if (!sipMeth)
    {
        QComboBox::hidePopup();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQComboBox::showPopup()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_showPopup);

    if (!sipMeth)
    {
        QComboBox::showPopup();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QSize sipQComboBox::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[46]),sipPySelf,NULL,sipName_minimumSizeHint);

    if (!sipMeth)
        return QComboBox::minimumSizeHint();

    typedef QSize (*sipVH_QtGui_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_12)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[12]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QSize sipQComboBox::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[47]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QComboBox::sizeHint();

    typedef QSize (*sipVH_QtGui_12)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtGui_12)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[12]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QObject* sipQComboBox::sipProtect_sender() const
{
    return QObject::sender();
}

int sipQComboBox::sipProtect_receivers(const char*a0) const
{
    return QObject::receivers(a0);
}

void sipQComboBox::sipProtectVirt_timerEvent(bool sipSelfWasArg,QTimerEvent*a0)
{
    (sipSelfWasArg ? QObject::timerEvent(a0) : timerEvent(a0));
}

void sipQComboBox::sipProtectVirt_childEvent(bool sipSelfWasArg,QChildEvent*a0)
{
    (sipSelfWasArg ? QObject::childEvent(a0) : childEvent(a0));
}

void sipQComboBox::sipProtectVirt_customEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QObject::customEvent(a0) : customEvent(a0));
}

void sipQComboBox::sipProtectVirt_connectNotify(bool sipSelfWasArg,const QMetaMethod& a0)
{
    (sipSelfWasArg ? QObject::connectNotify(a0) : connectNotify(a0));
}

void sipQComboBox::sipProtectVirt_disconnectNotify(bool sipSelfWasArg,const QMetaMethod& a0)
{
    (sipSelfWasArg ? QObject::disconnectNotify(a0) : disconnectNotify(a0));
}

int sipQComboBox::sipProtect_senderSignalIndex() const
{
    return QObject::senderSignalIndex();
}

bool sipQComboBox::sipProtect_isSignalConnected(const QMetaMethod& a0) const
{
    return QObject::isSignalConnected(a0);
}

void sipQComboBox::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QMouseEvent*a0)
{
    (sipSelfWasArg ? QWidget::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQComboBox::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QMouseEvent*a0)
{
    (sipSelfWasArg ? QWidget::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQComboBox::sipProtectVirt_enterEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QWidget::enterEvent(a0) : enterEvent(a0));
}

void sipQComboBox::sipProtectVirt_leaveEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QWidget::leaveEvent(a0) : leaveEvent(a0));
}

void sipQComboBox::sipProtectVirt_moveEvent(bool sipSelfWasArg,QMoveEvent*a0)
{
    (sipSelfWasArg ? QWidget::moveEvent(a0) : moveEvent(a0));
}

void sipQComboBox::sipProtectVirt_closeEvent(bool sipSelfWasArg,QCloseEvent*a0)
{
    (sipSelfWasArg ? QWidget::closeEvent(a0) : closeEvent(a0));
}

void sipQComboBox::sipProtectVirt_tabletEvent(bool sipSelfWasArg,QTabletEvent*a0)
{
    (sipSelfWasArg ? QWidget::tabletEvent(a0) : tabletEvent(a0));
}

void sipQComboBox::sipProtectVirt_actionEvent(bool sipSelfWasArg,QActionEvent*a0)
{
    (sipSelfWasArg ? QWidget::actionEvent(a0) : actionEvent(a0));
}

void sipQComboBox::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QDragEnterEvent*a0)
{
    (sipSelfWasArg ? QWidget::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQComboBox::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QDragMoveEvent*a0)
{
    (sipSelfWasArg ? QWidget::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQComboBox::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QDragLeaveEvent*a0)
{
    (sipSelfWasArg ? QWidget::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQComboBox::sipProtectVirt_dropEvent(bool sipSelfWasArg,QDropEvent*a0)
{
    (sipSelfWasArg ? QWidget::dropEvent(a0) : dropEvent(a0));
}

int sipQComboBox::sipProtectVirt_metric(bool sipSelfWasArg,QPaintDevice::PaintDeviceMetric a0) const
{
    return (sipSelfWasArg ? QWidget::metric(a0) : metric(a0));
}

void sipQComboBox::sipProtect_updateMicroFocus()
{
    QWidget::updateMicroFocus();
}

void sipQComboBox::sipProtect_create(WId a0,bool a1,bool a2)
{
    QWidget::create(a0,a1,a2);
}

void sipQComboBox::sipProtect_destroy(bool a0,bool a1)
{
    QWidget::destroy(a0,a1);
}

bool sipQComboBox::sipProtectVirt_focusNextPrevChild(bool sipSelfWasArg,bool a0)
{
    return (sipSelfWasArg ? QWidget::focusNextPrevChild(a0) : focusNextPrevChild(a0));
}

bool sipQComboBox::sipProtect_focusNextChild()
{
    return QWidget::focusNextChild();
}

bool sipQComboBox::sipProtect_focusPreviousChild()
{
    return QWidget::focusPreviousChild();
}

bool sipQComboBox::sipProtectVirt_nativeEvent(bool sipSelfWasArg,const QByteArray& a0,void*a1,long*a2)
{
    return (sipSelfWasArg ? QWidget::nativeEvent(a0,a1,a2) : nativeEvent(a0,a1,a2));
}

QPainter* sipQComboBox::sipProtectVirt_sharedPainter(bool sipSelfWasArg) const
{
    return (sipSelfWasArg ? QWidget::sharedPainter() : sharedPainter());
}

void sipQComboBox::sipProtectVirt_initPainter(bool sipSelfWasArg,QPainter*a0) const
{
    (sipSelfWasArg ? QWidget::initPainter(a0) : initPainter(a0));
}

void sipQComboBox::sipProtect_initStyleOption(QStyleOptionComboBox*a0) const
{
    QComboBox::initStyleOption(a0);
}

void sipQComboBox::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QComboBox::focusInEvent(a0) : focusInEvent(a0));
}

void sipQComboBox::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QComboBox::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQComboBox::sipProtectVirt_changeEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QComboBox::changeEvent(a0) : changeEvent(a0));
}

void sipQComboBox::sipProtectVirt_resizeEvent(bool sipSelfWasArg,QResizeEvent*a0)
{
    (sipSelfWasArg ? QComboBox::resizeEvent(a0) : resizeEvent(a0));
}

void sipQComboBox::sipProtectVirt_paintEvent(bool sipSelfWasArg,QPaintEvent*a0)
{
    (sipSelfWasArg ? QComboBox::paintEvent(a0) : paintEvent(a0));
}

void sipQComboBox::sipProtectVirt_showEvent(bool sipSelfWasArg,QShowEvent*a0)
{
    (sipSelfWasArg ? QComboBox::showEvent(a0) : showEvent(a0));
}

void sipQComboBox::sipProtectVirt_hideEvent(bool sipSelfWasArg,QHideEvent*a0)
{
    (sipSelfWasArg ? QComboBox::hideEvent(a0) : hideEvent(a0));
}

void sipQComboBox::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QMouseEvent*a0)
{
    (sipSelfWasArg ? QComboBox::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQComboBox::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QMouseEvent*a0)
{
    (sipSelfWasArg ? QComboBox::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQComboBox::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QComboBox::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQComboBox::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QComboBox::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQComboBox::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QWheelEvent*a0)
{
    (sipSelfWasArg ? QComboBox::wheelEvent(a0) : wheelEvent(a0));
}

void sipQComboBox::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QContextMenuEvent*a0)
{
    (sipSelfWasArg ? QComboBox::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQComboBox::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent*a0)
{
    (sipSelfWasArg ? QComboBox::inputMethodEvent(a0) : inputMethodEvent(a0));
}


PyDoc_STRVAR(doc_QComboBox_sender, "QComboBox.sender() -> QObject");

extern "C" {static PyObject *meth_QComboBox_sender(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_sender(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QObject*sipRes = 0;

#line 546 "sip/QtCore/qobject.sip"
        // sender() must be called without the GIL to avoid possible deadlocks between
        // the GIL and Qt's internal thread data mutex.
        
        Py_BEGIN_ALLOW_THREADS
        
        #if defined(SIP_PROTECTED_IS_PUBLIC)
        sipRes = sipCpp->sender();
        #else
        sipRes = sipCpp->sipProtect_sender();
        #endif
        
        Py_END_ALLOW_THREADS
        
        if (!sipRes)
        {
            typedef QObject *(*qtcore_qobject_sender_t)();
        
            static qtcore_qobject_sender_t qtcore_qobject_sender = 0;
        
            if (!qtcore_qobject_sender)
                qtcore_qobject_sender = (qtcore_qobject_sender_t)sipImportSymbol("qtcore_qobject_sender");
        
            if (qtcore_qobject_sender)
                sipRes = qtcore_qobject_sender();
        }
#line 1517 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"

            return sipConvertFromType(sipRes,sipType_QObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_sender, doc_QComboBox_sender);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_receivers, "QComboBox.receivers(signal) -> int");

extern "C" {static PyObject *meth_QComboBox_receivers(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_receivers(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BP0", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            int sipRes = 0;
            sipErrorState sipError = sipErrorNone;

#line 575 "sip/QtCore/qobject.sip"
        // We need to handle the signal object.  Import the helper if it hasn't already
        // been done.
        typedef sipErrorState (*pyqt5_get_signal_signature_t)(PyObject *, const QObject *, const QByteArray &);
        
        static pyqt5_get_signal_signature_t pyqt5_get_signal_signature = 0;
        
        if (!pyqt5_get_signal_signature)
            pyqt5_get_signal_signature = (pyqt5_get_signal_signature_t)sipImportSymbol("pyqt5_get_signal_signature");
        
        if (pyqt5_get_signal_signature)
        {
            QByteArray signal_signature;
            
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            if ((sipError = pyqt5_get_signal_signature(a0, sipCpp, signal_signature)) == sipErrorNone)
            {
                sipRes = sipCpp->receivers(signal_signature.constData());
            }
        #else
            if ((sipError = pyqt5_get_signal_signature(a0, static_cast<const QObject *>(sipCpp), signal_signature)) == sipErrorNone)
            {
                sipRes = sipCpp->sipProtect_receivers(signal_signature.constData());
            }
        #endif
            else if (sipError == sipErrorContinue)
            {
                sipError = sipBadCallableArg(0, a0);
            }
        }
#line 1576 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            return SIPLong_FromLong(sipRes);
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_receivers, doc_QComboBox_receivers);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_timerEvent, "QComboBox.timerEvent(QTimerEvent)");

extern "C" {static PyObject *meth_QComboBox_timerEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_timerEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTimerEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QTimerEvent, &a0))
        {
            sipCpp->sipProtectVirt_timerEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_timerEvent, doc_QComboBox_timerEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_childEvent, "QComboBox.childEvent(QChildEvent)");

extern "C" {static PyObject *meth_QComboBox_childEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_childEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QChildEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QChildEvent, &a0))
        {
            sipCpp->sipProtectVirt_childEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_childEvent, doc_QComboBox_childEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_customEvent, "QComboBox.customEvent(QEvent)");

extern "C" {static PyObject *meth_QComboBox_customEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_customEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_customEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_customEvent, doc_QComboBox_customEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_connectNotify, "QComboBox.connectNotify(QMetaMethod)");

extern "C" {static PyObject *meth_QComboBox_connectNotify(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_connectNotify(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QMetaMethod* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_connectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_connectNotify, doc_QComboBox_connectNotify);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_disconnectNotify, "QComboBox.disconnectNotify(QMetaMethod)");

extern "C" {static PyObject *meth_QComboBox_disconnectNotify(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_disconnectNotify(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QMetaMethod* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_disconnectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_disconnectNotify, doc_QComboBox_disconnectNotify);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_senderSignalIndex, "QComboBox.senderSignalIndex() -> int");

extern "C" {static PyObject *meth_QComboBox_senderSignalIndex(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_senderSignalIndex(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->sipProtect_senderSignalIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_senderSignalIndex, doc_QComboBox_senderSignalIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_isSignalConnected, "QComboBox.isSignalConnected(QMetaMethod) -> bool");

extern "C" {static PyObject *meth_QComboBox_isSignalConnected(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_isSignalConnected(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QMetaMethod* a0;
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMetaMethod, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_isSignalConnected(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_isSignalConnected, doc_QComboBox_isSignalConnected);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_mouseDoubleClickEvent, "QComboBox.mouseDoubleClickEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QComboBox_mouseDoubleClickEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_mouseDoubleClickEvent, doc_QComboBox_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_mouseMoveEvent, "QComboBox.mouseMoveEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QComboBox_mouseMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_mouseMoveEvent, doc_QComboBox_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_enterEvent, "QComboBox.enterEvent(QEvent)");

extern "C" {static PyObject *meth_QComboBox_enterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_enterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_enterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_enterEvent, doc_QComboBox_enterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_leaveEvent, "QComboBox.leaveEvent(QEvent)");

extern "C" {static PyObject *meth_QComboBox_leaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_leaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_leaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_leaveEvent, doc_QComboBox_leaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_moveEvent, "QComboBox.moveEvent(QMoveEvent)");

extern "C" {static PyObject *meth_QComboBox_moveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_moveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMoveEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMoveEvent, &a0))
        {
            sipCpp->sipProtectVirt_moveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_moveEvent, doc_QComboBox_moveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_closeEvent, "QComboBox.closeEvent(QCloseEvent)");

extern "C" {static PyObject *meth_QComboBox_closeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_closeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QCloseEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QCloseEvent, &a0))
        {
            sipCpp->sipProtectVirt_closeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_closeEvent, doc_QComboBox_closeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_tabletEvent, "QComboBox.tabletEvent(QTabletEvent)");

extern "C" {static PyObject *meth_QComboBox_tabletEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_tabletEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTabletEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QTabletEvent, &a0))
        {
            sipCpp->sipProtectVirt_tabletEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_tabletEvent, doc_QComboBox_tabletEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_actionEvent, "QComboBox.actionEvent(QActionEvent)");

extern "C" {static PyObject *meth_QComboBox_actionEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_actionEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QActionEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QActionEvent, &a0))
        {
            sipCpp->sipProtectVirt_actionEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_actionEvent, doc_QComboBox_actionEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_dragEnterEvent, "QComboBox.dragEnterEvent(QDragEnterEvent)");

extern "C" {static PyObject *meth_QComboBox_dragEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDragEnterEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QDragEnterEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_dragEnterEvent, doc_QComboBox_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_dragMoveEvent, "QComboBox.dragMoveEvent(QDragMoveEvent)");

extern "C" {static PyObject *meth_QComboBox_dragMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDragMoveEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QDragMoveEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_dragMoveEvent, doc_QComboBox_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_dragLeaveEvent, "QComboBox.dragLeaveEvent(QDragLeaveEvent)");

extern "C" {static PyObject *meth_QComboBox_dragLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDragLeaveEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QDragLeaveEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_dragLeaveEvent, doc_QComboBox_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_dropEvent, "QComboBox.dropEvent(QDropEvent)");

extern "C" {static PyObject *meth_QComboBox_dropEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_dropEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDropEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_dropEvent, doc_QComboBox_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_metric, "QComboBox.metric(QPaintDevice.PaintDeviceMetric) -> int");

extern "C" {static PyObject *meth_QComboBox_metric(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_metric(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPaintDevice::PaintDeviceMetric a0;
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BE", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QPaintDevice_PaintDeviceMetric, &a0))
        {
            int sipRes;

            sipRes = sipCpp->sipProtectVirt_metric(sipSelfWasArg,a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_metric, doc_QComboBox_metric);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_updateMicroFocus, "QComboBox.updateMicroFocus()");

extern "C" {static PyObject *meth_QComboBox_updateMicroFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            sipCpp->sipProtect_updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_updateMicroFocus, doc_QComboBox_updateMicroFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_create, "QComboBox.create(sip.voidptr window=0, bool initializeWindow=True, bool destroyOldWindow=True)");

extern "C" {static PyObject *meth_QComboBox_create(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        WId a0def = 0;
        WId* a0 = &a0def;
        int a0State = 0;
        bool a1 = 1;
        bool a2 = 1;
        sipQComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_window,
            sipName_initializeWindow,
            sipName_destroyOldWindow,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J1bb", &sipSelf, sipType_QComboBox, &sipCpp, sipType_quintptr,&a0, &a0State, &a1, &a2))
        {
            sipCpp->sipProtect_create(*a0,a1,a2);
            sipReleaseType(a0,sipType_quintptr,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_create, doc_QComboBox_create);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_destroy, "QComboBox.destroy(bool destroyWindow=True, bool destroySubWindows=True)");

extern "C" {static PyObject *meth_QComboBox_destroy(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_destroy(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0 = 1;
        bool a1 = 1;
        sipQComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_destroyWindow,
            sipName_destroySubWindows,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|bb", &sipSelf, sipType_QComboBox, &sipCpp, &a0, &a1))
        {
            sipCpp->sipProtect_destroy(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_destroy, doc_QComboBox_destroy);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_focusNextPrevChild, "QComboBox.focusNextPrevChild(bool) -> bool");

extern "C" {static PyObject *meth_QComboBox_focusNextPrevChild(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "Bb", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_focusNextPrevChild(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_focusNextPrevChild, doc_QComboBox_focusNextPrevChild);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_focusNextChild, "QComboBox.focusNextChild() -> bool");

extern "C" {static PyObject *meth_QComboBox_focusNextChild(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_focusNextChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_focusNextChild();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_focusNextChild, doc_QComboBox_focusNextChild);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_focusPreviousChild, "QComboBox.focusPreviousChild() -> bool");

extern "C" {static PyObject *meth_QComboBox_focusPreviousChild(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_focusPreviousChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_focusPreviousChild();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_focusPreviousChild, doc_QComboBox_focusPreviousChild);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_nativeEvent, "QComboBox.nativeEvent(QByteArray, sip.voidptr) -> (bool, int)");

extern "C" {static PyObject *meth_QComboBox_nativeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_nativeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QByteArray* a0;
        int a0State = 0;
        void* a1;
        long a2;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ1v", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QByteArray, &a0, &a0State, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_nativeEvent(sipSelfWasArg,*a0,a1,&a2);
            sipReleaseType(const_cast<QByteArray *>(a0),sipType_QByteArray,a0State);

            return sipBuildResult(0,"(bl)",sipRes,a2);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_nativeEvent, doc_QComboBox_nativeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_sharedPainter, "QComboBox.sharedPainter() -> QPainter");

extern "C" {static PyObject *meth_QComboBox_sharedPainter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_sharedPainter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QPainter*sipRes;

            sipRes = sipCpp->sipProtectVirt_sharedPainter(sipSelfWasArg);

            return sipConvertFromType(sipRes,sipType_QPainter,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_sharedPainter, doc_QComboBox_sharedPainter);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_initPainter, "QComboBox.initPainter(QPainter)");

extern "C" {static PyObject *meth_QComboBox_initPainter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_initPainter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QPainter, &a0))
        {
            sipCpp->sipProtectVirt_initPainter(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_initPainter, doc_QComboBox_initPainter);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_maxVisibleItems, "QComboBox.maxVisibleItems() -> int");

extern "C" {static PyObject *meth_QComboBox_maxVisibleItems(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_maxVisibleItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->maxVisibleItems();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_maxVisibleItems, doc_QComboBox_maxVisibleItems);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setMaxVisibleItems, "QComboBox.setMaxVisibleItems(int)");

extern "C" {static PyObject *meth_QComboBox_setMaxVisibleItems(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setMaxVisibleItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setMaxVisibleItems(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setMaxVisibleItems, doc_QComboBox_setMaxVisibleItems);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_count, "QComboBox.count() -> int");

extern "C" {static PyObject *meth_QComboBox_count(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->count();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_count, doc_QComboBox_count);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setMaxCount, "QComboBox.setMaxCount(int)");

extern "C" {static PyObject *meth_QComboBox_setMaxCount(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setMaxCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setMaxCount(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setMaxCount, doc_QComboBox_setMaxCount);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_maxCount, "QComboBox.maxCount() -> int");

extern "C" {static PyObject *meth_QComboBox_maxCount(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_maxCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->maxCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_maxCount, doc_QComboBox_maxCount);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_duplicatesEnabled, "QComboBox.duplicatesEnabled() -> bool");

extern "C" {static PyObject *meth_QComboBox_duplicatesEnabled(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_duplicatesEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->duplicatesEnabled();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_duplicatesEnabled, doc_QComboBox_duplicatesEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setDuplicatesEnabled, "QComboBox.setDuplicatesEnabled(bool)");

extern "C" {static PyObject *meth_QComboBox_setDuplicatesEnabled(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setDuplicatesEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setDuplicatesEnabled(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setDuplicatesEnabled, doc_QComboBox_setDuplicatesEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setFrame, "QComboBox.setFrame(bool)");

extern "C" {static PyObject *meth_QComboBox_setFrame(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setFrame(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setFrame(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setFrame, doc_QComboBox_setFrame);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_hasFrame, "QComboBox.hasFrame() -> bool");

extern "C" {static PyObject *meth_QComboBox_hasFrame(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_hasFrame(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasFrame();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_hasFrame, doc_QComboBox_hasFrame);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_findText, "QComboBox.findText(str, Qt.MatchFlags flags=Qt.MatchExactly|Qt.MatchCaseSensitive) -> int");

extern "C" {static PyObject *meth_QComboBox_findText(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_findText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        Qt::MatchFlags a1def = Qt::MatchExactly|Qt::MatchCaseSensitive;
        Qt::MatchFlags* a1 = &a1def;
        int a1State = 0;
        const QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|J1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QString,&a0, &a0State, sipType_Qt_MatchFlags, &a1, &a1State))
        {
            int sipRes;

            sipRes = sipCpp->findText(*a0,*a1);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);
            sipReleaseType(a1,sipType_Qt_MatchFlags,a1State);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_findText, doc_QComboBox_findText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_findData, "QComboBox.findData(QVariant, int role=Qt.UserRole, Qt.MatchFlags flags=Qt.MatchExactly|Qt.MatchCaseSensitive) -> int");

extern "C" {static PyObject *meth_QComboBox_findData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_findData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QVariant* a0;
        int a0State = 0;
        int a1 = Qt::UserRole;
        Qt::MatchFlags a2def = Qt::MatchExactly|Qt::MatchCaseSensitive;
        Qt::MatchFlags* a2 = &a2def;
        int a2State = 0;
        const QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_role,
            sipName_flags,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|iJ1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QVariant, &a0, &a0State, &a1, sipType_Qt_MatchFlags, &a2, &a2State))
        {
            int sipRes;

            sipRes = sipCpp->findData(*a0,a1,*a2);
            sipReleaseType(const_cast<QVariant *>(a0),sipType_QVariant,a0State);
            sipReleaseType(a2,sipType_Qt_MatchFlags,a2State);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_findData, doc_QComboBox_findData);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_insertPolicy, "QComboBox.insertPolicy() -> QComboBox.InsertPolicy");

extern "C" {static PyObject *meth_QComboBox_insertPolicy(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_insertPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QComboBox::InsertPolicy sipRes;

            sipRes = sipCpp->insertPolicy();

            return sipConvertFromEnum(sipRes,sipType_QComboBox_InsertPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_insertPolicy, doc_QComboBox_insertPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setInsertPolicy, "QComboBox.setInsertPolicy(QComboBox.InsertPolicy)");

extern "C" {static PyObject *meth_QComboBox_setInsertPolicy(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setInsertPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QComboBox::InsertPolicy a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QComboBox_InsertPolicy, &a0))
        {
            sipCpp->setInsertPolicy(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setInsertPolicy, doc_QComboBox_setInsertPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_sizeAdjustPolicy, "QComboBox.sizeAdjustPolicy() -> QComboBox.SizeAdjustPolicy");

extern "C" {static PyObject *meth_QComboBox_sizeAdjustPolicy(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_sizeAdjustPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QComboBox::SizeAdjustPolicy sipRes;

            sipRes = sipCpp->sizeAdjustPolicy();

            return sipConvertFromEnum(sipRes,sipType_QComboBox_SizeAdjustPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_sizeAdjustPolicy, doc_QComboBox_sizeAdjustPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setSizeAdjustPolicy, "QComboBox.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy)");

extern "C" {static PyObject *meth_QComboBox_setSizeAdjustPolicy(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setSizeAdjustPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QComboBox::SizeAdjustPolicy a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QComboBox_SizeAdjustPolicy, &a0))
        {
            sipCpp->setSizeAdjustPolicy(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setSizeAdjustPolicy, doc_QComboBox_setSizeAdjustPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_minimumContentsLength, "QComboBox.minimumContentsLength() -> int");

extern "C" {static PyObject *meth_QComboBox_minimumContentsLength(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_minimumContentsLength(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->minimumContentsLength();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_minimumContentsLength, doc_QComboBox_minimumContentsLength);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setMinimumContentsLength, "QComboBox.setMinimumContentsLength(int)");

extern "C" {static PyObject *meth_QComboBox_setMinimumContentsLength(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setMinimumContentsLength(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setMinimumContentsLength(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setMinimumContentsLength, doc_QComboBox_setMinimumContentsLength);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_iconSize, "QComboBox.iconSize() -> QSize");

extern "C" {static PyObject *meth_QComboBox_iconSize(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_iconSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QSize*sipRes;

            sipRes = new QSize(sipCpp->iconSize());

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_iconSize, doc_QComboBox_iconSize);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setIconSize, "QComboBox.setIconSize(QSize)");

extern "C" {static PyObject *meth_QComboBox_setIconSize(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setIconSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSize* a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QSize, &a0))
        {
            sipCpp->setIconSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setIconSize, doc_QComboBox_setIconSize);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_isEditable, "QComboBox.isEditable() -> bool");

extern "C" {static PyObject *meth_QComboBox_isEditable(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_isEditable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isEditable();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_isEditable, doc_QComboBox_isEditable);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setEditable, "QComboBox.setEditable(bool)");

extern "C" {static PyObject *meth_QComboBox_setEditable(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setEditable(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setEditable(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setEditable, doc_QComboBox_setEditable);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setLineEdit, "QComboBox.setLineEdit(QLineEdit)");

extern "C" {static PyObject *meth_QComboBox_setLineEdit(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setLineEdit(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QLineEdit* a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QLineEdit, &a0))
        {
            sipCpp->setLineEdit(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setLineEdit, doc_QComboBox_setLineEdit);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_lineEdit, "QComboBox.lineEdit() -> QLineEdit");

extern "C" {static PyObject *meth_QComboBox_lineEdit(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_lineEdit(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QLineEdit*sipRes;

            sipRes = sipCpp->lineEdit();

            return sipConvertFromType(sipRes,sipType_QLineEdit,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_lineEdit, doc_QComboBox_lineEdit);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setValidator, "QComboBox.setValidator(QValidator)");

extern "C" {static PyObject *meth_QComboBox_setValidator(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setValidator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QValidator* a0;
        PyObject *a0Keep;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QComboBox, &sipCpp, &a0Keep, sipType_QValidator, &a0))
        {
            sipCpp->setValidator(a0);

            sipKeepReference(sipSelf, -12, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setValidator, doc_QComboBox_setValidator);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_validator, "QComboBox.validator() -> QValidator");

extern "C" {static PyObject *meth_QComboBox_validator(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_validator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            const QValidator*sipRes;

            sipRes = sipCpp->validator();

            return sipConvertFromType(const_cast<QValidator *>(sipRes),sipType_QValidator,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_validator, doc_QComboBox_validator);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_itemDelegate, "QComboBox.itemDelegate() -> QAbstractItemDelegate");

extern "C" {static PyObject *meth_QComboBox_itemDelegate(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_itemDelegate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QAbstractItemDelegate*sipRes;

            sipRes = sipCpp->itemDelegate();

            return sipConvertFromType(sipRes,sipType_QAbstractItemDelegate,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_itemDelegate, doc_QComboBox_itemDelegate);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setItemDelegate, "QComboBox.setItemDelegate(QAbstractItemDelegate)");

extern "C" {static PyObject *meth_QComboBox_setItemDelegate(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setItemDelegate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractItemDelegate* a0;
        PyObject *a0Keep;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QComboBox, &sipCpp, &a0Keep, sipType_QAbstractItemDelegate, &a0))
        {
            sipCpp->setItemDelegate(a0);

            sipKeepReference(sipSelf, -13, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setItemDelegate, doc_QComboBox_setItemDelegate);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_model, "QComboBox.model() -> QAbstractItemModel");

extern "C" {static PyObject *meth_QComboBox_model(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_model(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QAbstractItemModel*sipRes;

            sipRes = sipCpp->model();

            return sipConvertFromType(sipRes,sipType_QAbstractItemModel,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_model, doc_QComboBox_model);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setModel, "QComboBox.setModel(QAbstractItemModel)");

extern "C" {static PyObject *meth_QComboBox_setModel(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setModel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractItemModel* a0;
        PyObject *a0Keep;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QComboBox, &sipCpp, &a0Keep, sipType_QAbstractItemModel, &a0))
        {
            sipCpp->setModel(a0);

            sipKeepReference(sipSelf, -14, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setModel, doc_QComboBox_setModel);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_rootModelIndex, "QComboBox.rootModelIndex() -> QModelIndex");

extern "C" {static PyObject *meth_QComboBox_rootModelIndex(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_rootModelIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QModelIndex*sipRes;

            sipRes = new QModelIndex(sipCpp->rootModelIndex());

            return sipConvertFromNewType(sipRes,sipType_QModelIndex,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_rootModelIndex, doc_QComboBox_rootModelIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setRootModelIndex, "QComboBox.setRootModelIndex(QModelIndex)");

extern "C" {static PyObject *meth_QComboBox_setRootModelIndex(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setRootModelIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QModelIndex* a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QModelIndex, &a0))
        {
            sipCpp->setRootModelIndex(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setRootModelIndex, doc_QComboBox_setRootModelIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_modelColumn, "QComboBox.modelColumn() -> int");

extern "C" {static PyObject *meth_QComboBox_modelColumn(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_modelColumn(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->modelColumn();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_modelColumn, doc_QComboBox_modelColumn);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setModelColumn, "QComboBox.setModelColumn(int)");

extern "C" {static PyObject *meth_QComboBox_setModelColumn(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setModelColumn(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setModelColumn(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setModelColumn, doc_QComboBox_setModelColumn);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_currentIndex, "QComboBox.currentIndex() -> int");

extern "C" {static PyObject *meth_QComboBox_currentIndex(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_currentIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->currentIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_currentIndex, doc_QComboBox_currentIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setCurrentIndex, "QComboBox.setCurrentIndex(int)");

extern "C" {static PyObject *meth_QComboBox_setCurrentIndex(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setCurrentIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->setCurrentIndex(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setCurrentIndex, doc_QComboBox_setCurrentIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_currentText, "QComboBox.currentText() -> str");

extern "C" {static PyObject *meth_QComboBox_currentText(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_currentText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->currentText());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_currentText, doc_QComboBox_currentText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_itemText, "QComboBox.itemText(int) -> str");

extern "C" {static PyObject *meth_QComboBox_itemText(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_itemText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->itemText(a0));

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_itemText, doc_QComboBox_itemText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_itemIcon, "QComboBox.itemIcon(int) -> QIcon");

extern "C" {static PyObject *meth_QComboBox_itemIcon(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_itemIcon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            QIcon*sipRes;

            sipRes = new QIcon(sipCpp->itemIcon(a0));

            return sipConvertFromNewType(sipRes,sipType_QIcon,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_itemIcon, doc_QComboBox_itemIcon);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_itemData, "QComboBox.itemData(int, int role=Qt.UserRole) -> QVariant");

extern "C" {static PyObject *meth_QComboBox_itemData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_itemData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1 = Qt::UserRole;
        const QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bi|i", &sipSelf, sipType_QComboBox, &sipCpp, &a0, &a1))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->itemData(a0,a1));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_itemData, doc_QComboBox_itemData);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_addItems, "QComboBox.addItems(list-of-str)");

extern "C" {static PyObject *meth_QComboBox_addItems(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_addItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QStringList* a0;
        int a0State = 0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
            sipCpp->addItems(*a0);
            sipReleaseType(const_cast<QStringList *>(a0),sipType_QStringList,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_addItems, doc_QComboBox_addItems);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_addItem, "QComboBox.addItem(str, QVariant userData=None)\n"
    "QComboBox.addItem(QIcon, str, QVariant userData=None)");

extern "C" {static PyObject *meth_QComboBox_addItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_addItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        const QVariant& a1def = QVariant();
        const QVariant* a1 = &a1def;
        int a1State = 0;
        QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_userData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|J1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QString,&a0, &a0State, sipType_QVariant, &a1, &a1State))
        {
            sipCpp->addItem(*a0,*a1);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QIcon* a0;
        const QString* a1;
        int a1State = 0;
        const QVariant& a2def = QVariant();
        const QVariant* a2 = &a2def;
        int a2State = 0;
        QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_userData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9J1|J1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QIcon, &a0, sipType_QString,&a1, &a1State, sipType_QVariant, &a2, &a2State))
        {
            sipCpp->addItem(*a0,*a1,*a2);
            sipReleaseType(const_cast<QString *>(a1),sipType_QString,a1State);
            sipReleaseType(const_cast<QVariant *>(a2),sipType_QVariant,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_addItem, doc_QComboBox_addItem);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_insertItem, "QComboBox.insertItem(int, str, QVariant userData=None)\n"
    "QComboBox.insertItem(int, QIcon, str, QVariant userData=None)");

extern "C" {static PyObject *meth_QComboBox_insertItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_insertItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QString* a1;
        int a1State = 0;
        const QVariant& a2def = QVariant();
        const QVariant* a2 = &a2def;
        int a2State = 0;
        QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_userData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BiJ1|J1", &sipSelf, sipType_QComboBox, &sipCpp, &a0, sipType_QString,&a1, &a1State, sipType_QVariant, &a2, &a2State))
        {
            sipCpp->insertItem(a0,*a1,*a2);
            sipReleaseType(const_cast<QString *>(a1),sipType_QString,a1State);
            sipReleaseType(const_cast<QVariant *>(a2),sipType_QVariant,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        int a0;
        const QIcon* a1;
        const QString* a2;
        int a2State = 0;
        const QVariant& a3def = QVariant();
        const QVariant* a3 = &a3def;
        int a3State = 0;
        QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            sipName_userData,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BiJ9J1|J1", &sipSelf, sipType_QComboBox, &sipCpp, &a0, sipType_QIcon, &a1, sipType_QString,&a2, &a2State, sipType_QVariant, &a3, &a3State))
        {
            sipCpp->insertItem(a0,*a1,*a2,*a3);
            sipReleaseType(const_cast<QString *>(a2),sipType_QString,a2State);
            sipReleaseType(const_cast<QVariant *>(a3),sipType_QVariant,a3State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_insertItem, doc_QComboBox_insertItem);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_insertItems, "QComboBox.insertItems(int, list-of-str)");

extern "C" {static PyObject *meth_QComboBox_insertItems(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_insertItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QStringList* a1;
        int a1State = 0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QComboBox, &sipCpp, &a0, sipType_QStringList,&a1, &a1State))
        {
            sipCpp->insertItems(a0,*a1);
            sipReleaseType(const_cast<QStringList *>(a1),sipType_QStringList,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_insertItems, doc_QComboBox_insertItems);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_removeItem, "QComboBox.removeItem(int)");

extern "C" {static PyObject *meth_QComboBox_removeItem(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_removeItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->removeItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_removeItem, doc_QComboBox_removeItem);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setItemText, "QComboBox.setItemText(int, str)");

extern "C" {static PyObject *meth_QComboBox_setItemText(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setItemText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QString* a1;
        int a1State = 0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QComboBox, &sipCpp, &a0, sipType_QString,&a1, &a1State))
        {
            sipCpp->setItemText(a0,*a1);
            sipReleaseType(const_cast<QString *>(a1),sipType_QString,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setItemText, doc_QComboBox_setItemText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setItemIcon, "QComboBox.setItemIcon(int, QIcon)");

extern "C" {static PyObject *meth_QComboBox_setItemIcon(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setItemIcon(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QIcon* a1;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ9", &sipSelf, sipType_QComboBox, &sipCpp, &a0, sipType_QIcon, &a1))
        {
            sipCpp->setItemIcon(a0,*a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setItemIcon, doc_QComboBox_setItemIcon);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setItemData, "QComboBox.setItemData(int, QVariant, int role=Qt.UserRole)");

extern "C" {static PyObject *meth_QComboBox_setItemData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setItemData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QVariant* a1;
        int a1State = 0;
        int a2 = Qt::UserRole;
        QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BiJ1|i", &sipSelf, sipType_QComboBox, &sipCpp, &a0, sipType_QVariant, &a1, &a1State, &a2))
        {
            sipCpp->setItemData(a0,*a1,a2);
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setItemData, doc_QComboBox_setItemData);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_view, "QComboBox.view() -> QAbstractItemView");

extern "C" {static PyObject *meth_QComboBox_view(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_view(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QAbstractItemView*sipRes;

            sipRes = sipCpp->view();

            return sipConvertFromType(sipRes,sipType_QAbstractItemView,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_view, doc_QComboBox_view);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setView, "QComboBox.setView(QAbstractItemView)");

extern "C" {static PyObject *meth_QComboBox_setView(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setView(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAbstractItemView* a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QAbstractItemView, &a0))
        {
            sipCpp->setView(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setView, doc_QComboBox_setView);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_sizeHint, "QComboBox.sizeHint() -> QSize");

extern "C" {static PyObject *meth_QComboBox_sizeHint(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_sizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QSize*sipRes;

            sipRes = new QSize((sipSelfWasArg ? sipCpp->QComboBox::sizeHint() : sipCpp->sizeHint()));

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_sizeHint, doc_QComboBox_sizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_minimumSizeHint, "QComboBox.minimumSizeHint() -> QSize");

extern "C" {static PyObject *meth_QComboBox_minimumSizeHint(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_minimumSizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QSize*sipRes;

            sipRes = new QSize((sipSelfWasArg ? sipCpp->QComboBox::minimumSizeHint() : sipCpp->minimumSizeHint()));

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_minimumSizeHint, doc_QComboBox_minimumSizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_showPopup, "QComboBox.showPopup()");

extern "C" {static PyObject *meth_QComboBox_showPopup(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_showPopup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp->QComboBox::showPopup() : sipCpp->showPopup());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_showPopup, doc_QComboBox_showPopup);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_hidePopup, "QComboBox.hidePopup()");

extern "C" {static PyObject *meth_QComboBox_hidePopup(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_hidePopup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp->QComboBox::hidePopup() : sipCpp->hidePopup());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_hidePopup, doc_QComboBox_hidePopup);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_event, "QComboBox.event(QEvent) -> bool");

extern "C" {static PyObject *meth_QComboBox_event(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QComboBox::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_event, doc_QComboBox_event);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setCompleter, "QComboBox.setCompleter(QCompleter)");

extern "C" {static PyObject *meth_QComboBox_setCompleter(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setCompleter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QCompleter* a0;
        PyObject *a0Keep;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QComboBox, &sipCpp, &a0Keep, sipType_QCompleter, &a0))
        {
            sipCpp->setCompleter(a0);

            sipKeepReference(sipSelf, -15, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setCompleter, doc_QComboBox_setCompleter);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_completer, "QComboBox.completer() -> QCompleter");

extern "C" {static PyObject *meth_QComboBox_completer(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_completer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            QCompleter*sipRes;

            sipRes = sipCpp->completer();

            return sipConvertFromType(sipRes,sipType_QCompleter,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_completer, doc_QComboBox_completer);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_insertSeparator, "QComboBox.insertSeparator(int)");

extern "C" {static PyObject *meth_QComboBox_insertSeparator(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_insertSeparator(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            sipCpp->insertSeparator(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_insertSeparator, doc_QComboBox_insertSeparator);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_clear, "QComboBox.clear()");

extern "C" {static PyObject *meth_QComboBox_clear(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            sipCpp->clear();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_clear, doc_QComboBox_clear);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_clearEditText, "QComboBox.clearEditText()");

extern "C" {static PyObject *meth_QComboBox_clearEditText(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_clearEditText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QComboBox, &sipCpp))
        {
            sipCpp->clearEditText();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_clearEditText, doc_QComboBox_clearEditText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setEditText, "QComboBox.setEditText(str)");

extern "C" {static PyObject *meth_QComboBox_setEditText(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setEditText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setEditText(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setEditText, doc_QComboBox_setEditText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_setCurrentText, "QComboBox.setCurrentText(str)");

extern "C" {static PyObject *meth_QComboBox_setCurrentText(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_setCurrentText(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setCurrentText(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_setCurrentText, doc_QComboBox_setCurrentText);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_initStyleOption, "QComboBox.initStyleOption(QStyleOptionComboBox)");

extern "C" {static PyObject *meth_QComboBox_initStyleOption(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_initStyleOption(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QStyleOptionComboBox* a0;
        const sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QStyleOptionComboBox, &a0))
        {
            sipCpp->sipProtect_initStyleOption(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_initStyleOption, doc_QComboBox_initStyleOption);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_focusInEvent, "QComboBox.focusInEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QComboBox_focusInEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_focusInEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_focusInEvent, doc_QComboBox_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_focusOutEvent, "QComboBox.focusOutEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QComboBox_focusOutEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_focusOutEvent, doc_QComboBox_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_changeEvent, "QComboBox.changeEvent(QEvent)");

extern "C" {static PyObject *meth_QComboBox_changeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_changeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_changeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_changeEvent, doc_QComboBox_changeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_resizeEvent, "QComboBox.resizeEvent(QResizeEvent)");

extern "C" {static PyObject *meth_QComboBox_resizeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_resizeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QResizeEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QResizeEvent, &a0))
        {
            sipCpp->sipProtectVirt_resizeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_resizeEvent, doc_QComboBox_resizeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_paintEvent, "QComboBox.paintEvent(QPaintEvent)");

extern "C" {static PyObject *meth_QComboBox_paintEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_paintEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPaintEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QPaintEvent, &a0))
        {
            sipCpp->sipProtectVirt_paintEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_paintEvent, doc_QComboBox_paintEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_showEvent, "QComboBox.showEvent(QShowEvent)");

extern "C" {static PyObject *meth_QComboBox_showEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_showEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QShowEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QShowEvent, &a0))
        {
            sipCpp->sipProtectVirt_showEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_showEvent, doc_QComboBox_showEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_hideEvent, "QComboBox.hideEvent(QHideEvent)");

extern "C" {static PyObject *meth_QComboBox_hideEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_hideEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QHideEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QHideEvent, &a0))
        {
            sipCpp->sipProtectVirt_hideEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_hideEvent, doc_QComboBox_hideEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_mousePressEvent, "QComboBox.mousePressEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QComboBox_mousePressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_mousePressEvent, doc_QComboBox_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_mouseReleaseEvent, "QComboBox.mouseReleaseEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QComboBox_mouseReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_mouseReleaseEvent, doc_QComboBox_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_keyPressEvent, "QComboBox.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QComboBox_keyPressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_keyPressEvent, doc_QComboBox_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_keyReleaseEvent, "QComboBox.keyReleaseEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QComboBox_keyReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_keyReleaseEvent, doc_QComboBox_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_wheelEvent, "QComboBox.wheelEvent(QWheelEvent)");

extern "C" {static PyObject *meth_QComboBox_wheelEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_wheelEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QWheelEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QWheelEvent, &a0))
        {
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_wheelEvent, doc_QComboBox_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_contextMenuEvent, "QComboBox.contextMenuEvent(QContextMenuEvent)");

extern "C" {static PyObject *meth_QComboBox_contextMenuEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QContextMenuEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QContextMenuEvent, &a0))
        {
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_contextMenuEvent, doc_QComboBox_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_inputMethodEvent, "QComboBox.inputMethodEvent(QInputMethodEvent)");

extern "C" {static PyObject *meth_QComboBox_inputMethodEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent* a0;
        sipQComboBox *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QComboBox, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_inputMethodEvent, doc_QComboBox_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_inputMethodQuery, "QComboBox.inputMethodQuery(Qt.InputMethodQuery) -> QVariant");

extern "C" {static PyObject *meth_QComboBox_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QComboBox_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        const QComboBox *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QComboBox, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant*sipRes;

            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QComboBox::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_inputMethodQuery, doc_QComboBox_inputMethodQuery);

    return NULL;
}


PyDoc_STRVAR(doc_QComboBox_currentData, "QComboBox.currentData(int role=Qt.UserRole) -> QVariant");

extern "C" {static PyObject *meth_QComboBox_currentData(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QComboBox_currentData(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0 = Qt::UserRole;
        const QComboBox *sipCpp;

        static const char *sipKwdList[] = {
            sipName_role,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|i", &sipSelf, sipType_QComboBox, &sipCpp, &a0))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->currentData(a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QComboBox, sipName_currentData, doc_QComboBox_currentData);

    return NULL;
}


extern "C" {static SIP_SSIZE_T slot_QComboBox___len__(PyObject *);}
static SIP_SSIZE_T slot_QComboBox___len__(PyObject *sipSelf)
{
    QComboBox *sipCpp = reinterpret_cast<QComboBox *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QComboBox));

    if (!sipCpp)
        return 0;


    {
        {
            SIP_SSIZE_T sipRes = 0;

#line 1 "Auto-generated"
            sipRes = (SIP_SSIZE_T)sipCpp->count();
#line 4720 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQComboBox.cpp"

            return sipRes;
        }
    }

    return 0;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QComboBox(void *, const sipTypeDef *);}
static void *cast_QComboBox(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QComboBox)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QWidget)->ctd_cast((QWidget *)(QComboBox *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QComboBox(void *, int);}
static void release_QComboBox(void *sipCppV,int)
{
    QComboBox *sipCpp = reinterpret_cast<QComboBox *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QComboBox(sipSimpleWrapper *);}
static void dealloc_QComboBox(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQComboBox *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QComboBox(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QComboBox(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QComboBox(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQComboBox *sipCpp = 0;

    {
        QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            sipCpp = new sipQComboBox(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QComboBox[] = {{454, 255, 1}};


/* Define this type's Python slots. */
static sipPySlotDef slots_QComboBox[] = {
    {(void *)slot_QComboBox___len__, len_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QComboBox[] = {
    {SIP_MLNAME_CAST(sipName_actionEvent), (PyCFunction)meth_QComboBox_actionEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addItem), (PyCFunction)meth_QComboBox_addItem, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_addItem)},
    {SIP_MLNAME_CAST(sipName_addItems), meth_QComboBox_addItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_addItems)},
    {SIP_MLNAME_CAST(sipName_changeEvent), (PyCFunction)meth_QComboBox_changeEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_changeEvent)},
    {SIP_MLNAME_CAST(sipName_childEvent), (PyCFunction)meth_QComboBox_childEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_clear), meth_QComboBox_clear, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_clear)},
    {SIP_MLNAME_CAST(sipName_clearEditText), meth_QComboBox_clearEditText, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_clearEditText)},
    {SIP_MLNAME_CAST(sipName_closeEvent), (PyCFunction)meth_QComboBox_closeEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_completer), meth_QComboBox_completer, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_completer)},
    {SIP_MLNAME_CAST(sipName_connectNotify), (PyCFunction)meth_QComboBox_connectNotify, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), (PyCFunction)meth_QComboBox_contextMenuEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_contextMenuEvent)},
    {SIP_MLNAME_CAST(sipName_count), meth_QComboBox_count, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_count)},
    {SIP_MLNAME_CAST(sipName_create), (PyCFunction)meth_QComboBox_create, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_currentData), (PyCFunction)meth_QComboBox_currentData, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_currentData)},
    {SIP_MLNAME_CAST(sipName_currentIndex), meth_QComboBox_currentIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_currentIndex)},
    {SIP_MLNAME_CAST(sipName_currentText), meth_QComboBox_currentText, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_currentText)},
    {SIP_MLNAME_CAST(sipName_customEvent), (PyCFunction)meth_QComboBox_customEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_destroy), (PyCFunction)meth_QComboBox_destroy, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_disconnectNotify), (PyCFunction)meth_QComboBox_disconnectNotify, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), (PyCFunction)meth_QComboBox_dragEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), (PyCFunction)meth_QComboBox_dragLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), (PyCFunction)meth_QComboBox_dragMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), (PyCFunction)meth_QComboBox_dropEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_duplicatesEnabled), meth_QComboBox_duplicatesEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_duplicatesEnabled)},
    {SIP_MLNAME_CAST(sipName_enterEvent), (PyCFunction)meth_QComboBox_enterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_event), meth_QComboBox_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_event)},
    {SIP_MLNAME_CAST(sipName_findData), (PyCFunction)meth_QComboBox_findData, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_findData)},
    {SIP_MLNAME_CAST(sipName_findText), (PyCFunction)meth_QComboBox_findText, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_findText)},
    {SIP_MLNAME_CAST(sipName_focusInEvent), (PyCFunction)meth_QComboBox_focusInEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_focusInEvent)},
    {SIP_MLNAME_CAST(sipName_focusNextChild), (PyCFunction)meth_QComboBox_focusNextChild, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusNextPrevChild), (PyCFunction)meth_QComboBox_focusNextPrevChild, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), (PyCFunction)meth_QComboBox_focusOutEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_focusOutEvent)},
    {SIP_MLNAME_CAST(sipName_focusPreviousChild), (PyCFunction)meth_QComboBox_focusPreviousChild, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hasFrame), meth_QComboBox_hasFrame, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_hasFrame)},
    {SIP_MLNAME_CAST(sipName_hideEvent), (PyCFunction)meth_QComboBox_hideEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_hideEvent)},
    {SIP_MLNAME_CAST(sipName_hidePopup), meth_QComboBox_hidePopup, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_hidePopup)},
    {SIP_MLNAME_CAST(sipName_iconSize), meth_QComboBox_iconSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_iconSize)},
    {SIP_MLNAME_CAST(sipName_initPainter), (PyCFunction)meth_QComboBox_initPainter, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_initStyleOption), (PyCFunction)meth_QComboBox_initStyleOption, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_initStyleOption)},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), (PyCFunction)meth_QComboBox_inputMethodEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_inputMethodEvent)},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QComboBox_inputMethodQuery, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_inputMethodQuery)},
    {SIP_MLNAME_CAST(sipName_insertItem), (PyCFunction)meth_QComboBox_insertItem, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_insertItem)},
    {SIP_MLNAME_CAST(sipName_insertItems), meth_QComboBox_insertItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_insertItems)},
    {SIP_MLNAME_CAST(sipName_insertPolicy), meth_QComboBox_insertPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_insertPolicy)},
    {SIP_MLNAME_CAST(sipName_insertSeparator), meth_QComboBox_insertSeparator, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_insertSeparator)},
    {SIP_MLNAME_CAST(sipName_isEditable), meth_QComboBox_isEditable, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_isEditable)},
    {SIP_MLNAME_CAST(sipName_isSignalConnected), (PyCFunction)meth_QComboBox_isSignalConnected, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_itemData), (PyCFunction)meth_QComboBox_itemData, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_itemData)},
    {SIP_MLNAME_CAST(sipName_itemDelegate), meth_QComboBox_itemDelegate, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_itemDelegate)},
    {SIP_MLNAME_CAST(sipName_itemIcon), meth_QComboBox_itemIcon, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_itemIcon)},
    {SIP_MLNAME_CAST(sipName_itemText), meth_QComboBox_itemText, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_itemText)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), (PyCFunction)meth_QComboBox_keyPressEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_keyPressEvent)},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), (PyCFunction)meth_QComboBox_keyReleaseEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_keyReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_leaveEvent), (PyCFunction)meth_QComboBox_leaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_lineEdit), meth_QComboBox_lineEdit, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_lineEdit)},
    {SIP_MLNAME_CAST(sipName_maxCount), meth_QComboBox_maxCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_maxCount)},
    {SIP_MLNAME_CAST(sipName_maxVisibleItems), meth_QComboBox_maxVisibleItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_maxVisibleItems)},
    {SIP_MLNAME_CAST(sipName_metric), (PyCFunction)meth_QComboBox_metric, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_minimumContentsLength), meth_QComboBox_minimumContentsLength, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_minimumContentsLength)},
    {SIP_MLNAME_CAST(sipName_minimumSizeHint), meth_QComboBox_minimumSizeHint, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_minimumSizeHint)},
    {SIP_MLNAME_CAST(sipName_model), meth_QComboBox_model, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_model)},
    {SIP_MLNAME_CAST(sipName_modelColumn), meth_QComboBox_modelColumn, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_modelColumn)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), (PyCFunction)meth_QComboBox_mouseDoubleClickEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), (PyCFunction)meth_QComboBox_mouseMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), (PyCFunction)meth_QComboBox_mousePressEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), (PyCFunction)meth_QComboBox_mouseReleaseEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_moveEvent), (PyCFunction)meth_QComboBox_moveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_nativeEvent), (PyCFunction)meth_QComboBox_nativeEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_paintEvent), (PyCFunction)meth_QComboBox_paintEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_paintEvent)},
    {SIP_MLNAME_CAST(sipName_receivers), (PyCFunction)meth_QComboBox_receivers, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_removeItem), meth_QComboBox_removeItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_removeItem)},
    {SIP_MLNAME_CAST(sipName_resizeEvent), (PyCFunction)meth_QComboBox_resizeEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_resizeEvent)},
    {SIP_MLNAME_CAST(sipName_rootModelIndex), meth_QComboBox_rootModelIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_rootModelIndex)},
    {SIP_MLNAME_CAST(sipName_sender), (PyCFunction)meth_QComboBox_sender, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_senderSignalIndex), (PyCFunction)meth_QComboBox_senderSignalIndex, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setCompleter), meth_QComboBox_setCompleter, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setCompleter)},
    {SIP_MLNAME_CAST(sipName_setCurrentIndex), meth_QComboBox_setCurrentIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setCurrentIndex)},
    {SIP_MLNAME_CAST(sipName_setCurrentText), meth_QComboBox_setCurrentText, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setCurrentText)},
    {SIP_MLNAME_CAST(sipName_setDuplicatesEnabled), meth_QComboBox_setDuplicatesEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setDuplicatesEnabled)},
    {SIP_MLNAME_CAST(sipName_setEditText), meth_QComboBox_setEditText, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setEditText)},
    {SIP_MLNAME_CAST(sipName_setEditable), meth_QComboBox_setEditable, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setEditable)},
    {SIP_MLNAME_CAST(sipName_setFrame), meth_QComboBox_setFrame, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setFrame)},
    {SIP_MLNAME_CAST(sipName_setIconSize), meth_QComboBox_setIconSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setIconSize)},
    {SIP_MLNAME_CAST(sipName_setInsertPolicy), meth_QComboBox_setInsertPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setInsertPolicy)},
    {SIP_MLNAME_CAST(sipName_setItemData), (PyCFunction)meth_QComboBox_setItemData, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_setItemData)},
    {SIP_MLNAME_CAST(sipName_setItemDelegate), meth_QComboBox_setItemDelegate, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setItemDelegate)},
    {SIP_MLNAME_CAST(sipName_setItemIcon), meth_QComboBox_setItemIcon, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setItemIcon)},
    {SIP_MLNAME_CAST(sipName_setItemText), meth_QComboBox_setItemText, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setItemText)},
    {SIP_MLNAME_CAST(sipName_setLineEdit), meth_QComboBox_setLineEdit, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setLineEdit)},
    {SIP_MLNAME_CAST(sipName_setMaxCount), meth_QComboBox_setMaxCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setMaxCount)},
    {SIP_MLNAME_CAST(sipName_setMaxVisibleItems), meth_QComboBox_setMaxVisibleItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setMaxVisibleItems)},
    {SIP_MLNAME_CAST(sipName_setMinimumContentsLength), meth_QComboBox_setMinimumContentsLength, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setMinimumContentsLength)},
    {SIP_MLNAME_CAST(sipName_setModel), meth_QComboBox_setModel, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setModel)},
    {SIP_MLNAME_CAST(sipName_setModelColumn), meth_QComboBox_setModelColumn, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setModelColumn)},
    {SIP_MLNAME_CAST(sipName_setRootModelIndex), meth_QComboBox_setRootModelIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setRootModelIndex)},
    {SIP_MLNAME_CAST(sipName_setSizeAdjustPolicy), meth_QComboBox_setSizeAdjustPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setSizeAdjustPolicy)},
    {SIP_MLNAME_CAST(sipName_setValidator), meth_QComboBox_setValidator, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setValidator)},
    {SIP_MLNAME_CAST(sipName_setView), meth_QComboBox_setView, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_setView)},
    {SIP_MLNAME_CAST(sipName_sharedPainter), (PyCFunction)meth_QComboBox_sharedPainter, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_showEvent), (PyCFunction)meth_QComboBox_showEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_showEvent)},
    {SIP_MLNAME_CAST(sipName_showPopup), meth_QComboBox_showPopup, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_showPopup)},
    {SIP_MLNAME_CAST(sipName_sizeAdjustPolicy), meth_QComboBox_sizeAdjustPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_sizeAdjustPolicy)},
    {SIP_MLNAME_CAST(sipName_sizeHint), meth_QComboBox_sizeHint, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_sizeHint)},
    {SIP_MLNAME_CAST(sipName_tabletEvent), (PyCFunction)meth_QComboBox_tabletEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_timerEvent), (PyCFunction)meth_QComboBox_timerEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), (PyCFunction)meth_QComboBox_updateMicroFocus, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_validator), meth_QComboBox_validator, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_validator)},
    {SIP_MLNAME_CAST(sipName_view), meth_QComboBox_view, METH_VARARGS, SIP_MLDOC_CAST(doc_QComboBox_view)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), (PyCFunction)meth_QComboBox_wheelEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QComboBox_wheelEvent)}
};

static sipEnumMemberDef enummembers_QComboBox[] = {
    {sipName_AdjustToContents, static_cast<int>(QComboBox::AdjustToContents), 46},
    {sipName_AdjustToContentsOnFirstShow, static_cast<int>(QComboBox::AdjustToContentsOnFirstShow), 46},
    {sipName_AdjustToMinimumContentsLength, static_cast<int>(QComboBox::AdjustToMinimumContentsLength), 46},
    {sipName_AdjustToMinimumContentsLengthWithIcon, static_cast<int>(QComboBox::AdjustToMinimumContentsLengthWithIcon), 46},
    {sipName_InsertAfterCurrent, static_cast<int>(QComboBox::InsertAfterCurrent), 45},
    {sipName_InsertAlphabetically, static_cast<int>(QComboBox::InsertAlphabetically), 45},
    {sipName_InsertAtBottom, static_cast<int>(QComboBox::InsertAtBottom), 45},
    {sipName_InsertAtCurrent, static_cast<int>(QComboBox::InsertAtCurrent), 45},
    {sipName_InsertAtTop, static_cast<int>(QComboBox::InsertAtTop), 45},
    {sipName_InsertBeforeCurrent, static_cast<int>(QComboBox::InsertBeforeCurrent), 45},
    {sipName_NoInsert, static_cast<int>(QComboBox::NoInsert), 45},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QComboBox[] = {
    {"highlighted(int)", "\1QComboBox.highlighted[int]", 0, 0},
    {"highlighted(QString)", "\1QComboBox.highlighted[str]", 0, 0},
    {"currentTextChanged(QString)", "\1QComboBox.currentTextChanged[str]", 0, 0},
    {"currentIndexChanged(int)", "\1QComboBox.currentIndexChanged[int]", 0, 0},
    {"currentIndexChanged(QString)", "\1QComboBox.currentIndexChanged[str]", 0, 0},
    {"activated(int)", "\1QComboBox.activated[int]", 0, 0},
    {"activated(QString)", "\1QComboBox.activated[str]", 0, 0},
    {"editTextChanged(QString)", "\1QComboBox.editTextChanged[str]", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QComboBox, "\1QComboBox(QWidget parent=None)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QComboBox = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QComboBox,
        {0}
    },
    {
        sipNameNr_QComboBox,
        {0, 0, 1},
        109, methods_QComboBox,
        11, enummembers_QComboBox,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QComboBox,
    -1,
    -1,
    supers_QComboBox,
    slots_QComboBox,
    init_type_QComboBox,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QComboBox,
    0,
    0,
    0,
    release_QComboBox,
    cast_QComboBox,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QComboBox::staticMetaObject,
    0,
    signals_QComboBox,
    0
};
