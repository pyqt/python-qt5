/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:11 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"

#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 165 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 430 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 225 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 241 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 51 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 441 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 54 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 57 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 408 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 60 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 63 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 99 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 66 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 69 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 101 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 72 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 75 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 78 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 165 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 81 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 84 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 1016 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 87 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 90 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 93 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qaction.sip"
#include <qaction.h>
#line 96 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 99 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 102 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 105 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qfont.sip"
#include <qfont.h>
#line 108 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qstyle.sip"
#include <qstyle.h>
#line 111 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicslayout.sip"
#include <qgraphicslayout.h>
#line 114 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 117 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 120 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 234 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 123 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 222 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 126 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 129 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 132 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 135 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 138 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 141 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 144 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 147 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 150 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 153 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 156 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 159 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 162 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 165 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 638 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 168 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 171 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 174 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 177 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 180 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 120 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 183 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 89 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 186 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 333 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 189 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 479 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 192 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 200 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 195 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 140 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 198 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 327 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 201 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 204 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 207 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 210 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 606 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 213 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 216 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 219 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 222 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"


class sipQGraphicsWidget : public QGraphicsWidget
{
public:
    sipQGraphicsWidget(QGraphicsItem*,Qt::WindowFlags);
    virtual ~sipQGraphicsWidget();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtect_setGraphicsItem(QGraphicsItem*);
    void sipProtect_setOwnedByLayout(bool);
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent*);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_hoverEnterEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent*);
    QVariant sipProtectVirt_inputMethodQuery(bool,Qt::InputMethodQuery) const;
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent*);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent*);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEventFilter(bool,QGraphicsItem*,QEvent*);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent*);
    QObject* sipProtect_sender() const;
    int sipProtect_receivers(const char*) const;
    void sipProtectVirt_timerEvent(bool,QTimerEvent*);
    void sipProtectVirt_childEvent(bool,QChildEvent*);
    void sipProtectVirt_customEvent(bool,QEvent*);
    void sipProtectVirt_connectNotify(bool,const QMetaMethod&);
    void sipProtectVirt_disconnectNotify(bool,const QMetaMethod&);
    int sipProtect_senderSignalIndex() const;
    bool sipProtect_isSignalConnected(const QMetaMethod&) const;
    void sipProtect_updateMicroFocus();
    void sipProtectVirt_initStyleOption(bool,QStyleOption*) const;
    QSizeF sipProtectVirt_sizeHint(bool,Qt::SizeHint,const QSizeF&) const;
    void sipProtectVirt_updateGeometry(bool);
    QVariant sipProtectVirt_itemChange(bool,QGraphicsItem::GraphicsItemChange,const QVariant&);
    bool sipProtectVirt_sceneEvent(bool,QEvent*);
    bool sipProtectVirt_windowFrameEvent(bool,QEvent*);
    Qt::WindowFrameSection sipProtectVirt_windowFrameSectionAt(bool,const QPointF&) const;
    bool sipProtectVirt_event(bool,QEvent*);
    void sipProtectVirt_changeEvent(bool,QEvent*);
    void sipProtectVirt_closeEvent(bool,QCloseEvent*);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent*);
    bool sipProtectVirt_focusNextPrevChild(bool,bool);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent*);
    void sipProtectVirt_hideEvent(bool,QHideEvent*);
    void sipProtectVirt_moveEvent(bool,QGraphicsSceneMoveEvent*);
    void sipProtectVirt_polishEvent(bool);
    void sipProtectVirt_resizeEvent(bool,QGraphicsSceneResizeEvent*);
    void sipProtectVirt_showEvent(bool,QShowEvent*);
    void sipProtectVirt_hoverMoveEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverLeaveEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_grabMouseEvent(bool,QEvent*);
    void sipProtectVirt_ungrabMouseEvent(bool,QEvent*);
    void sipProtectVirt_grabKeyboardEvent(bool,QEvent*);
    void sipProtectVirt_ungrabKeyboardEvent(bool,QEvent*);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent(QGraphicsSceneWheelEvent*);
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    bool contains(const QPointF&) const;
    void advance(int);
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    void ungrabKeyboardEvent(QEvent*);
    void grabKeyboardEvent(QEvent*);
    void ungrabMouseEvent(QEvent*);
    void grabMouseEvent(QEvent*);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void showEvent(QShowEvent*);
    void resizeEvent(QGraphicsSceneResizeEvent*);
    void polishEvent();
    void moveEvent(QGraphicsSceneMoveEvent*);
    void hideEvent(QHideEvent*);
    void focusOutEvent(QFocusEvent*);
    bool focusNextPrevChild(bool);
    void focusInEvent(QFocusEvent*);
    void closeEvent(QCloseEvent*);
    void changeEvent(QEvent*);
    bool event(QEvent*);
    Qt::WindowFrameSection windowFrameSectionAt(const QPointF&) const;
    bool windowFrameEvent(QEvent*);
    bool sceneEvent(QEvent*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    void updateGeometry();
    QSizeF sizeHint(Qt::SizeHint,const QSizeF&) const;
    void initStyleOption(QStyleOption*) const;
    QPainterPath shape() const;
    QRectF boundingRect() const;
    void paintWindowFrame(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    int type() const;
    void getContentsMargins(qreal*,qreal*,qreal*,qreal*) const;
    void setGeometry(const QRectF&);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsWidget(const sipQGraphicsWidget &);
    sipQGraphicsWidget &operator = (const sipQGraphicsWidget &);

    char sipPyMethods[59];
};

sipQGraphicsWidget::sipQGraphicsWidget(QGraphicsItem*a0,Qt::WindowFlags a1): QGraphicsWidget(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsWidget::~sipQGraphicsWidget()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtWidgets_qt_metaobject(sipPySelf,sipType_QGraphicsWidget);
}

int sipQGraphicsWidget::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsWidget::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtWidgets_qt_metacall(sipPySelf,sipType_QGraphicsWidget,_c,_id,_a);

    return _id;
}

void *sipQGraphicsWidget::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtWidgets_qt_metacast(sipPySelf, sipType_QGraphicsWidget, _clname, &sipCpp) ? sipCpp : QGraphicsWidget::qt_metacast(_clname));
}

void sipQGraphicsWidget::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_117(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    sipVH_QtWidgets_117(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsWidget::sceneEventFilter(a0,a1);

    extern bool sipVH_QtWidgets_125(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return sipVH_QtWidgets_125(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsWidget::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_118(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtWidgets_118(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsWidget::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[8]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsWidget::inputMethodQuery(a0);

    extern QVariant sipVH_QtWidgets_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtWidgets_6(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_7(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtWidgets_7(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_104(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_104(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::dropEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_120(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtWidgets_120(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_121(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    sipVH_QtWidgets_121(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsWidget::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[16]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsWidget::opaqueArea();

    extern QPainterPath sipVH_QtWidgets_111(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_111(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQGraphicsWidget::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[17]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsWidget::isObscuredBy(a0);

    extern bool sipVH_QtWidgets_123(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return sipVH_QtWidgets_123(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[18]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsWidget::collidesWithPath(a0,a1);

    extern bool sipVH_QtWidgets_126(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtWidgets_126(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsWidget::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[19]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsWidget::collidesWithItem(a0,a1);

    extern bool sipVH_QtWidgets_127(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return sipVH_QtWidgets_127(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsWidget::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[20]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsWidget::contains(a0);

    extern bool sipVH_QtWidgets_124(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtWidgets_124(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsWidget::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QGraphicsWidget::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QGraphicsWidget::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[47]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[26],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QGraphicsWidget::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[26]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsWidget::ungrabKeyboardEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_ungrabKeyboardEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::ungrabKeyboardEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::grabKeyboardEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_grabKeyboardEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::grabKeyboardEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::ungrabMouseEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_ungrabMouseEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::ungrabMouseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::grabMouseEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_grabMouseEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::grabMouseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_104(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_104(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_104(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtWidgets_104(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::showEvent(QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::showEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QShowEvent*);

    ((sipVH_QtGui_6)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::resizeEvent(QGraphicsSceneResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_105(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneResizeEvent*);

    sipVH_QtWidgets_105(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::polishEvent()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_polishEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::polishEvent();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsWidget::moveEvent(QGraphicsSceneMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::moveEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_106(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMoveEvent*);

    sipVH_QtWidgets_106(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::hideEvent(QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::hideEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHideEvent*);

    ((sipVH_QtGui_5)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return QGraphicsWidget::focusNextPrevChild(a0);

    extern bool sipVH_QtWidgets_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtWidgets_5(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::closeEvent(QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::closeEvent(a0);
        return;
    }

    extern void sipVH_QtWidgets_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QCloseEvent*);

    sipVH_QtWidgets_14(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::changeEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
        QGraphicsWidget::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QGraphicsWidget::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

Qt::WindowFrameSection sipQGraphicsWidget::windowFrameSectionAt(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[45]),sipPySelf,NULL,sipName_windowFrameSectionAt);

    if (!sipMeth)
        return QGraphicsWidget::windowFrameSectionAt(a0);

    extern Qt::WindowFrameSection sipVH_QtWidgets_107(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtWidgets_107(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::windowFrameEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_windowFrameEvent);

    if (!sipMeth)
        return QGraphicsWidget::windowFrameEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsWidget::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[47],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsWidget::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsWidget::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[48],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsWidget::itemChange(a0,a1);

    extern QVariant sipVH_QtWidgets_108(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtWidgets_108(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsWidget::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[49],sipPySelf,NULL,sipName_updateGeometry);

    if (!sipMeth)
    {
        QGraphicsWidget::updateGeometry();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QSizeF sipQGraphicsWidget::sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[50]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QGraphicsWidget::sizeHint(a0,a1);

    extern QSizeF sipVH_QtWidgets_109(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::SizeHint,const QSizeF&);

    return sipVH_QtWidgets_109(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsWidget::initStyleOption(QStyleOption*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[51]),sipPySelf,NULL,sipName_initStyleOption);

    if (!sipMeth)
    {
        QGraphicsWidget::initStyleOption(a0);
        return;
    }

    extern void sipVH_QtWidgets_110(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QStyleOption*);

    sipVH_QtWidgets_110(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsWidget::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[52]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsWidget::shape();

    extern QPainterPath sipVH_QtWidgets_111(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_111(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QRectF sipQGraphicsWidget::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[53]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return QGraphicsWidget::boundingRect();

    extern QRectF sipVH_QtWidgets_112(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtWidgets_112(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsWidget::paintWindowFrame(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[54],sipPySelf,NULL,sipName_paintWindowFrame);

    if (!sipMeth)
    {
        QGraphicsWidget::paintWindowFrame(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtWidgets_113(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

void sipQGraphicsWidget::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[55],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QGraphicsWidget::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtWidgets_113(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtWidgets_113(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

int sipQGraphicsWidget::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[56]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsWidget::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsWidget::getContentsMargins(qreal*a0,qreal*a1,qreal*a2,qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[57]),sipPySelf,NULL,sipName_getContentsMargins);

    if (!sipMeth)
    {
        QGraphicsWidget::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_114(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, double*,double*,double*,double*);

    sipVH_QtWidgets_114(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsWidget::setGeometry(const QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[58],sipPySelf,NULL,sipName_setGeometry);

    if (!sipMeth)
    {
        QGraphicsWidget::setGeometry(a0);
        return;
    }

    typedef void (*sipVH_QtGui_45)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QRectF&);

    ((sipVH_QtGui_45)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[45]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsWidget::sipProtect_setGraphicsItem(QGraphicsItem*a0)
{
    QGraphicsLayoutItem::setGraphicsItem(a0);
}

void sipQGraphicsWidget::sipProtect_setOwnedByLayout(bool a0)
{
    QGraphicsLayoutItem::setOwnedByLayout(a0);
}

void sipQGraphicsWidget::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dropEvent(a0) : dropEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

QVariant sipQGraphicsWidget::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg,Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ? QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

void sipQGraphicsWidget::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsWidget::sipProtect_prepareGeometryChange()
{
    QGraphicsItem::prepareGeometryChange();
}

bool sipQGraphicsWidget::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg,QGraphicsItem*a0,QEvent*a1)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

void sipQGraphicsWidget::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::wheelEvent(a0) : wheelEvent(a0));
}

QObject* sipQGraphicsWidget::sipProtect_sender() const
{
    return QObject::sender();
}

int sipQGraphicsWidget::sipProtect_receivers(const char*a0) const
{
    return QObject::receivers(a0);
}

void sipQGraphicsWidget::sipProtectVirt_timerEvent(bool sipSelfWasArg,QTimerEvent*a0)
{
    (sipSelfWasArg ? QObject::timerEvent(a0) : timerEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_childEvent(bool sipSelfWasArg,QChildEvent*a0)
{
    (sipSelfWasArg ? QObject::childEvent(a0) : childEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_customEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QObject::customEvent(a0) : customEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_connectNotify(bool sipSelfWasArg,const QMetaMethod& a0)
{
    (sipSelfWasArg ? QObject::connectNotify(a0) : connectNotify(a0));
}

void sipQGraphicsWidget::sipProtectVirt_disconnectNotify(bool sipSelfWasArg,const QMetaMethod& a0)
{
    (sipSelfWasArg ? QObject::disconnectNotify(a0) : disconnectNotify(a0));
}

int sipQGraphicsWidget::sipProtect_senderSignalIndex() const
{
    return QObject::senderSignalIndex();
}

bool sipQGraphicsWidget::sipProtect_isSignalConnected(const QMetaMethod& a0) const
{
    return QObject::isSignalConnected(a0);
}

void sipQGraphicsWidget::sipProtect_updateMicroFocus()
{
    QGraphicsObject::updateMicroFocus();
}

void sipQGraphicsWidget::sipProtectVirt_initStyleOption(bool sipSelfWasArg,QStyleOption*a0) const
{
    (sipSelfWasArg ? QGraphicsWidget::initStyleOption(a0) : initStyleOption(a0));
}

QSizeF sipQGraphicsWidget::sipProtectVirt_sizeHint(bool sipSelfWasArg,Qt::SizeHint a0,const QSizeF& a1) const
{
    return (sipSelfWasArg ? QGraphicsWidget::sizeHint(a0,a1) : sizeHint(a0,a1));
}

void sipQGraphicsWidget::sipProtectVirt_updateGeometry(bool sipSelfWasArg)
{
    (sipSelfWasArg ? QGraphicsWidget::updateGeometry() : updateGeometry());
}

QVariant sipQGraphicsWidget::sipProtectVirt_itemChange(bool sipSelfWasArg,QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    return (sipSelfWasArg ? QGraphicsWidget::itemChange(a0,a1) : itemChange(a0,a1));
}

bool sipQGraphicsWidget::sipProtectVirt_sceneEvent(bool sipSelfWasArg,QEvent*a0)
{
    return (sipSelfWasArg ? QGraphicsWidget::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQGraphicsWidget::sipProtectVirt_windowFrameEvent(bool sipSelfWasArg,QEvent*a0)
{
    return (sipSelfWasArg ? QGraphicsWidget::windowFrameEvent(a0) : windowFrameEvent(a0));
}

Qt::WindowFrameSection sipQGraphicsWidget::sipProtectVirt_windowFrameSectionAt(bool sipSelfWasArg,const QPointF& a0) const
{
    return (sipSelfWasArg ? QGraphicsWidget::windowFrameSectionAt(a0) : windowFrameSectionAt(a0));
}

bool sipQGraphicsWidget::sipProtectVirt_event(bool sipSelfWasArg,QEvent*a0)
{
    return (sipSelfWasArg ? QGraphicsWidget::event(a0) : event(a0));
}

void sipQGraphicsWidget::sipProtectVirt_changeEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::changeEvent(a0) : changeEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_closeEvent(bool sipSelfWasArg,QCloseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::closeEvent(a0) : closeEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::focusInEvent(a0) : focusInEvent(a0));
}

bool sipQGraphicsWidget::sipProtectVirt_focusNextPrevChild(bool sipSelfWasArg,bool a0)
{
    return (sipSelfWasArg ? QGraphicsWidget::focusNextPrevChild(a0) : focusNextPrevChild(a0));
}

void sipQGraphicsWidget::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_hideEvent(bool sipSelfWasArg,QHideEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::hideEvent(a0) : hideEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_moveEvent(bool sipSelfWasArg,QGraphicsSceneMoveEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::moveEvent(a0) : moveEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_polishEvent(bool sipSelfWasArg)
{
    (sipSelfWasArg ? QGraphicsWidget::polishEvent() : polishEvent());
}

void sipQGraphicsWidget::sipProtectVirt_resizeEvent(bool sipSelfWasArg,QGraphicsSceneResizeEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::resizeEvent(a0) : resizeEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_showEvent(bool sipSelfWasArg,QShowEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::showEvent(a0) : showEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_grabMouseEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::grabMouseEvent(a0) : grabMouseEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_ungrabMouseEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::ungrabMouseEvent(a0) : ungrabMouseEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_grabKeyboardEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::grabKeyboardEvent(a0) : grabKeyboardEvent(a0));
}

void sipQGraphicsWidget::sipProtectVirt_ungrabKeyboardEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QGraphicsWidget::ungrabKeyboardEvent(a0) : ungrabKeyboardEvent(a0));
}


PyDoc_STRVAR(doc_QGraphicsWidget_setGraphicsItem, "QGraphicsWidget.setGraphicsItem(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsWidget_setGraphicsItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setGraphicsItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->sipProtect_setGraphicsItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setGraphicsItem, doc_QGraphicsWidget_setGraphicsItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setOwnedByLayout, "QGraphicsWidget.setOwnedByLayout(bool)");

extern "C" {static PyObject *meth_QGraphicsWidget_setOwnedByLayout(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setOwnedByLayout(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "Bb", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            sipCpp->sipProtect_setOwnedByLayout(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setOwnedByLayout, doc_QGraphicsWidget_setOwnedByLayout);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_contextMenuEvent, "QGraphicsWidget.contextMenuEvent(QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_contextMenuEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_contextMenuEvent, doc_QGraphicsWidget_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_dragEnterEvent, "QGraphicsWidget.dragEnterEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_dragEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_dragEnterEvent, doc_QGraphicsWidget_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_dragLeaveEvent, "QGraphicsWidget.dragLeaveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_dragLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_dragLeaveEvent, doc_QGraphicsWidget_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_dragMoveEvent, "QGraphicsWidget.dragMoveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_dragMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_dragMoveEvent, doc_QGraphicsWidget_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_dropEvent, "QGraphicsWidget.dropEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_dropEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_dropEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_dropEvent, doc_QGraphicsWidget_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hoverEnterEvent, "QGraphicsWidget.hoverEnterEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hoverEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hoverEnterEvent, doc_QGraphicsWidget_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_inputMethodEvent, "QGraphicsWidget.inputMethodEvent(QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_inputMethodEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_inputMethodEvent, doc_QGraphicsWidget_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_inputMethodQuery, "QGraphicsWidget.inputMethodQuery(Qt.InputMethodQuery) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsWidget_inputMethodQuery(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_inputMethodQuery, doc_QGraphicsWidget_inputMethodQuery);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_keyPressEvent, "QGraphicsWidget.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_keyPressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_keyPressEvent, doc_QGraphicsWidget_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_keyReleaseEvent, "QGraphicsWidget.keyReleaseEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_keyReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_keyReleaseEvent, doc_QGraphicsWidget_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_mouseDoubleClickEvent, "QGraphicsWidget.mouseDoubleClickEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_mouseDoubleClickEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_mouseDoubleClickEvent, doc_QGraphicsWidget_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_mouseMoveEvent, "QGraphicsWidget.mouseMoveEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_mouseMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_mouseMoveEvent, doc_QGraphicsWidget_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_mousePressEvent, "QGraphicsWidget.mousePressEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_mousePressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_mousePressEvent, doc_QGraphicsWidget_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_mouseReleaseEvent, "QGraphicsWidget.mouseReleaseEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_mouseReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_mouseReleaseEvent, doc_QGraphicsWidget_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_prepareGeometryChange, "QGraphicsWidget.prepareGeometryChange()");

extern "C" {static PyObject *meth_QGraphicsWidget_prepareGeometryChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->sipProtect_prepareGeometryChange();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_prepareGeometryChange, doc_QGraphicsWidget_prepareGeometryChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_sceneEventFilter, "QGraphicsWidget.sceneEventFilter(QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_sceneEventFilter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem* a0;
        QEvent* a1;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_sceneEventFilter, doc_QGraphicsWidget_sceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_wheelEvent, "QGraphicsWidget.wheelEvent(QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_wheelEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_wheelEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_wheelEvent, doc_QGraphicsWidget_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_sender, "QGraphicsWidget.sender() -> QObject");

extern "C" {static PyObject *meth_QGraphicsWidget_sender(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_sender(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QObject*sipRes = 0;

#line 546 "sip/QtCore/qobject.sip"
        // sender() must be called without the GIL to avoid possible deadlocks between
        // the GIL and Qt's internal thread data mutex.
        
        Py_BEGIN_ALLOW_THREADS
        
        #if defined(SIP_PROTECTED_IS_PUBLIC)
        sipRes = sipCpp->sender();
        #else
        sipRes = sipCpp->sipProtect_sender();
        #endif
        
        Py_END_ALLOW_THREADS
        
        if (!sipRes)
        {
            typedef QObject *(*qtcore_qobject_sender_t)();
        
            static qtcore_qobject_sender_t qtcore_qobject_sender = 0;
        
            if (!qtcore_qobject_sender)
                qtcore_qobject_sender = (qtcore_qobject_sender_t)sipImportSymbol("qtcore_qobject_sender");
        
            if (qtcore_qobject_sender)
                sipRes = qtcore_qobject_sender();
        }
#line 2245 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"

            return sipConvertFromType(sipRes,sipType_QObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_sender, doc_QGraphicsWidget_sender);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_receivers, "QGraphicsWidget.receivers(signal) -> int");

extern "C" {static PyObject *meth_QGraphicsWidget_receivers(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_receivers(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BP0", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            int sipRes = 0;
            sipErrorState sipError = sipErrorNone;

#line 575 "sip/QtCore/qobject.sip"
        // We need to handle the signal object.  Import the helper if it hasn't already
        // been done.
        typedef sipErrorState (*pyqt5_get_signal_signature_t)(PyObject *, const QObject *, const QByteArray &);
        
        static pyqt5_get_signal_signature_t pyqt5_get_signal_signature = 0;
        
        if (!pyqt5_get_signal_signature)
            pyqt5_get_signal_signature = (pyqt5_get_signal_signature_t)sipImportSymbol("pyqt5_get_signal_signature");
        
        if (pyqt5_get_signal_signature)
        {
            QByteArray signal_signature;
            
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            if ((sipError = pyqt5_get_signal_signature(a0, sipCpp, signal_signature)) == sipErrorNone)
            {
                sipRes = sipCpp->receivers(signal_signature.constData());
            }
        #else
            if ((sipError = pyqt5_get_signal_signature(a0, static_cast<const QObject *>(sipCpp), signal_signature)) == sipErrorNone)
            {
                sipRes = sipCpp->sipProtect_receivers(signal_signature.constData());
            }
        #endif
            else if (sipError == sipErrorContinue)
            {
                sipError = sipBadCallableArg(0, a0);
            }
        }
#line 2304 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsWidget.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            return SIPLong_FromLong(sipRes);
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_receivers, doc_QGraphicsWidget_receivers);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_timerEvent, "QGraphicsWidget.timerEvent(QTimerEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_timerEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_timerEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTimerEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QTimerEvent, &a0))
        {
            sipCpp->sipProtectVirt_timerEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_timerEvent, doc_QGraphicsWidget_timerEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_childEvent, "QGraphicsWidget.childEvent(QChildEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_childEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_childEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QChildEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QChildEvent, &a0))
        {
            sipCpp->sipProtectVirt_childEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_childEvent, doc_QGraphicsWidget_childEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_customEvent, "QGraphicsWidget.customEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_customEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_customEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_customEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_customEvent, doc_QGraphicsWidget_customEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_connectNotify, "QGraphicsWidget.connectNotify(QMetaMethod)");

extern "C" {static PyObject *meth_QGraphicsWidget_connectNotify(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_connectNotify(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QMetaMethod* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_connectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_connectNotify, doc_QGraphicsWidget_connectNotify);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_disconnectNotify, "QGraphicsWidget.disconnectNotify(QMetaMethod)");

extern "C" {static PyObject *meth_QGraphicsWidget_disconnectNotify(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_disconnectNotify(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QMetaMethod* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_disconnectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_disconnectNotify, doc_QGraphicsWidget_disconnectNotify);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_senderSignalIndex, "QGraphicsWidget.senderSignalIndex() -> int");

extern "C" {static PyObject *meth_QGraphicsWidget_senderSignalIndex(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_senderSignalIndex(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->sipProtect_senderSignalIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_senderSignalIndex, doc_QGraphicsWidget_senderSignalIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_isSignalConnected, "QGraphicsWidget.isSignalConnected(QMetaMethod) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_isSignalConnected(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_isSignalConnected(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QMetaMethod* a0;
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QMetaMethod, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_isSignalConnected(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_isSignalConnected, doc_QGraphicsWidget_isSignalConnected);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_updateMicroFocus, "QGraphicsWidget.updateMicroFocus()");

extern "C" {static PyObject *meth_QGraphicsWidget_updateMicroFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->sipProtect_updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_updateMicroFocus, doc_QGraphicsWidget_updateMicroFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_layout, "QGraphicsWidget.layout() -> QGraphicsLayout");

extern "C" {static PyObject *meth_QGraphicsWidget_layout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_layout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QGraphicsLayout*sipRes;

            sipRes = sipCpp->layout();

            return sipConvertFromType(sipRes,sipType_QGraphicsLayout,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_layout, doc_QGraphicsWidget_layout);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setLayout, "QGraphicsWidget.setLayout(QGraphicsLayout)");

extern "C" {static PyObject *meth_QGraphicsWidget_setLayout(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setLayout(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayout* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsLayout, &a0))
        {
            sipCpp->setLayout(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setLayout, doc_QGraphicsWidget_setLayout);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_adjustSize, "QGraphicsWidget.adjustSize()");

extern "C" {static PyObject *meth_QGraphicsWidget_adjustSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_adjustSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->adjustSize();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_adjustSize, doc_QGraphicsWidget_adjustSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_layoutDirection, "QGraphicsWidget.layoutDirection() -> Qt.LayoutDirection");

extern "C" {static PyObject *meth_QGraphicsWidget_layoutDirection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_layoutDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            Qt::LayoutDirection sipRes;

            sipRes = sipCpp->layoutDirection();

            return sipConvertFromEnum(sipRes,sipType_Qt_LayoutDirection);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_layoutDirection, doc_QGraphicsWidget_layoutDirection);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setLayoutDirection, "QGraphicsWidget.setLayoutDirection(Qt.LayoutDirection)");

extern "C" {static PyObject *meth_QGraphicsWidget_setLayoutDirection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setLayoutDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::LayoutDirection a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_LayoutDirection, &a0))
        {
            sipCpp->setLayoutDirection(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setLayoutDirection, doc_QGraphicsWidget_setLayoutDirection);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_unsetLayoutDirection, "QGraphicsWidget.unsetLayoutDirection()");

extern "C" {static PyObject *meth_QGraphicsWidget_unsetLayoutDirection(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_unsetLayoutDirection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->unsetLayoutDirection();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_unsetLayoutDirection, doc_QGraphicsWidget_unsetLayoutDirection);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_style, "QGraphicsWidget.style() -> QStyle");

extern "C" {static PyObject *meth_QGraphicsWidget_style(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_style(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QStyle*sipRes;

            sipRes = sipCpp->style();

            return sipConvertFromType(sipRes,sipType_QStyle,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_style, doc_QGraphicsWidget_style);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setStyle, "QGraphicsWidget.setStyle(QStyle)");

extern "C" {static PyObject *meth_QGraphicsWidget_setStyle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QStyle* a0;
        PyObject *a0Keep;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0Keep, sipType_QStyle, &a0))
        {
            sipCpp->setStyle(a0);

            sipKeepReference(sipSelf, -29, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setStyle, doc_QGraphicsWidget_setStyle);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_font, "QGraphicsWidget.font() -> QFont");

extern "C" {static PyObject *meth_QGraphicsWidget_font(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_font(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QFont*sipRes;

            sipRes = new QFont(sipCpp->font());

            return sipConvertFromNewType(sipRes,sipType_QFont,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_font, doc_QGraphicsWidget_font);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setFont, "QGraphicsWidget.setFont(QFont)");

extern "C" {static PyObject *meth_QGraphicsWidget_setFont(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setFont(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QFont* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QFont, &a0))
        {
            sipCpp->setFont(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setFont, doc_QGraphicsWidget_setFont);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_palette, "QGraphicsWidget.palette() -> QPalette");

extern "C" {static PyObject *meth_QGraphicsWidget_palette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_palette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QPalette*sipRes;

            sipRes = new QPalette(sipCpp->palette());

            return sipConvertFromNewType(sipRes,sipType_QPalette,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_palette, doc_QGraphicsWidget_palette);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setPalette, "QGraphicsWidget.setPalette(QPalette)");

extern "C" {static PyObject *meth_QGraphicsWidget_setPalette(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setPalette(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPalette* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPalette, &a0))
        {
            sipCpp->setPalette(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setPalette, doc_QGraphicsWidget_setPalette);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_resize, "QGraphicsWidget.resize(QSizeF)\n"
    "QGraphicsWidget.resize(float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_resize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_resize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSizeF* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QSizeF, &a0))
        {
            sipCpp->resize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1))
        {
            sipCpp->resize(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_resize, doc_QGraphicsWidget_resize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_size, "QGraphicsWidget.size() -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsWidget_size(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_size(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QSizeF*sipRes;

            sipRes = new QSizeF(sipCpp->size());

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_size, doc_QGraphicsWidget_size);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setGeometry, "QGraphicsWidget.setGeometry(QRectF)\n"
    "QGraphicsWidget.setGeometry(float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRectF* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsWidget::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setGeometry(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setGeometry, doc_QGraphicsWidget_setGeometry);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_rect, "QGraphicsWidget.rect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_rect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_rect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF(sipCpp->rect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_rect, doc_QGraphicsWidget_rect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setContentsMargins, "QGraphicsWidget.setContentsMargins(float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_setContentsMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setContentsMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setContentsMargins(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setContentsMargins, doc_QGraphicsWidget_setContentsMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_getContentsMargins, "QGraphicsWidget.getContentsMargins() -> (float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_getContentsMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_getContentsMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsWidget::getContentsMargins(&a0,&a1,&a2,&a3) : sipCpp->getContentsMargins(&a0,&a1,&a2,&a3));

            return sipBuildResult(0,"(dddd)",a0,a1,a2,a3);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_getContentsMargins, doc_QGraphicsWidget_getContentsMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setWindowFrameMargins, "QGraphicsWidget.setWindowFrameMargins(float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_setWindowFrameMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setWindowFrameMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1, &a2, &a3))
        {
            sipCpp->setWindowFrameMargins(a0,a1,a2,a3);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setWindowFrameMargins, doc_QGraphicsWidget_setWindowFrameMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_getWindowFrameMargins, "QGraphicsWidget.getWindowFrameMargins() -> (float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsWidget_getWindowFrameMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_getWindowFrameMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->getWindowFrameMargins(&a0,&a1,&a2,&a3);

            return sipBuildResult(0,"(dddd)",a0,a1,a2,a3);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_getWindowFrameMargins, doc_QGraphicsWidget_getWindowFrameMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_unsetWindowFrameMargins, "QGraphicsWidget.unsetWindowFrameMargins()");

extern "C" {static PyObject *meth_QGraphicsWidget_unsetWindowFrameMargins(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_unsetWindowFrameMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->unsetWindowFrameMargins();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_unsetWindowFrameMargins, doc_QGraphicsWidget_unsetWindowFrameMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameGeometry, "QGraphicsWidget.windowFrameGeometry() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF(sipCpp->windowFrameGeometry());

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameGeometry, doc_QGraphicsWidget_windowFrameGeometry);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameRect, "QGraphicsWidget.windowFrameRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF(sipCpp->windowFrameRect());

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameRect, doc_QGraphicsWidget_windowFrameRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFlags, "QGraphicsWidget.windowFlags() -> Qt.WindowFlags");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            Qt::WindowFlags*sipRes;

            sipRes = new Qt::WindowFlags(sipCpp->windowFlags());

            return sipConvertFromNewType(sipRes,sipType_Qt_WindowFlags,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFlags, doc_QGraphicsWidget_windowFlags);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowType, "QGraphicsWidget.windowType() -> Qt.WindowType");

extern "C" {static PyObject *meth_QGraphicsWidget_windowType(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            Qt::WindowType sipRes;

            sipRes = sipCpp->windowType();

            return sipConvertFromEnum(sipRes,sipType_Qt_WindowType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowType, doc_QGraphicsWidget_windowType);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setWindowFlags, "QGraphicsWidget.setWindowFlags(Qt.WindowFlags)");

extern "C" {static PyObject *meth_QGraphicsWidget_setWindowFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setWindowFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::WindowFlags* a0;
        int a0State = 0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_WindowFlags, &a0, &a0State))
        {
            sipCpp->setWindowFlags(*a0);
            sipReleaseType(a0,sipType_Qt_WindowFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setWindowFlags, doc_QGraphicsWidget_setWindowFlags);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_isActiveWindow, "QGraphicsWidget.isActiveWindow() -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_isActiveWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_isActiveWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isActiveWindow();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_isActiveWindow, doc_QGraphicsWidget_isActiveWindow);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setWindowTitle, "QGraphicsWidget.setWindowTitle(str)");

extern "C" {static PyObject *meth_QGraphicsWidget_setWindowTitle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setWindowTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setWindowTitle(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setWindowTitle, doc_QGraphicsWidget_setWindowTitle);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowTitle, "QGraphicsWidget.windowTitle() -> str");

extern "C" {static PyObject *meth_QGraphicsWidget_windowTitle(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->windowTitle());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowTitle, doc_QGraphicsWidget_windowTitle);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusPolicy, "QGraphicsWidget.focusPolicy() -> Qt.FocusPolicy");

extern "C" {static PyObject *meth_QGraphicsWidget_focusPolicy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            Qt::FocusPolicy sipRes;

            sipRes = sipCpp->focusPolicy();

            return sipConvertFromEnum(sipRes,sipType_Qt_FocusPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusPolicy, doc_QGraphicsWidget_focusPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setFocusPolicy, "QGraphicsWidget.setFocusPolicy(Qt.FocusPolicy)");

extern "C" {static PyObject *meth_QGraphicsWidget_setFocusPolicy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setFocusPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::FocusPolicy a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_FocusPolicy, &a0))
        {
            sipCpp->setFocusPolicy(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setFocusPolicy, doc_QGraphicsWidget_setFocusPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setTabOrder, "QGraphicsWidget.setTabOrder(QGraphicsWidget, QGraphicsWidget)");

extern "C" {static PyObject *meth_QGraphicsWidget_setTabOrder(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setTabOrder(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsWidget* a0;
        QGraphicsWidget* a1;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8J8", sipType_QGraphicsWidget, &a0, sipType_QGraphicsWidget, &a1))
        {
            QGraphicsWidget::setTabOrder(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setTabOrder, doc_QGraphicsWidget_setTabOrder);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusWidget, "QGraphicsWidget.focusWidget() -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsWidget_focusWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QGraphicsWidget*sipRes;

            sipRes = sipCpp->focusWidget();

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusWidget, doc_QGraphicsWidget_focusWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_grabShortcut, "QGraphicsWidget.grabShortcut(QKeySequence, Qt.ShortcutContext context=Qt.WindowShortcut) -> int");

extern "C" {static PyObject *meth_QGraphicsWidget_grabShortcut(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_grabShortcut(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QKeySequence* a0;
        int a0State = 0;
        Qt::ShortcutContext a1 = Qt::WindowShortcut;
        QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_context,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ1|E", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QKeySequence, &a0, &a0State, sipType_Qt_ShortcutContext, &a1))
        {
            int sipRes;

            sipRes = sipCpp->grabShortcut(*a0,a1);
            sipReleaseType(const_cast<QKeySequence *>(a0),sipType_QKeySequence,a0State);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_grabShortcut, doc_QGraphicsWidget_grabShortcut);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_releaseShortcut, "QGraphicsWidget.releaseShortcut(int)");

extern "C" {static PyObject *meth_QGraphicsWidget_releaseShortcut(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_releaseShortcut(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            sipCpp->releaseShortcut(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_releaseShortcut, doc_QGraphicsWidget_releaseShortcut);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setShortcutEnabled, "QGraphicsWidget.setShortcutEnabled(int, bool enabled=True)");

extern "C" {static PyObject *meth_QGraphicsWidget_setShortcutEnabled(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setShortcutEnabled(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        bool a1 = 1;
        QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bi|b", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1))
        {
            sipCpp->setShortcutEnabled(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setShortcutEnabled, doc_QGraphicsWidget_setShortcutEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setShortcutAutoRepeat, "QGraphicsWidget.setShortcutAutoRepeat(int, bool enabled=True)");

extern "C" {static PyObject *meth_QGraphicsWidget_setShortcutAutoRepeat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setShortcutAutoRepeat(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        bool a1 = 1;
        QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bi|b", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0, &a1))
        {
            sipCpp->setShortcutAutoRepeat(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setShortcutAutoRepeat, doc_QGraphicsWidget_setShortcutAutoRepeat);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_addAction, "QGraphicsWidget.addAction(QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_addAction(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_addAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAction* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0))
        {
            sipCpp->addAction(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_addAction, doc_QGraphicsWidget_addAction);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_addActions, "QGraphicsWidget.addActions(list-of-QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_addActions(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_addActions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QList<QAction*>* a0;
        int a0State = 0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QList_0101QAction,&a0, &a0State))
        {
            sipCpp->addActions(*a0);
            sipReleaseType(a0,sipType_QList_0101QAction,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_addActions, doc_QGraphicsWidget_addActions);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_insertAction, "QGraphicsWidget.insertAction(QAction, QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_insertAction(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_insertAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAction* a0;
        QAction* a1;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0, sipType_QAction, &a1))
        {
            sipCpp->insertAction(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_insertAction, doc_QGraphicsWidget_insertAction);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_insertActions, "QGraphicsWidget.insertActions(QAction, list-of-QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_insertActions(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_insertActions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAction* a0;
        QList<QAction*>* a1;
        int a1State = 0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0, sipType_QList_0101QAction,&a1, &a1State))
        {
            sipCpp->insertActions(a0,*a1);
            sipReleaseType(a1,sipType_QList_0101QAction,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_insertActions, doc_QGraphicsWidget_insertActions);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_removeAction, "QGraphicsWidget.removeAction(QAction)");

extern "C" {static PyObject *meth_QGraphicsWidget_removeAction(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_removeAction(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QAction* a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QAction, &a0))
        {
            sipCpp->removeAction(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_removeAction, doc_QGraphicsWidget_removeAction);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_actions, "QGraphicsWidget.actions() -> list-of-QAction");

extern "C" {static PyObject *meth_QGraphicsWidget_actions(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_actions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QList<QAction*>*sipRes;

            sipRes = new QList<QAction*>(sipCpp->actions());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QAction,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_actions, doc_QGraphicsWidget_actions);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setAttribute, "QGraphicsWidget.setAttribute(Qt.WidgetAttribute, bool on=True)");

extern "C" {static PyObject *meth_QGraphicsWidget_setAttribute(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setAttribute(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::WidgetAttribute a0;
        bool a1 = 1;
        QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_on,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|b", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_WidgetAttribute, &a0, &a1))
        {
            sipCpp->setAttribute(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setAttribute, doc_QGraphicsWidget_setAttribute);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_testAttribute, "QGraphicsWidget.testAttribute(Qt.WidgetAttribute) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_testAttribute(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_testAttribute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::WidgetAttribute a0;
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_WidgetAttribute, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->testAttribute(a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_testAttribute, doc_QGraphicsWidget_testAttribute);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_type, "QGraphicsWidget.type() -> int");

extern "C" {static PyObject *meth_QGraphicsWidget_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsWidget::type() : sipCpp->type());

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_type, doc_QGraphicsWidget_type);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_paint, "QGraphicsWidget.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None)");

extern "C" {static PyObject *meth_QGraphicsWidget_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2 = 0;
        QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsWidget::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_paint, doc_QGraphicsWidget_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_paintWindowFrame, "QGraphicsWidget.paintWindowFrame(QPainter, QStyleOptionGraphicsItem, QWidget widget=None)");

extern "C" {static PyObject *meth_QGraphicsWidget_paintWindowFrame(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_paintWindowFrame(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2 = 0;
        QGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsWidget::paintWindowFrame(a0,a1,a2) : sipCpp->paintWindowFrame(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_paintWindowFrame, doc_QGraphicsWidget_paintWindowFrame);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_boundingRect, "QGraphicsWidget.boundingRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsWidget_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF((sipSelfWasArg ? sipCpp->QGraphicsWidget::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_boundingRect, doc_QGraphicsWidget_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_shape, "QGraphicsWidget.shape() -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsWidget_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            QPainterPath*sipRes;

            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsWidget::shape() : sipCpp->shape()));

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_shape, doc_QGraphicsWidget_shape);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_close, "QGraphicsWidget.close() -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_close(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_close(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->close();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_close, doc_QGraphicsWidget_close);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_initStyleOption, "QGraphicsWidget.initStyleOption(QStyleOption)");

extern "C" {static PyObject *meth_QGraphicsWidget_initStyleOption(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_initStyleOption(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QStyleOption* a0;
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QStyleOption, &a0))
        {
            sipCpp->sipProtectVirt_initStyleOption(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_initStyleOption, doc_QGraphicsWidget_initStyleOption);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_sizeHint, "QGraphicsWidget.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsWidget_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF* a1 = &a1def;
        const sipQGraphicsWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF*sipRes;

            sipRes = new QSizeF(sipCpp->sipProtectVirt_sizeHint(sipSelfWasArg,a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_sizeHint, doc_QGraphicsWidget_sizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_updateGeometry, "QGraphicsWidget.updateGeometry()");

extern "C" {static PyObject *meth_QGraphicsWidget_updateGeometry(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_updateGeometry(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->sipProtectVirt_updateGeometry(sipSelfWasArg);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_updateGeometry, doc_QGraphicsWidget_updateGeometry);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_itemChange, "QGraphicsWidget.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsWidget_itemChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_itemChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant* a1;
        int a1State = 0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BEJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_itemChange, doc_QGraphicsWidget_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_sceneEvent, "QGraphicsWidget.sceneEvent(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_sceneEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_sceneEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_sceneEvent, doc_QGraphicsWidget_sceneEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameEvent, "QGraphicsWidget.windowFrameEvent(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_windowFrameEvent(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameEvent, doc_QGraphicsWidget_windowFrameEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_windowFrameSectionAt, "QGraphicsWidget.windowFrameSectionAt(QPointF) -> Qt.WindowFrameSection");

extern "C" {static PyObject *meth_QGraphicsWidget_windowFrameSectionAt(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_windowFrameSectionAt(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPointF* a0;
        int a0State = 0;
        const sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ1", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            Qt::WindowFrameSection sipRes;

            sipRes = sipCpp->sipProtectVirt_windowFrameSectionAt(sipSelfWasArg,*a0);
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromEnum(sipRes,sipType_Qt_WindowFrameSection);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_windowFrameSectionAt, doc_QGraphicsWidget_windowFrameSectionAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_event, "QGraphicsWidget.event(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_event(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_event(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_event(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_event, doc_QGraphicsWidget_event);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_changeEvent, "QGraphicsWidget.changeEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_changeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_changeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_changeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_changeEvent, doc_QGraphicsWidget_changeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_closeEvent, "QGraphicsWidget.closeEvent(QCloseEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_closeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_closeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QCloseEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QCloseEvent, &a0))
        {
            sipCpp->sipProtectVirt_closeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_closeEvent, doc_QGraphicsWidget_closeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusInEvent, "QGraphicsWidget.focusInEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_focusInEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusInEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusInEvent, doc_QGraphicsWidget_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusNextPrevChild, "QGraphicsWidget.focusNextPrevChild(bool) -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_focusNextPrevChild(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "Bb", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_focusNextPrevChild(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusNextPrevChild, doc_QGraphicsWidget_focusNextPrevChild);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_focusOutEvent, "QGraphicsWidget.focusOutEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_focusOutEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_focusOutEvent, doc_QGraphicsWidget_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hideEvent, "QGraphicsWidget.hideEvent(QHideEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hideEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hideEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QHideEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QHideEvent, &a0))
        {
            sipCpp->sipProtectVirt_hideEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hideEvent, doc_QGraphicsWidget_hideEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_moveEvent, "QGraphicsWidget.moveEvent(QGraphicsSceneMoveEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_moveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_moveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMoveEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneMoveEvent, &a0))
        {
            sipCpp->sipProtectVirt_moveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_moveEvent, doc_QGraphicsWidget_moveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_polishEvent, "QGraphicsWidget.polishEvent()");

extern "C" {static PyObject *meth_QGraphicsWidget_polishEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_polishEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            sipCpp->sipProtectVirt_polishEvent(sipSelfWasArg);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_polishEvent, doc_QGraphicsWidget_polishEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_resizeEvent, "QGraphicsWidget.resizeEvent(QGraphicsSceneResizeEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_resizeEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_resizeEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneResizeEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneResizeEvent, &a0))
        {
            sipCpp->sipProtectVirt_resizeEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_resizeEvent, doc_QGraphicsWidget_resizeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_showEvent, "QGraphicsWidget.showEvent(QShowEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_showEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_showEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QShowEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QShowEvent, &a0))
        {
            sipCpp->sipProtectVirt_showEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_showEvent, doc_QGraphicsWidget_showEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hoverMoveEvent, "QGraphicsWidget.hoverMoveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hoverMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hoverMoveEvent, doc_QGraphicsWidget_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_hoverLeaveEvent, "QGraphicsWidget.hoverLeaveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_hoverLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_hoverLeaveEvent, doc_QGraphicsWidget_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_grabMouseEvent, "QGraphicsWidget.grabMouseEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_grabMouseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_grabMouseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_grabMouseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_grabMouseEvent, doc_QGraphicsWidget_grabMouseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_ungrabMouseEvent, "QGraphicsWidget.ungrabMouseEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_ungrabMouseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_ungrabMouseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_ungrabMouseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_ungrabMouseEvent, doc_QGraphicsWidget_ungrabMouseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_grabKeyboardEvent, "QGraphicsWidget.grabKeyboardEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_grabKeyboardEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_grabKeyboardEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_grabKeyboardEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_grabKeyboardEvent, doc_QGraphicsWidget_grabKeyboardEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_ungrabKeyboardEvent, "QGraphicsWidget.ungrabKeyboardEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsWidget_ungrabKeyboardEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_ungrabKeyboardEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsWidget *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsWidget, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_ungrabKeyboardEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_ungrabKeyboardEvent, doc_QGraphicsWidget_ungrabKeyboardEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_autoFillBackground, "QGraphicsWidget.autoFillBackground() -> bool");

extern "C" {static PyObject *meth_QGraphicsWidget_autoFillBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_autoFillBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsWidget, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->autoFillBackground();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_autoFillBackground, doc_QGraphicsWidget_autoFillBackground);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsWidget_setAutoFillBackground, "QGraphicsWidget.setAutoFillBackground(bool)");

extern "C" {static PyObject *meth_QGraphicsWidget_setAutoFillBackground(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsWidget_setAutoFillBackground(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsWidget, &sipCpp, &a0))
        {
            sipCpp->setAutoFillBackground(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsWidget, sipName_setAutoFillBackground, doc_QGraphicsWidget_setAutoFillBackground);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsWidget(void *, const sipTypeDef *);}
static void *cast_QGraphicsWidget(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsWidget)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsObject)->ctd_cast((QGraphicsObject *)(QGraphicsWidget *)ptr,targetType)) != NULL)
        return res;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsLayoutItem)->ctd_cast((QGraphicsLayoutItem *)(QGraphicsWidget *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsWidget(void *, int);}
static void release_QGraphicsWidget(void *sipCppV,int)
{
    QGraphicsWidget *sipCpp = reinterpret_cast<QGraphicsWidget *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QGraphicsWidget(sipSimpleWrapper *);}
static void dealloc_QGraphicsWidget(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsWidget *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsWidget(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsWidget(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsWidget(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsWidget *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;
        Qt::WindowFlags a1def = 0;
        Qt::WindowFlags* a1 = &a1def;
        int a1State = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_flags,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHJ1", sipType_QGraphicsItem, &a0, sipOwner, sipType_Qt_WindowFlags, &a1, &a1State))
        {
            sipCpp = new sipQGraphicsWidget(a0,*a1);
            sipReleaseType(a1,sipType_Qt_WindowFlags,a1State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsWidget[] = {{132, 255, 0}, {129, 255, 1}};


static PyMethodDef methods_QGraphicsWidget[] = {
    {SIP_MLNAME_CAST(sipName_actions), meth_QGraphicsWidget_actions, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_actions)},
    {SIP_MLNAME_CAST(sipName_addAction), meth_QGraphicsWidget_addAction, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_addAction)},
    {SIP_MLNAME_CAST(sipName_addActions), meth_QGraphicsWidget_addActions, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_addActions)},
    {SIP_MLNAME_CAST(sipName_adjustSize), meth_QGraphicsWidget_adjustSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_adjustSize)},
    {SIP_MLNAME_CAST(sipName_autoFillBackground), meth_QGraphicsWidget_autoFillBackground, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_autoFillBackground)},
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsWidget_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_boundingRect)},
    {SIP_MLNAME_CAST(sipName_changeEvent), (PyCFunction)meth_QGraphicsWidget_changeEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_changeEvent)},
    {SIP_MLNAME_CAST(sipName_childEvent), (PyCFunction)meth_QGraphicsWidget_childEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_close), meth_QGraphicsWidget_close, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_close)},
    {SIP_MLNAME_CAST(sipName_closeEvent), (PyCFunction)meth_QGraphicsWidget_closeEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_closeEvent)},
    {SIP_MLNAME_CAST(sipName_connectNotify), (PyCFunction)meth_QGraphicsWidget_connectNotify, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), (PyCFunction)meth_QGraphicsWidget_contextMenuEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_customEvent), (PyCFunction)meth_QGraphicsWidget_customEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_disconnectNotify), (PyCFunction)meth_QGraphicsWidget_disconnectNotify, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), (PyCFunction)meth_QGraphicsWidget_dragEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), (PyCFunction)meth_QGraphicsWidget_dragLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), (PyCFunction)meth_QGraphicsWidget_dragMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), (PyCFunction)meth_QGraphicsWidget_dropEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_event), (PyCFunction)meth_QGraphicsWidget_event, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_event)},
    {SIP_MLNAME_CAST(sipName_focusInEvent), (PyCFunction)meth_QGraphicsWidget_focusInEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_focusInEvent)},
    {SIP_MLNAME_CAST(sipName_focusNextPrevChild), (PyCFunction)meth_QGraphicsWidget_focusNextPrevChild, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_focusNextPrevChild)},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), (PyCFunction)meth_QGraphicsWidget_focusOutEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_focusOutEvent)},
    {SIP_MLNAME_CAST(sipName_focusPolicy), meth_QGraphicsWidget_focusPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_focusPolicy)},
    {SIP_MLNAME_CAST(sipName_focusWidget), meth_QGraphicsWidget_focusWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_focusWidget)},
    {SIP_MLNAME_CAST(sipName_font), meth_QGraphicsWidget_font, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_font)},
    {SIP_MLNAME_CAST(sipName_getContentsMargins), meth_QGraphicsWidget_getContentsMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_getContentsMargins)},
    {SIP_MLNAME_CAST(sipName_getWindowFrameMargins), meth_QGraphicsWidget_getWindowFrameMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_getWindowFrameMargins)},
    {SIP_MLNAME_CAST(sipName_grabKeyboardEvent), (PyCFunction)meth_QGraphicsWidget_grabKeyboardEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_grabKeyboardEvent)},
    {SIP_MLNAME_CAST(sipName_grabMouseEvent), (PyCFunction)meth_QGraphicsWidget_grabMouseEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_grabMouseEvent)},
    {SIP_MLNAME_CAST(sipName_grabShortcut), (PyCFunction)meth_QGraphicsWidget_grabShortcut, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_grabShortcut)},
    {SIP_MLNAME_CAST(sipName_hideEvent), (PyCFunction)meth_QGraphicsWidget_hideEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_hideEvent)},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), (PyCFunction)meth_QGraphicsWidget_hoverEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), (PyCFunction)meth_QGraphicsWidget_hoverLeaveEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_hoverLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), (PyCFunction)meth_QGraphicsWidget_hoverMoveEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_hoverMoveEvent)},
    {SIP_MLNAME_CAST(sipName_initStyleOption), (PyCFunction)meth_QGraphicsWidget_initStyleOption, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_initStyleOption)},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), (PyCFunction)meth_QGraphicsWidget_inputMethodEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), (PyCFunction)meth_QGraphicsWidget_inputMethodQuery, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_insertAction), meth_QGraphicsWidget_insertAction, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_insertAction)},
    {SIP_MLNAME_CAST(sipName_insertActions), meth_QGraphicsWidget_insertActions, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_insertActions)},
    {SIP_MLNAME_CAST(sipName_isActiveWindow), meth_QGraphicsWidget_isActiveWindow, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_isActiveWindow)},
    {SIP_MLNAME_CAST(sipName_isSignalConnected), (PyCFunction)meth_QGraphicsWidget_isSignalConnected, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_itemChange), (PyCFunction)meth_QGraphicsWidget_itemChange, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_itemChange)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), (PyCFunction)meth_QGraphicsWidget_keyPressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), (PyCFunction)meth_QGraphicsWidget_keyReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_layout), meth_QGraphicsWidget_layout, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_layout)},
    {SIP_MLNAME_CAST(sipName_layoutDirection), meth_QGraphicsWidget_layoutDirection, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_layoutDirection)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), (PyCFunction)meth_QGraphicsWidget_mouseDoubleClickEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), (PyCFunction)meth_QGraphicsWidget_mouseMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), (PyCFunction)meth_QGraphicsWidget_mousePressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), (PyCFunction)meth_QGraphicsWidget_mouseReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_moveEvent), (PyCFunction)meth_QGraphicsWidget_moveEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_moveEvent)},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsWidget_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_paint)},
    {SIP_MLNAME_CAST(sipName_paintWindowFrame), (PyCFunction)meth_QGraphicsWidget_paintWindowFrame, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_paintWindowFrame)},
    {SIP_MLNAME_CAST(sipName_palette), meth_QGraphicsWidget_palette, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_palette)},
    {SIP_MLNAME_CAST(sipName_polishEvent), (PyCFunction)meth_QGraphicsWidget_polishEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_polishEvent)},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), (PyCFunction)meth_QGraphicsWidget_prepareGeometryChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_receivers), (PyCFunction)meth_QGraphicsWidget_receivers, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_rect), meth_QGraphicsWidget_rect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_rect)},
    {SIP_MLNAME_CAST(sipName_releaseShortcut), meth_QGraphicsWidget_releaseShortcut, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_releaseShortcut)},
    {SIP_MLNAME_CAST(sipName_removeAction), meth_QGraphicsWidget_removeAction, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_removeAction)},
    {SIP_MLNAME_CAST(sipName_resize), meth_QGraphicsWidget_resize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_resize)},
    {SIP_MLNAME_CAST(sipName_resizeEvent), (PyCFunction)meth_QGraphicsWidget_resizeEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_resizeEvent)},
    {SIP_MLNAME_CAST(sipName_sceneEvent), (PyCFunction)meth_QGraphicsWidget_sceneEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_sceneEvent)},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), (PyCFunction)meth_QGraphicsWidget_sceneEventFilter, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sender), (PyCFunction)meth_QGraphicsWidget_sender, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_senderSignalIndex), (PyCFunction)meth_QGraphicsWidget_senderSignalIndex, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setAttribute), (PyCFunction)meth_QGraphicsWidget_setAttribute, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setAttribute)},
    {SIP_MLNAME_CAST(sipName_setAutoFillBackground), meth_QGraphicsWidget_setAutoFillBackground, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setAutoFillBackground)},
    {SIP_MLNAME_CAST(sipName_setContentsMargins), meth_QGraphicsWidget_setContentsMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setContentsMargins)},
    {SIP_MLNAME_CAST(sipName_setFocusPolicy), meth_QGraphicsWidget_setFocusPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setFocusPolicy)},
    {SIP_MLNAME_CAST(sipName_setFont), meth_QGraphicsWidget_setFont, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setFont)},
    {SIP_MLNAME_CAST(sipName_setGeometry), meth_QGraphicsWidget_setGeometry, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setGeometry)},
    {SIP_MLNAME_CAST(sipName_setGraphicsItem), (PyCFunction)meth_QGraphicsWidget_setGraphicsItem, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setLayout), meth_QGraphicsWidget_setLayout, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setLayout)},
    {SIP_MLNAME_CAST(sipName_setLayoutDirection), meth_QGraphicsWidget_setLayoutDirection, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setLayoutDirection)},
    {SIP_MLNAME_CAST(sipName_setOwnedByLayout), (PyCFunction)meth_QGraphicsWidget_setOwnedByLayout, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setPalette), meth_QGraphicsWidget_setPalette, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setPalette)},
    {SIP_MLNAME_CAST(sipName_setShortcutAutoRepeat), (PyCFunction)meth_QGraphicsWidget_setShortcutAutoRepeat, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setShortcutAutoRepeat)},
    {SIP_MLNAME_CAST(sipName_setShortcutEnabled), (PyCFunction)meth_QGraphicsWidget_setShortcutEnabled, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setShortcutEnabled)},
    {SIP_MLNAME_CAST(sipName_setStyle), meth_QGraphicsWidget_setStyle, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setStyle)},
    {SIP_MLNAME_CAST(sipName_setTabOrder), meth_QGraphicsWidget_setTabOrder, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setTabOrder)},
    {SIP_MLNAME_CAST(sipName_setWindowFlags), meth_QGraphicsWidget_setWindowFlags, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setWindowFlags)},
    {SIP_MLNAME_CAST(sipName_setWindowFrameMargins), meth_QGraphicsWidget_setWindowFrameMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setWindowFrameMargins)},
    {SIP_MLNAME_CAST(sipName_setWindowTitle), meth_QGraphicsWidget_setWindowTitle, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_setWindowTitle)},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsWidget_shape, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_shape)},
    {SIP_MLNAME_CAST(sipName_showEvent), (PyCFunction)meth_QGraphicsWidget_showEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_showEvent)},
    {SIP_MLNAME_CAST(sipName_size), meth_QGraphicsWidget_size, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_size)},
    {SIP_MLNAME_CAST(sipName_sizeHint), (PyCFunction)meth_QGraphicsWidget_sizeHint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_sizeHint)},
    {SIP_MLNAME_CAST(sipName_style), meth_QGraphicsWidget_style, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_style)},
    {SIP_MLNAME_CAST(sipName_testAttribute), meth_QGraphicsWidget_testAttribute, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_testAttribute)},
    {SIP_MLNAME_CAST(sipName_timerEvent), (PyCFunction)meth_QGraphicsWidget_timerEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsWidget_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_type)},
    {SIP_MLNAME_CAST(sipName_ungrabKeyboardEvent), (PyCFunction)meth_QGraphicsWidget_ungrabKeyboardEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_ungrabKeyboardEvent)},
    {SIP_MLNAME_CAST(sipName_ungrabMouseEvent), (PyCFunction)meth_QGraphicsWidget_ungrabMouseEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_ungrabMouseEvent)},
    {SIP_MLNAME_CAST(sipName_unsetLayoutDirection), meth_QGraphicsWidget_unsetLayoutDirection, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_unsetLayoutDirection)},
    {SIP_MLNAME_CAST(sipName_unsetWindowFrameMargins), meth_QGraphicsWidget_unsetWindowFrameMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_unsetWindowFrameMargins)},
    {SIP_MLNAME_CAST(sipName_updateGeometry), (PyCFunction)meth_QGraphicsWidget_updateGeometry, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_updateGeometry)},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), (PyCFunction)meth_QGraphicsWidget_updateMicroFocus, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), (PyCFunction)meth_QGraphicsWidget_wheelEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_windowFlags), meth_QGraphicsWidget_windowFlags, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowFlags)},
    {SIP_MLNAME_CAST(sipName_windowFrameEvent), (PyCFunction)meth_QGraphicsWidget_windowFrameEvent, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowFrameEvent)},
    {SIP_MLNAME_CAST(sipName_windowFrameGeometry), meth_QGraphicsWidget_windowFrameGeometry, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowFrameGeometry)},
    {SIP_MLNAME_CAST(sipName_windowFrameRect), meth_QGraphicsWidget_windowFrameRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowFrameRect)},
    {SIP_MLNAME_CAST(sipName_windowFrameSectionAt), (PyCFunction)meth_QGraphicsWidget_windowFrameSectionAt, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowFrameSectionAt)},
    {SIP_MLNAME_CAST(sipName_windowTitle), meth_QGraphicsWidget_windowTitle, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowTitle)},
    {SIP_MLNAME_CAST(sipName_windowType), meth_QGraphicsWidget_windowType, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsWidget_windowType)}
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QGraphicsWidget[] = {
    {"geometryChanged()", "\1QGraphicsWidget.geometryChanged", 0, 0},
    {0, 0, 0, 0}
};

PyDoc_STRVAR(doc_QGraphicsWidget, "\1QGraphicsWidget(QGraphicsItem parent=None, Qt.WindowFlags flags=0)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QGraphicsWidget = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsWidget,
        {0}
    },
    {
        sipNameNr_QGraphicsWidget,
        {0, 0, 1},
        106, methods_QGraphicsWidget,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsWidget,
    -1,
    -1,
    supers_QGraphicsWidget,
    0,
    init_type_QGraphicsWidget,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsWidget,
    0,
    0,
    0,
    release_QGraphicsWidget,
    cast_QGraphicsWidget,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QGraphicsWidget::staticMetaObject,
    0,
    signals_QGraphicsWidget,
    0
};
