/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:11 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtWidgets.h"

#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicslinearlayout.sip"
#include <qgraphicslinearlayout.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"

#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 101 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 165 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 51 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"
#line 30 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 54 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"


class sipQGraphicsLinearLayout : public QGraphicsLinearLayout
{
public:
    sipQGraphicsLinearLayout(QGraphicsLayoutItem*);
    sipQGraphicsLinearLayout(Qt::Orientation,QGraphicsLayoutItem*);
    virtual ~sipQGraphicsLinearLayout();

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtect_setGraphicsItem(QGraphicsItem*);
    void sipProtect_setOwnedByLayout(bool);
    void sipProtect_addChildLayoutItem(QGraphicsLayoutItem*);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void updateGeometry();
    void widgetEvent(QEvent*);
    void getContentsMargins(qreal*,qreal*,qreal*,qreal*) const;
    QSizeF sizeHint(Qt::SizeHint,const QSizeF&) const;
    void invalidate();
    QGraphicsLayoutItem* itemAt(int) const;
    int count() const;
    void setGeometry(const QRectF&);
    void removeAt(int);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsLinearLayout(const sipQGraphicsLinearLayout &);
    sipQGraphicsLinearLayout &operator = (const sipQGraphicsLinearLayout &);

    char sipPyMethods[9];
};

sipQGraphicsLinearLayout::sipQGraphicsLinearLayout(QGraphicsLayoutItem*a0): QGraphicsLinearLayout(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsLinearLayout::sipQGraphicsLinearLayout(Qt::Orientation a0,QGraphicsLayoutItem*a1): QGraphicsLinearLayout(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsLinearLayout::~sipQGraphicsLinearLayout()
{
    sipCommonDtor(sipPySelf);
}

void sipQGraphicsLinearLayout::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_updateGeometry);

    if (!sipMeth)
    {
        QGraphicsLinearLayout::updateGeometry();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsLinearLayout::widgetEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_widgetEvent);

    if (!sipMeth)
    {
        QGraphicsLinearLayout::widgetEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsLinearLayout::getContentsMargins(qreal*a0,qreal*a1,qreal*a2,qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,NULL,sipName_getContentsMargins);

    if (!sipMeth)
    {
        QGraphicsLinearLayout::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtWidgets_114(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, double*,double*,double*,double*);

    sipVH_QtWidgets_114(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2, a3);
}

QSizeF sipQGraphicsLinearLayout::sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QGraphicsLinearLayout::sizeHint(a0,a1);

    extern QSizeF sipVH_QtWidgets_109(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::SizeHint,const QSizeF&);

    return sipVH_QtWidgets_109(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

void sipQGraphicsLinearLayout::invalidate()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_invalidate);

    if (!sipMeth)
    {
        QGraphicsLinearLayout::invalidate();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[11]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

QGraphicsLayoutItem* sipQGraphicsLinearLayout::itemAt(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_itemAt);

    if (!sipMeth)
        return QGraphicsLinearLayout::itemAt(a0);

    extern QGraphicsLayoutItem* sipVH_QtWidgets_122(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtWidgets_122(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQGraphicsLinearLayout::count() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_count);

    if (!sipMeth)
        return QGraphicsLinearLayout::count();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsLinearLayout::setGeometry(const QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_setGeometry);

    if (!sipMeth)
    {
        QGraphicsLinearLayout::setGeometry(a0);
        return;
    }

    typedef void (*sipVH_QtGui_45)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QRectF&);

    ((sipVH_QtGui_45)(sipModuleAPI_QtWidgets_QtGui->em_virthandlers[45]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsLinearLayout::removeAt(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_removeAt);

    if (!sipMeth)
    {
        QGraphicsLinearLayout::removeAt(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtWidgets_QtCore->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtWidgets_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsLinearLayout::sipProtect_setGraphicsItem(QGraphicsItem*a0)
{
    QGraphicsLayoutItem::setGraphicsItem(a0);
}

void sipQGraphicsLinearLayout::sipProtect_setOwnedByLayout(bool a0)
{
    QGraphicsLayoutItem::setOwnedByLayout(a0);
}

void sipQGraphicsLinearLayout::sipProtect_addChildLayoutItem(QGraphicsLayoutItem*a0)
{
    QGraphicsLayout::addChildLayoutItem(a0);
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setGraphicsItem, "QGraphicsLinearLayout.setGraphicsItem(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setGraphicsItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setGraphicsItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        sipQGraphicsLinearLayout *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            sipCpp->sipProtect_setGraphicsItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setGraphicsItem, doc_QGraphicsLinearLayout_setGraphicsItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setOwnedByLayout, "QGraphicsLinearLayout.setOwnedByLayout(bool)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setOwnedByLayout(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setOwnedByLayout(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        sipQGraphicsLinearLayout *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "Bb", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            sipCpp->sipProtect_setOwnedByLayout(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setOwnedByLayout, doc_QGraphicsLinearLayout_setOwnedByLayout);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_addChildLayoutItem, "QGraphicsLinearLayout.addChildLayoutItem(QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_addChildLayoutItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_addChildLayoutItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        sipQGraphicsLinearLayout *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ:", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            sipCpp->sipProtect_addChildLayoutItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_addChildLayoutItem, doc_QGraphicsLinearLayout_addChildLayoutItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setOrientation, "QGraphicsLinearLayout.setOrientation(Qt.Orientation)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setOrientation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setOrientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::Orientation a0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_Qt_Orientation, &a0))
        {
            sipCpp->setOrientation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setOrientation, doc_QGraphicsLinearLayout_setOrientation);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_orientation, "QGraphicsLinearLayout.orientation() -> Qt.Orientation");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_orientation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_orientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
            Qt::Orientation sipRes;

            sipRes = sipCpp->orientation();

            return sipConvertFromEnum(sipRes,sipType_Qt_Orientation);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_orientation, doc_QGraphicsLinearLayout_orientation);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_addItem, "QGraphicsLinearLayout.addItem(QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_addItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_addItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            sipCpp->addItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_addItem, doc_QGraphicsLinearLayout_addItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_addStretch, "QGraphicsLinearLayout.addStretch(int stretch=1)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_addStretch(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_addStretch(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0 = 1;
        QGraphicsLinearLayout *sipCpp;

        static const char *sipKwdList[] = {
            sipName_stretch,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|i", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            sipCpp->addStretch(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_addStretch, doc_QGraphicsLinearLayout_addStretch);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_insertItem, "QGraphicsLinearLayout.insertItem(int, QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_insertItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_insertItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        QGraphicsLayoutItem* a1;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ:", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0, sipType_QGraphicsLayoutItem, &a1))
        {
            sipCpp->insertItem(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_insertItem, doc_QGraphicsLinearLayout_insertItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_insertStretch, "QGraphicsLinearLayout.insertStretch(int, int stretch=1)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_insertStretch(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_insertStretch(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1 = 1;
        QGraphicsLinearLayout *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_stretch,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bi|i", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->insertStretch(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_insertStretch, doc_QGraphicsLinearLayout_insertStretch);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_removeItem, "QGraphicsLinearLayout.removeItem(QGraphicsLayoutItem)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_removeItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_removeItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            sipCpp->removeItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_removeItem, doc_QGraphicsLinearLayout_removeItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_removeAt, "QGraphicsLinearLayout.removeAt(int)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_removeAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_removeAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtWidgets/qgraphicslinearlayout.sip"
        // The ownership of any existing item must be passed back to Python.
        QGraphicsLayoutItem *itm;
        
        if (a0 < sipCpp->count())
            itm = sipCpp->itemAt(a0);
        else
            itm = 0;
        
        Py_BEGIN_ALLOW_THREADS
        sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::removeAt(a0)
                      : sipCpp->removeAt(a0);
        Py_END_ALLOW_THREADS
        
        // The Qt documentation isn't quite correct as ownership isn't always passed
        // back to the caller.
        if (itm && !itm->parentLayoutItem())
        {
            PyObject *itmo = sipGetPyObject(itm, sipType_QGraphicsLayoutItem);
        
            if (itmo)
                sipTransferBack(itmo);
        }
#line 599 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtWidgets/sipQtWidgetsQGraphicsLinearLayout.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_removeAt, doc_QGraphicsLinearLayout_removeAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setSpacing, "QGraphicsLinearLayout.setSpacing(float)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            sipCpp->setSpacing(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setSpacing, doc_QGraphicsLinearLayout_setSpacing);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_spacing, "QGraphicsLinearLayout.spacing() -> float");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_spacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_spacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
            qreal sipRes;

            sipRes = sipCpp->spacing();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_spacing, doc_QGraphicsLinearLayout_spacing);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setItemSpacing, "QGraphicsLinearLayout.setItemSpacing(int, float)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setItemSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setItemSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        qreal a1;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bid", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0, &a1))
        {
            sipCpp->setItemSpacing(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setItemSpacing, doc_QGraphicsLinearLayout_setItemSpacing);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_itemSpacing, "QGraphicsLinearLayout.itemSpacing(int) -> float");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_itemSpacing(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_itemSpacing(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            qreal sipRes;

            sipRes = sipCpp->itemSpacing(a0);

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_itemSpacing, doc_QGraphicsLinearLayout_itemSpacing);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setStretchFactor, "QGraphicsLinearLayout.setStretchFactor(QGraphicsLayoutItem, int)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setStretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setStretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        int a1;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8i", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, &a1))
        {
            sipCpp->setStretchFactor(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setStretchFactor, doc_QGraphicsLinearLayout_setStretchFactor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_stretchFactor, "QGraphicsLinearLayout.stretchFactor(QGraphicsLayoutItem) -> int");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_stretchFactor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_stretchFactor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            int sipRes;

            sipRes = sipCpp->stretchFactor(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_stretchFactor, doc_QGraphicsLinearLayout_stretchFactor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setAlignment, "QGraphicsLinearLayout.setAlignment(QGraphicsLayoutItem, Qt.Alignment)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setAlignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setAlignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        Qt::Alignment* a1;
        int a1State = 0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            sipCpp->setAlignment(a0,*a1);
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setAlignment, doc_QGraphicsLinearLayout_setAlignment);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_alignment, "QGraphicsLinearLayout.alignment(QGraphicsLayoutItem) -> Qt.Alignment");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_alignment(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_alignment(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsLayoutItem* a0;
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QGraphicsLayoutItem, &a0))
        {
            Qt::Alignment*sipRes;

            sipRes = new Qt::Alignment(sipCpp->alignment(a0));

            return sipConvertFromNewType(sipRes,sipType_Qt_Alignment,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_alignment, doc_QGraphicsLinearLayout_alignment);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_setGeometry, "QGraphicsLinearLayout.setGeometry(QRectF)");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRectF* a0;
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_QRectF, &a0))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::setGeometry(*a0) : sipCpp->setGeometry(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_setGeometry, doc_QGraphicsLinearLayout_setGeometry);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_count, "QGraphicsLinearLayout.count() -> int");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_count(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_count(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::count() : sipCpp->count());

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_count, doc_QGraphicsLinearLayout_count);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_itemAt, "QGraphicsLinearLayout.itemAt(int) -> QGraphicsLayoutItem");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        const QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, &a0))
        {
            QGraphicsLayoutItem*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::itemAt(a0) : sipCpp->itemAt(a0));

            return sipConvertFromType(sipRes,sipType_QGraphicsLayoutItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_itemAt, doc_QGraphicsLinearLayout_itemAt);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_invalidate, "QGraphicsLinearLayout.invalidate()");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_invalidate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_invalidate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsLinearLayout *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::invalidate() : sipCpp->invalidate());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_invalidate, doc_QGraphicsLinearLayout_invalidate);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsLinearLayout_sizeHint, "QGraphicsLinearLayout.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsLinearLayout_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsLinearLayout_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF* a1 = &a1def;
        const QGraphicsLinearLayout *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsLinearLayout, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF*sipRes;

            sipRes = new QSizeF((sipSelfWasArg ? sipCpp->QGraphicsLinearLayout::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsLinearLayout, sipName_sizeHint, doc_QGraphicsLinearLayout_sizeHint);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsLinearLayout(void *, const sipTypeDef *);}
static void *cast_QGraphicsLinearLayout(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsLinearLayout)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsLayout)->ctd_cast((QGraphicsLayout *)(QGraphicsLinearLayout *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsLinearLayout(void *, int);}
static void release_QGraphicsLinearLayout(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsLinearLayout *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsLinearLayout *>(sipCppV);
}


extern "C" {static void dealloc_QGraphicsLinearLayout(sipSimpleWrapper *);}
static void dealloc_QGraphicsLinearLayout(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsLinearLayout *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsLinearLayout(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsLinearLayout(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsLinearLayout(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsLinearLayout *sipCpp = 0;

    {
        QGraphicsLayoutItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsLayoutItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsLinearLayout(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        Qt::Orientation a0;
        QGraphicsLayoutItem* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "E|JH", sipType_Qt_Orientation, &a0, sipType_QGraphicsLayoutItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsLinearLayout(a0,a1);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsLinearLayout[] = {{128, 255, 1}};


static PyMethodDef methods_QGraphicsLinearLayout[] = {
    {SIP_MLNAME_CAST(sipName_addChildLayoutItem), (PyCFunction)meth_QGraphicsLinearLayout_addChildLayoutItem, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_addItem), meth_QGraphicsLinearLayout_addItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_addItem)},
    {SIP_MLNAME_CAST(sipName_addStretch), (PyCFunction)meth_QGraphicsLinearLayout_addStretch, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_addStretch)},
    {SIP_MLNAME_CAST(sipName_alignment), meth_QGraphicsLinearLayout_alignment, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_alignment)},
    {SIP_MLNAME_CAST(sipName_count), meth_QGraphicsLinearLayout_count, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_count)},
    {SIP_MLNAME_CAST(sipName_insertItem), meth_QGraphicsLinearLayout_insertItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_insertItem)},
    {SIP_MLNAME_CAST(sipName_insertStretch), (PyCFunction)meth_QGraphicsLinearLayout_insertStretch, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_insertStretch)},
    {SIP_MLNAME_CAST(sipName_invalidate), meth_QGraphicsLinearLayout_invalidate, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_invalidate)},
    {SIP_MLNAME_CAST(sipName_itemAt), meth_QGraphicsLinearLayout_itemAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_itemAt)},
    {SIP_MLNAME_CAST(sipName_itemSpacing), meth_QGraphicsLinearLayout_itemSpacing, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_itemSpacing)},
    {SIP_MLNAME_CAST(sipName_orientation), meth_QGraphicsLinearLayout_orientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_orientation)},
    {SIP_MLNAME_CAST(sipName_removeAt), meth_QGraphicsLinearLayout_removeAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_removeAt)},
    {SIP_MLNAME_CAST(sipName_removeItem), meth_QGraphicsLinearLayout_removeItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_removeItem)},
    {SIP_MLNAME_CAST(sipName_setAlignment), meth_QGraphicsLinearLayout_setAlignment, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_setAlignment)},
    {SIP_MLNAME_CAST(sipName_setGeometry), meth_QGraphicsLinearLayout_setGeometry, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_setGeometry)},
    {SIP_MLNAME_CAST(sipName_setGraphicsItem), (PyCFunction)meth_QGraphicsLinearLayout_setGraphicsItem, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setItemSpacing), meth_QGraphicsLinearLayout_setItemSpacing, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_setItemSpacing)},
    {SIP_MLNAME_CAST(sipName_setOrientation), meth_QGraphicsLinearLayout_setOrientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_setOrientation)},
    {SIP_MLNAME_CAST(sipName_setOwnedByLayout), (PyCFunction)meth_QGraphicsLinearLayout_setOwnedByLayout, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setSpacing), meth_QGraphicsLinearLayout_setSpacing, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_setSpacing)},
    {SIP_MLNAME_CAST(sipName_setStretchFactor), meth_QGraphicsLinearLayout_setStretchFactor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_setStretchFactor)},
    {SIP_MLNAME_CAST(sipName_sizeHint), (PyCFunction)meth_QGraphicsLinearLayout_sizeHint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_sizeHint)},
    {SIP_MLNAME_CAST(sipName_spacing), meth_QGraphicsLinearLayout_spacing, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_spacing)},
    {SIP_MLNAME_CAST(sipName_stretchFactor), meth_QGraphicsLinearLayout_stretchFactor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsLinearLayout_stretchFactor)}
};

PyDoc_STRVAR(doc_QGraphicsLinearLayout, "\1QGraphicsLinearLayout(QGraphicsLayoutItem parent=None)\n"
    "QGraphicsLinearLayout(Qt.Orientation, QGraphicsLayoutItem parent=None)");


pyqt5ClassTypeDef sipTypeDef_QtWidgets_QGraphicsLinearLayout = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsLinearLayout,
        {0}
    },
    {
        sipNameNr_QGraphicsLinearLayout,
        {0, 0, 1},
        24, methods_QGraphicsLinearLayout,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsLinearLayout,
    -1,
    -1,
    supers_QGraphicsLinearLayout,
    0,
    init_type_QGraphicsLinearLayout,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsLinearLayout,
    0,
    0,
    0,
    release_QGraphicsLinearLayout,
    cast_QGraphicsLinearLayout,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
