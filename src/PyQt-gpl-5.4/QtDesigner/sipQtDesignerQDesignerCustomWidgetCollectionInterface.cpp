/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:17 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtDesigner.h"

#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtDesigner/customwidget.sip"
#include <customwidget.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtDesigner/sipQtDesignerQDesignerCustomWidgetCollectionInterface.cpp"

#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtDesigner/sipQtDesignerQDesignerCustomWidgetCollectionInterface.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtDesigner/customwidget.sip"
#include <customwidget.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtDesigner/sipQtDesignerQDesignerCustomWidgetCollectionInterface.cpp"


class sipQDesignerCustomWidgetCollectionInterface : public QDesignerCustomWidgetCollectionInterface
{
public:
    sipQDesignerCustomWidgetCollectionInterface();
    sipQDesignerCustomWidgetCollectionInterface(const QDesignerCustomWidgetCollectionInterface&);
    virtual ~sipQDesignerCustomWidgetCollectionInterface();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    QList<QDesignerCustomWidgetInterface*> customWidgets() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQDesignerCustomWidgetCollectionInterface(const sipQDesignerCustomWidgetCollectionInterface &);
    sipQDesignerCustomWidgetCollectionInterface &operator = (const sipQDesignerCustomWidgetCollectionInterface &);

    char sipPyMethods[1];
};

sipQDesignerCustomWidgetCollectionInterface::sipQDesignerCustomWidgetCollectionInterface(): QDesignerCustomWidgetCollectionInterface(), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDesignerCustomWidgetCollectionInterface::sipQDesignerCustomWidgetCollectionInterface(const QDesignerCustomWidgetCollectionInterface& a0): QDesignerCustomWidgetCollectionInterface(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQDesignerCustomWidgetCollectionInterface::~sipQDesignerCustomWidgetCollectionInterface()
{
    sipCommonDtor(sipPySelf);
}

QList<QDesignerCustomWidgetInterface*> sipQDesignerCustomWidgetCollectionInterface::customWidgets() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,sipName_QDesignerCustomWidgetCollectionInterface,sipName_customWidgets);

    if (!sipMeth)
        return QList<QDesignerCustomWidgetInterface*>();

    extern QList<QDesignerCustomWidgetInterface*> sipVH_QtDesigner_8(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtDesigner_8(sipGILState, sipModuleAPI_QtDesigner_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_QDesignerCustomWidgetCollectionInterface_customWidgets, "QDesignerCustomWidgetCollectionInterface.customWidgets() -> list-of-QDesignerCustomWidgetInterface");

extern "C" {static PyObject *meth_QDesignerCustomWidgetCollectionInterface_customWidgets(PyObject *, PyObject *);}
static PyObject *meth_QDesignerCustomWidgetCollectionInterface_customWidgets(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        const QDesignerCustomWidgetCollectionInterface *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDesignerCustomWidgetCollectionInterface, &sipCpp))
        {
            QList<QDesignerCustomWidgetInterface*>*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QDesignerCustomWidgetCollectionInterface, sipName_customWidgets);
                return NULL;
            }

            sipRes = new QList<QDesignerCustomWidgetInterface*>(sipCpp->customWidgets());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QDesignerCustomWidgetInterface,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDesignerCustomWidgetCollectionInterface, sipName_customWidgets, doc_QDesignerCustomWidgetCollectionInterface_customWidgets);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QDesignerCustomWidgetCollectionInterface(void *, const sipTypeDef *);}
static void *cast_QDesignerCustomWidgetCollectionInterface(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QDesignerCustomWidgetCollectionInterface)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QDesignerCustomWidgetCollectionInterface(void *, int);}
static void release_QDesignerCustomWidgetCollectionInterface(void *sipCppV,int sipState)
{
    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQDesignerCustomWidgetCollectionInterface *>(sipCppV);
    else
        delete reinterpret_cast<QDesignerCustomWidgetCollectionInterface *>(sipCppV);
}


extern "C" {static void dealloc_QDesignerCustomWidgetCollectionInterface(sipSimpleWrapper *);}
static void dealloc_QDesignerCustomWidgetCollectionInterface(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQDesignerCustomWidgetCollectionInterface *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QDesignerCustomWidgetCollectionInterface(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QDesignerCustomWidgetCollectionInterface(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QDesignerCustomWidgetCollectionInterface(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    sipQDesignerCustomWidgetCollectionInterface *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new sipQDesignerCustomWidgetCollectionInterface();

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const QDesignerCustomWidgetCollectionInterface* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QDesignerCustomWidgetCollectionInterface, &a0))
        {
            sipCpp = new sipQDesignerCustomWidgetCollectionInterface(*a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_QDesignerCustomWidgetCollectionInterface[] = {
    {SIP_MLNAME_CAST(sipName_customWidgets), meth_QDesignerCustomWidgetCollectionInterface_customWidgets, METH_VARARGS, SIP_MLDOC_CAST(doc_QDesignerCustomWidgetCollectionInterface_customWidgets)}
};

PyDoc_STRVAR(doc_QDesignerCustomWidgetCollectionInterface, "\1QDesignerCustomWidgetCollectionInterface()\n"
    "QDesignerCustomWidgetCollectionInterface(QDesignerCustomWidgetCollectionInterface)");


pyqt5ClassTypeDef sipTypeDef_QtDesigner_QDesignerCustomWidgetCollectionInterface = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QDesignerCustomWidgetCollectionInterface,
        {0}
    },
    {
        sipNameNr_QDesignerCustomWidgetCollectionInterface,
        {0, 0, 1},
        1, methods_QDesignerCustomWidgetCollectionInterface,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QDesignerCustomWidgetCollectionInterface,
    sipNameNr_PyQt5_QtCore_pyqtWrapperType,
    sipNameNr_sip_simplewrapper,
    0,
    0,
    init_type_QDesignerCustomWidgetCollectionInterface,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QDesignerCustomWidgetCollectionInterface,
    0,
    0,
    0,
    release_QDesignerCustomWidgetCollectionInterface,
    cast_QDesignerCustomWidgetCollectionInterface,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
