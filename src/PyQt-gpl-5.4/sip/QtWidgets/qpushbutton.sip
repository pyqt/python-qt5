// qpushbutton.sip generated by MetaSIP on Thu Dec 25 10:18:50 2014
//
// This file is part of the QtWidgets Python extension module.
//
// Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QPushButton : QAbstractButton
{
%TypeHeaderCode
#include <qpushbutton.h>
%End

public:
    explicit QPushButton(QWidget *parent /TransferThis/ = 0);
    QPushButton(const QString &text, QWidget *parent /TransferThis/ = 0);
    QPushButton(const QIcon &icon, const QString &text, QWidget *parent /TransferThis/ = 0);
    virtual ~QPushButton();
    virtual QSize sizeHint() const;
    virtual QSize minimumSizeHint() const;
    bool autoDefault() const;
    void setAutoDefault(bool);
    bool isDefault() const;
    void setDefault(bool);
    void setMenu(QMenu *menu /KeepReference/);
    QMenu *menu() const;
    void setFlat(bool);
    bool isFlat() const;

public slots:
    void showMenu();

protected:
    void initStyleOption(QStyleOptionButton *option) const;
    virtual bool event(QEvent *e);
    virtual void paintEvent(QPaintEvent *);
    virtual void keyPressEvent(QKeyEvent *);
    virtual void focusInEvent(QFocusEvent *);
    virtual void focusOutEvent(QFocusEvent *);
// Protected platform specific methods.
%If (WS_MACX)
bool hitButton(const QPoint &pos) const;
%End

private:
    QPushButton(const QPushButton &);
};
