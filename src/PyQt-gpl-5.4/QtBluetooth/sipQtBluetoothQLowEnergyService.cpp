/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:23 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtBluetooth.h"

#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"

#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergydescriptor.sip"
#include <qlowenergydescriptor.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 34 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergyservice.sip"
#include <qlowenergyservice.h>
#line 51 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 54 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 30 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 57 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 60 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 234 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 63 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 222 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 66 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 69 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 72 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 75 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 78 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 81 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 84 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 87 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 30 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 90 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 30 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 93 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 96 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyService.cpp"


PyDoc_STRVAR(doc_QLowEnergyService_includedServices, "QLowEnergyService.includedServices() -> list-of-QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyService_includedServices(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_includedServices(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QList<QBluetoothUuid>*sipRes;

            sipRes = new QList<QBluetoothUuid>(sipCpp->includedServices());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QBluetoothUuid,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_includedServices, doc_QLowEnergyService_includedServices);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_type, "QLowEnergyService.type() -> QLowEnergyService.ServiceTypes");

extern "C" {static PyObject *meth_QLowEnergyService_type(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QLowEnergyService::ServiceTypes*sipRes;

            sipRes = new QLowEnergyService::ServiceTypes(sipCpp->type());

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyService_ServiceTypes,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_type, doc_QLowEnergyService_type);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_state, "QLowEnergyService.state() -> QLowEnergyService.ServiceState");

extern "C" {static PyObject *meth_QLowEnergyService_state(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_state(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QLowEnergyService::ServiceState sipRes;

            sipRes = sipCpp->state();

            return sipConvertFromEnum(sipRes,sipType_QLowEnergyService_ServiceState);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_state, doc_QLowEnergyService_state);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_characteristic, "QLowEnergyService.characteristic(QBluetoothUuid) -> QLowEnergyCharacteristic");

extern "C" {static PyObject *meth_QLowEnergyService_characteristic(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_characteristic(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QBluetoothUuid* a0;
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QBluetoothUuid, &a0))
        {
            QLowEnergyCharacteristic*sipRes;

            sipRes = new QLowEnergyCharacteristic(sipCpp->characteristic(*a0));

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_characteristic, doc_QLowEnergyService_characteristic);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_characteristics, "QLowEnergyService.characteristics() -> list-of-QLowEnergyCharacteristic");

extern "C" {static PyObject *meth_QLowEnergyService_characteristics(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_characteristics(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QList<QLowEnergyCharacteristic>*sipRes;

            sipRes = new QList<QLowEnergyCharacteristic>(sipCpp->characteristics());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLowEnergyCharacteristic,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_characteristics, doc_QLowEnergyService_characteristics);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_serviceUuid, "QLowEnergyService.serviceUuid() -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyService_serviceUuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_serviceUuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QBluetoothUuid*sipRes;

            sipRes = new QBluetoothUuid(sipCpp->serviceUuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_serviceUuid, doc_QLowEnergyService_serviceUuid);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_serviceName, "QLowEnergyService.serviceName() -> str");

extern "C" {static PyObject *meth_QLowEnergyService_serviceName(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_serviceName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->serviceName());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_serviceName, doc_QLowEnergyService_serviceName);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_discoverDetails, "QLowEnergyService.discoverDetails()");

extern "C" {static PyObject *meth_QLowEnergyService_discoverDetails(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_discoverDetails(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            sipCpp->discoverDetails();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_discoverDetails, doc_QLowEnergyService_discoverDetails);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_error, "QLowEnergyService.error() -> QLowEnergyService.ServiceError");

extern "C" {static PyObject *meth_QLowEnergyService_error(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_error(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyService, &sipCpp))
        {
            QLowEnergyService::ServiceError sipRes;

            sipRes = sipCpp->error();

            return sipConvertFromEnum(sipRes,sipType_QLowEnergyService_ServiceError);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_error, doc_QLowEnergyService_error);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_contains, "QLowEnergyService.contains(QLowEnergyCharacteristic) -> bool\n"
    "QLowEnergyService.contains(QLowEnergyDescriptor) -> bool");

extern "C" {static PyObject *meth_QLowEnergyService_contains(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic* a0;
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyCharacteristic, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->contains(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const QLowEnergyDescriptor* a0;
        const QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyDescriptor, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->contains(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_contains, doc_QLowEnergyService_contains);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_writeCharacteristic, "QLowEnergyService.writeCharacteristic(QLowEnergyCharacteristic, QByteArray, QLowEnergyService.WriteMode mode=QLowEnergyService.WriteWithResponse)");

extern "C" {static PyObject *meth_QLowEnergyService_writeCharacteristic(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_writeCharacteristic(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic* a0;
        const QByteArray* a1;
        int a1State = 0;
        QLowEnergyService::WriteMode a2 = QLowEnergyService::WriteWithResponse;
        QLowEnergyService *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9J1|E", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyCharacteristic, &a0, sipType_QByteArray, &a1, &a1State, sipType_QLowEnergyService_WriteMode, &a2))
        {
            sipCpp->writeCharacteristic(*a0,*a1,a2);
            sipReleaseType(const_cast<QByteArray *>(a1),sipType_QByteArray,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_writeCharacteristic, doc_QLowEnergyService_writeCharacteristic);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyService_writeDescriptor, "QLowEnergyService.writeDescriptor(QLowEnergyDescriptor, QByteArray)");

extern "C" {static PyObject *meth_QLowEnergyService_writeDescriptor(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyService_writeDescriptor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyDescriptor* a0;
        const QByteArray* a1;
        int a1State = 0;
        QLowEnergyService *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J1", &sipSelf, sipType_QLowEnergyService, &sipCpp, sipType_QLowEnergyDescriptor, &a0, sipType_QByteArray, &a1, &a1State))
        {
            sipCpp->writeDescriptor(*a0,*a1);
            sipReleaseType(const_cast<QByteArray *>(a1),sipType_QByteArray,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyService, sipName_writeDescriptor, doc_QLowEnergyService_writeDescriptor);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QLowEnergyService(void *, const sipTypeDef *);}
static void *cast_QLowEnergyService(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QLowEnergyService)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QObject)->ctd_cast((QObject *)(QLowEnergyService *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyService(void *, int);}
static void release_QLowEnergyService(void *sipCppV,int)
{
    QLowEnergyService *sipCpp = reinterpret_cast<QLowEnergyService *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QLowEnergyService(sipSimpleWrapper *);}
static void dealloc_QLowEnergyService(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QLowEnergyService(sipGetAddress(sipSelf),0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QLowEnergyService[] = {{162, 0, 1}};


static PyMethodDef methods_QLowEnergyService[] = {
    {SIP_MLNAME_CAST(sipName_characteristic), meth_QLowEnergyService_characteristic, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_characteristic)},
    {SIP_MLNAME_CAST(sipName_characteristics), meth_QLowEnergyService_characteristics, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_characteristics)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QLowEnergyService_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_contains)},
    {SIP_MLNAME_CAST(sipName_discoverDetails), meth_QLowEnergyService_discoverDetails, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_discoverDetails)},
    {SIP_MLNAME_CAST(sipName_error), meth_QLowEnergyService_error, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_error)},
    {SIP_MLNAME_CAST(sipName_includedServices), meth_QLowEnergyService_includedServices, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_includedServices)},
    {SIP_MLNAME_CAST(sipName_serviceName), meth_QLowEnergyService_serviceName, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_serviceName)},
    {SIP_MLNAME_CAST(sipName_serviceUuid), meth_QLowEnergyService_serviceUuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_serviceUuid)},
    {SIP_MLNAME_CAST(sipName_state), meth_QLowEnergyService_state, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_state)},
    {SIP_MLNAME_CAST(sipName_type), meth_QLowEnergyService_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_type)},
    {SIP_MLNAME_CAST(sipName_writeCharacteristic), (PyCFunction)meth_QLowEnergyService_writeCharacteristic, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QLowEnergyService_writeCharacteristic)},
    {SIP_MLNAME_CAST(sipName_writeDescriptor), meth_QLowEnergyService_writeDescriptor, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyService_writeDescriptor)}
};

static sipEnumMemberDef enummembers_QLowEnergyService[] = {
    {sipName_CharacteristicWriteError, static_cast<int>(QLowEnergyService::CharacteristicWriteError), 68},
    {sipName_DescriptorWriteError, static_cast<int>(QLowEnergyService::DescriptorWriteError), 68},
    {sipName_DiscoveringServices, static_cast<int>(QLowEnergyService::DiscoveringServices), 69},
    {sipName_DiscoveryRequired, static_cast<int>(QLowEnergyService::DiscoveryRequired), 69},
    {sipName_IncludedService, static_cast<int>(QLowEnergyService::IncludedService), 70},
    {sipName_InvalidService, static_cast<int>(QLowEnergyService::InvalidService), 69},
    {sipName_NoError, static_cast<int>(QLowEnergyService::NoError), 68},
    {sipName_OperationError, static_cast<int>(QLowEnergyService::OperationError), 68},
    {sipName_PrimaryService, static_cast<int>(QLowEnergyService::PrimaryService), 70},
    {sipName_ServiceDiscovered, static_cast<int>(QLowEnergyService::ServiceDiscovered), 69},
    {sipName_WriteWithResponse, static_cast<int>(QLowEnergyService::WriteWithResponse), 72},
    {sipName_WriteWithoutResponse, static_cast<int>(QLowEnergyService::WriteWithoutResponse), 72},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QLowEnergyService[] = {
    {"descriptorWritten(QLowEnergyDescriptor,QByteArray)", "\1QLowEnergyService.descriptorWritten[QLowEnergyDescriptor, QByteArray]", 0, 0},
    {"characteristicWritten(QLowEnergyCharacteristic,QByteArray)", "\1QLowEnergyService.characteristicWritten[QLowEnergyCharacteristic, QByteArray]", 0, 0},
    {"characteristicChanged(QLowEnergyCharacteristic,QByteArray)", "\1QLowEnergyService.characteristicChanged[QLowEnergyCharacteristic, QByteArray]", 0, 0},
    {"stateChanged(QLowEnergyService::ServiceState)", "\1QLowEnergyService.stateChanged[QLowEnergyService.ServiceState]", 0, 0},
    {"error(QLowEnergyService::ServiceError)", "\1QLowEnergyService.error[QLowEnergyService.ServiceError]", &methods_QLowEnergyService[4], 0},
    {0, 0, 0, 0}
};


pyqt5ClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyService = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyService,
        {0}
    },
    {
        sipNameNr_QLowEnergyService,
        {0, 0, 1},
        12, methods_QLowEnergyService,
        12, enummembers_QLowEnergyService,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QLowEnergyService,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QLowEnergyService,
    0,
    0,
    0,
    release_QLowEnergyService,
    cast_QLowEnergyService,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QLowEnergyService::staticMetaObject,
    0,
    signals_QLowEnergyService,
    0
};
