/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:18:23 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtBluetooth.h"

#line 34 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"

#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergydescriptor.sip"
#include <qlowenergydescriptor.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"
#line 28 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qbluetoothuuid.sip"
#include <qbluetoothuuid.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"
#line 34 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtBluetooth/qlowenergycharacteristic.sip"
#include <qlowenergycharacteristic.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtBluetooth/sipQtBluetoothQLowEnergyCharacteristic.cpp"


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_name, "QLowEnergyCharacteristic.name() -> str");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_name(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->name());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_name, doc_QLowEnergyCharacteristic_name);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_uuid, "QLowEnergyCharacteristic.uuid() -> QBluetoothUuid");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_uuid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_uuid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            QBluetoothUuid*sipRes;

            sipRes = new QBluetoothUuid(sipCpp->uuid());

            return sipConvertFromNewType(sipRes,sipType_QBluetoothUuid,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_uuid, doc_QLowEnergyCharacteristic_uuid);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_value, "QLowEnergyCharacteristic.value() -> QByteArray");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_value(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_value(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            QByteArray*sipRes;

            sipRes = new QByteArray(sipCpp->value());

            return sipConvertFromNewType(sipRes,sipType_QByteArray,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_value, doc_QLowEnergyCharacteristic_value);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_properties, "QLowEnergyCharacteristic.properties() -> QLowEnergyCharacteristic.PropertyTypes");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_properties(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_properties(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            QLowEnergyCharacteristic::PropertyTypes*sipRes;

            sipRes = new QLowEnergyCharacteristic::PropertyTypes(sipCpp->properties());

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyCharacteristic_PropertyTypes,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_properties, doc_QLowEnergyCharacteristic_properties);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_handle, "QLowEnergyCharacteristic.handle() -> int");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_handle(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_handle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            QLowEnergyHandle sipRes;

            sipRes = sipCpp->handle();

#if PY_MAJOR_VERSION >= 3
            return PyLong_FromUnsignedLong(sipRes);
#else
            return PyInt_FromLong(sipRes);
#endif
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_handle, doc_QLowEnergyCharacteristic_handle);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_descriptor, "QLowEnergyCharacteristic.descriptor(QBluetoothUuid) -> QLowEnergyDescriptor");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_descriptor(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_descriptor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QBluetoothUuid* a0;
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp, sipType_QBluetoothUuid, &a0))
        {
            QLowEnergyDescriptor*sipRes;

            sipRes = new QLowEnergyDescriptor(sipCpp->descriptor(*a0));

            return sipConvertFromNewType(sipRes,sipType_QLowEnergyDescriptor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_descriptor, doc_QLowEnergyCharacteristic_descriptor);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_descriptors, "QLowEnergyCharacteristic.descriptors() -> list-of-QLowEnergyDescriptor");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_descriptors(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_descriptors(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            QList<QLowEnergyDescriptor>*sipRes;

            sipRes = new QList<QLowEnergyDescriptor>(sipCpp->descriptors());

            return sipConvertFromNewType(sipRes,sipType_QList_0100QLowEnergyDescriptor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_descriptors, doc_QLowEnergyCharacteristic_descriptors);

    return NULL;
}


PyDoc_STRVAR(doc_QLowEnergyCharacteristic_isValid, "QLowEnergyCharacteristic.isValid() -> bool");

extern "C" {static PyObject *meth_QLowEnergyCharacteristic_isValid(PyObject *, PyObject *);}
static PyObject *meth_QLowEnergyCharacteristic_isValid(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QLowEnergyCharacteristic, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isValid();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QLowEnergyCharacteristic, sipName_isValid, doc_QLowEnergyCharacteristic_isValid);

    return NULL;
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic___ne__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic___ne__(PyObject *sipSelf,PyObject *sipArg)
{
    QLowEnergyCharacteristic *sipCpp = reinterpret_cast<QLowEnergyCharacteristic *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyCharacteristic, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->QLowEnergyCharacteristic::operator!=(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth,ne_slot,sipType_QLowEnergyCharacteristic,sipSelf,sipArg);
}


extern "C" {static PyObject *slot_QLowEnergyCharacteristic___eq__(PyObject *,PyObject *);}
static PyObject *slot_QLowEnergyCharacteristic___eq__(PyObject *sipSelf,PyObject *sipArg)
{
    QLowEnergyCharacteristic *sipCpp = reinterpret_cast<QLowEnergyCharacteristic *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QLowEnergyCharacteristic));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const QLowEnergyCharacteristic* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_QLowEnergyCharacteristic, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->QLowEnergyCharacteristic::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtBluetooth,eq_slot,sipType_QLowEnergyCharacteristic,sipSelf,sipArg);
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QLowEnergyCharacteristic(void *, const sipTypeDef *);}
static void *cast_QLowEnergyCharacteristic(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QLowEnergyCharacteristic)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QLowEnergyCharacteristic(void *, int);}
static void release_QLowEnergyCharacteristic(void *sipCppV,int)
{
    delete reinterpret_cast<QLowEnergyCharacteristic *>(sipCppV);
}


extern "C" {static void assign_QLowEnergyCharacteristic(void *, SIP_SSIZE_T, const void *);}
static void assign_QLowEnergyCharacteristic(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QLowEnergyCharacteristic *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QLowEnergyCharacteristic *>(sipSrc);
}


extern "C" {static void *array_QLowEnergyCharacteristic(SIP_SSIZE_T);}
static void *array_QLowEnergyCharacteristic(SIP_SSIZE_T sipNrElem)
{
    return new QLowEnergyCharacteristic[sipNrElem];
}


extern "C" {static void *copy_QLowEnergyCharacteristic(const void *, SIP_SSIZE_T);}
static void *copy_QLowEnergyCharacteristic(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QLowEnergyCharacteristic(reinterpret_cast<const QLowEnergyCharacteristic *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QLowEnergyCharacteristic(sipSimpleWrapper *);}
static void dealloc_QLowEnergyCharacteristic(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QLowEnergyCharacteristic(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QLowEnergyCharacteristic(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QLowEnergyCharacteristic(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QLowEnergyCharacteristic *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new QLowEnergyCharacteristic();

            return sipCpp;
        }
    }

    {
        const QLowEnergyCharacteristic* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QLowEnergyCharacteristic, &a0))
        {
            sipCpp = new QLowEnergyCharacteristic(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QLowEnergyCharacteristic[] = {
    {(void *)slot_QLowEnergyCharacteristic___ne__, ne_slot},
    {(void *)slot_QLowEnergyCharacteristic___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_QLowEnergyCharacteristic[] = {
    {SIP_MLNAME_CAST(sipName_descriptor), meth_QLowEnergyCharacteristic_descriptor, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_descriptor)},
    {SIP_MLNAME_CAST(sipName_descriptors), meth_QLowEnergyCharacteristic_descriptors, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_descriptors)},
    {SIP_MLNAME_CAST(sipName_handle), meth_QLowEnergyCharacteristic_handle, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_handle)},
    {SIP_MLNAME_CAST(sipName_isValid), meth_QLowEnergyCharacteristic_isValid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_isValid)},
    {SIP_MLNAME_CAST(sipName_name), meth_QLowEnergyCharacteristic_name, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_name)},
    {SIP_MLNAME_CAST(sipName_properties), meth_QLowEnergyCharacteristic_properties, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_properties)},
    {SIP_MLNAME_CAST(sipName_uuid), meth_QLowEnergyCharacteristic_uuid, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_uuid)},
    {SIP_MLNAME_CAST(sipName_value), meth_QLowEnergyCharacteristic_value, METH_VARARGS, SIP_MLDOC_CAST(doc_QLowEnergyCharacteristic_value)}
};

static sipEnumMemberDef enummembers_QLowEnergyCharacteristic[] = {
    {sipName_Broadcasting, static_cast<int>(QLowEnergyCharacteristic::Broadcasting), 60},
    {sipName_ExtendedProperty, static_cast<int>(QLowEnergyCharacteristic::ExtendedProperty), 60},
    {sipName_Indicate, static_cast<int>(QLowEnergyCharacteristic::Indicate), 60},
    {sipName_Notify, static_cast<int>(QLowEnergyCharacteristic::Notify), 60},
    {sipName_Read, static_cast<int>(QLowEnergyCharacteristic::Read), 60},
    {sipName_Unknown, static_cast<int>(QLowEnergyCharacteristic::Unknown), 60},
    {sipName_Write, static_cast<int>(QLowEnergyCharacteristic::Write), 60},
    {sipName_WriteNoResponse, static_cast<int>(QLowEnergyCharacteristic::WriteNoResponse), 60},
    {sipName_WriteSigned, static_cast<int>(QLowEnergyCharacteristic::WriteSigned), 60},
};

PyDoc_STRVAR(doc_QLowEnergyCharacteristic, "\1QLowEnergyCharacteristic()\n"
    "QLowEnergyCharacteristic(QLowEnergyCharacteristic)");


pyqt5ClassTypeDef sipTypeDef_QtBluetooth_QLowEnergyCharacteristic = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QLowEnergyCharacteristic,
        {0}
    },
    {
        sipNameNr_QLowEnergyCharacteristic,
        {0, 0, 1},
        8, methods_QLowEnergyCharacteristic,
        9, enummembers_QLowEnergyCharacteristic,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QLowEnergyCharacteristic,
    sipNameNr_PyQt5_QtCore_pyqtWrapperType,
    -1,
    0,
    slots_QLowEnergyCharacteristic,
    init_type_QLowEnergyCharacteristic,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QLowEnergyCharacteristic,
    assign_QLowEnergyCharacteristic,
    array_QLowEnergyCharacteristic,
    copy_QLowEnergyCharacteristic,
    release_QLowEnergyCharacteristic,
    cast_QLowEnergyCharacteristic,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0,
    0
};
