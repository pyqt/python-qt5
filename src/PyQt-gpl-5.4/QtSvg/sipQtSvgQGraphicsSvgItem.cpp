/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.5 on Thu Feb 05 16:17:55 2015
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt5.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtSvg.h"

#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtSvg/qgraphicssvgitem.sip"
#include <qgraphicssvgitem.h>
#line 29 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"

#line 30 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 33 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 27 "sip/QtCore/qstring.sip"
#include <qstring.h>
#line 36 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 39 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 1016 "sip/QtWidgets/qstyleoption.sip"
#include <qstyleoption.h>
#line 42 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtWidgets/qwidget.sip"
#include <qwidget.h>
#line 45 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 165 "sip/QtCore/qrect.sip"
#include <qrect.h>
#line 48 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qsize.sip"
#include <qsize.h>
#line 51 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\sip/QtSvg/qsvgrenderer.sip"
#include <qsvgrenderer.h>
#line 54 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 57 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 60 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 63 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 66 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 234 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 69 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 222 "sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 72 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 28 "sip/QtCore/qobject.sip"
#include <qobject.h>
#line 75 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 78 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 36 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 81 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 32 "sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 84 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 87 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qthread.sip"
#include <qthread.h>
#line 90 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 93 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 96 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 99 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 102 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 105 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 99 "sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 108 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 111 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtWidgets/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 114 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtWidgets/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 117 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 638 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 120 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 123 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 126 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtGui/qregion.sip"
#include <qregion.h>
#line 129 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 144 "sip/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 132 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 26 "sip/QtWidgets/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 135 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 120 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 138 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 89 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 141 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 333 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 144 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 479 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 147 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 165 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 150 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 354 "sip/QtGui/qevent.sip"
#include <qevent.h>
#line 153 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 200 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 156 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 140 "sip/QtWidgets/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 159 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 327 "sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 162 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 165 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 168 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 171 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 606 "sip/QtWidgets/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 174 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"
#line 30 "sip/QtWidgets/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 177 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"


class sipQGraphicsSvgItem : public QGraphicsSvgItem
{
public:
    sipQGraphicsSvgItem(QGraphicsItem*);
    sipQGraphicsSvgItem(const QString&,QGraphicsItem*);
    virtual ~sipQGraphicsSvgItem();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a public method for every protected method visible from
     * this class.
     */
    void sipProtectVirt_contextMenuEvent(bool,QGraphicsSceneContextMenuEvent*);
    void sipProtectVirt_dragEnterEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragLeaveEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dragMoveEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_dropEvent(bool,QGraphicsSceneDragDropEvent*);
    void sipProtectVirt_focusInEvent(bool,QFocusEvent*);
    void sipProtectVirt_focusOutEvent(bool,QFocusEvent*);
    void sipProtectVirt_hoverEnterEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverLeaveEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_hoverMoveEvent(bool,QGraphicsSceneHoverEvent*);
    void sipProtectVirt_inputMethodEvent(bool,QInputMethodEvent*);
    QVariant sipProtectVirt_inputMethodQuery(bool,Qt::InputMethodQuery) const;
    QVariant sipProtectVirt_itemChange(bool,QGraphicsItem::GraphicsItemChange,const QVariant&);
    void sipProtectVirt_keyPressEvent(bool,QKeyEvent*);
    void sipProtectVirt_keyReleaseEvent(bool,QKeyEvent*);
    void sipProtectVirt_mouseDoubleClickEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseMoveEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mousePressEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtectVirt_mouseReleaseEvent(bool,QGraphicsSceneMouseEvent*);
    void sipProtect_prepareGeometryChange();
    bool sipProtectVirt_sceneEvent(bool,QEvent*);
    bool sipProtectVirt_sceneEventFilter(bool,QGraphicsItem*,QEvent*);
    void sipProtectVirt_wheelEvent(bool,QGraphicsSceneWheelEvent*);
    QObject* sipProtect_sender() const;
    int sipProtect_receivers(const char*) const;
    void sipProtectVirt_timerEvent(bool,QTimerEvent*);
    void sipProtectVirt_childEvent(bool,QChildEvent*);
    void sipProtectVirt_customEvent(bool,QEvent*);
    void sipProtectVirt_connectNotify(bool,const QMetaMethod&);
    void sipProtectVirt_disconnectNotify(bool,const QMetaMethod&);
    int sipProtect_senderSignalIndex() const;
    bool sipProtect_isSignalConnected(const QMetaMethod&) const;
    void sipProtect_updateMicroFocus();
    bool sipProtectVirt_event(bool,QEvent*);

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent(QGraphicsSceneWheelEvent*);
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    bool sceneEvent(QEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    bool contains(const QPointF&) const;
    QPainterPath shape() const;
    void advance(int);
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    bool event(QEvent*);
    int type() const;
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    QRectF boundingRect() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsSvgItem(const sipQGraphicsSvgItem &);
    sipQGraphicsSvgItem &operator = (const sipQGraphicsSvgItem &);

    char sipPyMethods[39];
};

sipQGraphicsSvgItem::sipQGraphicsSvgItem(QGraphicsItem*a0): QGraphicsSvgItem(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsSvgItem::sipQGraphicsSvgItem(const QString& a0,QGraphicsItem*a1): QGraphicsSvgItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsSvgItem::~sipQGraphicsSvgItem()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsSvgItem::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtSvg_qt_metaobject(sipPySelf,sipType_QGraphicsSvgItem);
}

int sipQGraphicsSvgItem::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsSvgItem::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtSvg_qt_metacall(sipPySelf,sipType_QGraphicsSvgItem,_c,_id,_a);

    return _id;
}

void *sipQGraphicsSvgItem::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtSvg_qt_metacast(sipPySelf, sipType_QGraphicsSvgItem, _clname, &sipCpp) ? sipCpp : QGraphicsSvgItem::qt_metacast(_clname));
}

void sipQGraphicsSvgItem::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::wheelEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_117)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    ((sipVH_QtWidgets_117)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[117]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSvgItem::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsSvgItem::sceneEventFilter(a0,a1);

    typedef bool (*sipVH_QtWidgets_125)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return ((sipVH_QtWidgets_125)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[125]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsSvgItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::mouseReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::mousePressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::mouseMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::mouseDoubleClickEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_118)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    ((sipVH_QtWidgets_118)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[118]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::keyReleaseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtSvg_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::keyPressEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    ((sipVH_QtGui_4)(sipModuleAPI_QtSvg_QtGui->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsSvgItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsSvgItem::itemChange(a0,a1);

    typedef QVariant (*sipVH_QtWidgets_108)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return ((sipVH_QtWidgets_108)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[108]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

QVariant sipQGraphicsSvgItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsSvgItem::inputMethodQuery(a0);

    typedef QVariant (*sipVH_QtWidgets_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return ((sipVH_QtWidgets_6)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::inputMethodEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    ((sipVH_QtWidgets_7)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::hoverMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_104)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    ((sipVH_QtWidgets_104)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[104]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::hoverLeaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_104)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    ((sipVH_QtWidgets_104)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[104]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::hoverEnterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_104)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    ((sipVH_QtWidgets_104)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[104]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::focusOutEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtSvg_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::focusInEvent(a0);
        return;
    }

    typedef void (*sipVH_QtGui_7)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    ((sipVH_QtGui_7)(sipModuleAPI_QtSvg_QtGui->em_virthandlers[7]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::dropEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::dragMoveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::dragLeaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::dragEnterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_120)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    ((sipVH_QtWidgets_120)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[120]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::contextMenuEvent(a0);
        return;
    }

    typedef void (*sipVH_QtWidgets_121)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    ((sipVH_QtWidgets_121)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[121]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsSvgItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsSvgItem::opaqueArea();

    typedef QPainterPath (*sipVH_QtWidgets_111)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_111)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[111]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

bool sipQGraphicsSvgItem::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[23]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsSvgItem::isObscuredBy(a0);

    typedef bool (*sipVH_QtWidgets_123)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return ((sipVH_QtWidgets_123)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[123]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSvgItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsSvgItem::collidesWithPath(a0,a1);

    typedef bool (*sipVH_QtWidgets_126)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return ((sipVH_QtWidgets_126)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[126]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsSvgItem::collidesWithItem(a0,a1);

    typedef bool (*sipVH_QtWidgets_127)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return ((sipVH_QtWidgets_127)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[127]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsSvgItem::contains(a0);

    typedef bool (*sipVH_QtWidgets_124)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return ((sipVH_QtWidgets_124)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[124]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsSvgItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsSvgItem::shape();

    typedef QPainterPath (*sipVH_QtWidgets_111)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_111)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[111]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsSvgItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsSvgItem::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[4]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QGraphicsSvgItem::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QGraphicsSvgItem::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_46)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_46)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[46]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[25]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_47)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_47)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[47]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

void sipQGraphicsSvgItem::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QGraphicsSvgItem::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[9]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

bool sipQGraphicsSvgItem::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QGraphicsSvgItem::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_26)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_26)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[26]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsSvgItem::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QGraphicsSvgItem::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[5]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0);
}

int sipQGraphicsSvgItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[36]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsSvgItem::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtSvg_QtCore->em_virthandlers[6]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsSvgItem::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QGraphicsSvgItem::paint(a0,a1,a2);
        return;
    }

    typedef void (*sipVH_QtWidgets_113)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    ((sipVH_QtWidgets_113)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[113]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth, a0, a1, a2);
}

QRectF sipQGraphicsSvgItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[38]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return QGraphicsSvgItem::boundingRect();

    typedef QRectF (*sipVH_QtWidgets_112)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtWidgets_112)(sipModuleAPI_QtSvg_QtWidgets->em_virthandlers[112]))(sipGILState, sipModuleAPI_QtSvg_QtCore->em_virterrorhandlers[0], sipPySelf, sipMeth);
}

void sipQGraphicsSvgItem::sipProtectVirt_contextMenuEvent(bool sipSelfWasArg,QGraphicsSceneContextMenuEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::contextMenuEvent(a0) : contextMenuEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_dragEnterEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragEnterEvent(a0) : dragEnterEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_dragLeaveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragLeaveEvent(a0) : dragLeaveEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_dragMoveEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dragMoveEvent(a0) : dragMoveEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_dropEvent(bool sipSelfWasArg,QGraphicsSceneDragDropEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::dropEvent(a0) : dropEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_focusInEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusInEvent(a0) : focusInEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_focusOutEvent(bool sipSelfWasArg,QFocusEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::focusOutEvent(a0) : focusOutEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_hoverEnterEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverEnterEvent(a0) : hoverEnterEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_hoverLeaveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverLeaveEvent(a0) : hoverLeaveEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_hoverMoveEvent(bool sipSelfWasArg,QGraphicsSceneHoverEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::hoverMoveEvent(a0) : hoverMoveEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_inputMethodEvent(bool sipSelfWasArg,QInputMethodEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::inputMethodEvent(a0) : inputMethodEvent(a0));
}

QVariant sipQGraphicsSvgItem::sipProtectVirt_inputMethodQuery(bool sipSelfWasArg,Qt::InputMethodQuery a0) const
{
    return (sipSelfWasArg ? QGraphicsItem::inputMethodQuery(a0) : inputMethodQuery(a0));
}

QVariant sipQGraphicsSvgItem::sipProtectVirt_itemChange(bool sipSelfWasArg,QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    return (sipSelfWasArg ? QGraphicsItem::itemChange(a0,a1) : itemChange(a0,a1));
}

void sipQGraphicsSvgItem::sipProtectVirt_keyPressEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyPressEvent(a0) : keyPressEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_keyReleaseEvent(bool sipSelfWasArg,QKeyEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::keyReleaseEvent(a0) : keyReleaseEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_mouseDoubleClickEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseDoubleClickEvent(a0) : mouseDoubleClickEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_mouseMoveEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseMoveEvent(a0) : mouseMoveEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_mousePressEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mousePressEvent(a0) : mousePressEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_mouseReleaseEvent(bool sipSelfWasArg,QGraphicsSceneMouseEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::mouseReleaseEvent(a0) : mouseReleaseEvent(a0));
}

void sipQGraphicsSvgItem::sipProtect_prepareGeometryChange()
{
    QGraphicsItem::prepareGeometryChange();
}

bool sipQGraphicsSvgItem::sipProtectVirt_sceneEvent(bool sipSelfWasArg,QEvent*a0)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEvent(a0) : sceneEvent(a0));
}

bool sipQGraphicsSvgItem::sipProtectVirt_sceneEventFilter(bool sipSelfWasArg,QGraphicsItem*a0,QEvent*a1)
{
    return (sipSelfWasArg ? QGraphicsItem::sceneEventFilter(a0,a1) : sceneEventFilter(a0,a1));
}

void sipQGraphicsSvgItem::sipProtectVirt_wheelEvent(bool sipSelfWasArg,QGraphicsSceneWheelEvent*a0)
{
    (sipSelfWasArg ? QGraphicsItem::wheelEvent(a0) : wheelEvent(a0));
}

QObject* sipQGraphicsSvgItem::sipProtect_sender() const
{
    return QObject::sender();
}

int sipQGraphicsSvgItem::sipProtect_receivers(const char*a0) const
{
    return QObject::receivers(a0);
}

void sipQGraphicsSvgItem::sipProtectVirt_timerEvent(bool sipSelfWasArg,QTimerEvent*a0)
{
    (sipSelfWasArg ? QObject::timerEvent(a0) : timerEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_childEvent(bool sipSelfWasArg,QChildEvent*a0)
{
    (sipSelfWasArg ? QObject::childEvent(a0) : childEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_customEvent(bool sipSelfWasArg,QEvent*a0)
{
    (sipSelfWasArg ? QObject::customEvent(a0) : customEvent(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_connectNotify(bool sipSelfWasArg,const QMetaMethod& a0)
{
    (sipSelfWasArg ? QObject::connectNotify(a0) : connectNotify(a0));
}

void sipQGraphicsSvgItem::sipProtectVirt_disconnectNotify(bool sipSelfWasArg,const QMetaMethod& a0)
{
    (sipSelfWasArg ? QObject::disconnectNotify(a0) : disconnectNotify(a0));
}

int sipQGraphicsSvgItem::sipProtect_senderSignalIndex() const
{
    return QObject::senderSignalIndex();
}

bool sipQGraphicsSvgItem::sipProtect_isSignalConnected(const QMetaMethod& a0) const
{
    return QObject::isSignalConnected(a0);
}

void sipQGraphicsSvgItem::sipProtect_updateMicroFocus()
{
    QGraphicsObject::updateMicroFocus();
}

bool sipQGraphicsSvgItem::sipProtectVirt_event(bool sipSelfWasArg,QEvent*a0)
{
    return (sipSelfWasArg ? QGraphicsObject::event(a0) : event(a0));
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_contextMenuEvent, "QGraphicsSvgItem.contextMenuEvent(QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_contextMenuEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            sipCpp->sipProtectVirt_contextMenuEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_contextMenuEvent, doc_QGraphicsSvgItem_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_dragEnterEvent, "QGraphicsSvgItem.dragEnterEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_dragEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_dragEnterEvent, doc_QGraphicsSvgItem_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_dragLeaveEvent, "QGraphicsSvgItem.dragLeaveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_dragLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_dragLeaveEvent, doc_QGraphicsSvgItem_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_dragMoveEvent, "QGraphicsSvgItem.dragMoveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_dragMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dragMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_dragMoveEvent, doc_QGraphicsSvgItem_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_dropEvent, "QGraphicsSvgItem.dropEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_dropEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            sipCpp->sipProtectVirt_dropEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_dropEvent, doc_QGraphicsSvgItem_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_focusInEvent, "QGraphicsSvgItem.focusInEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_focusInEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusInEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_focusInEvent, doc_QGraphicsSvgItem_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_focusOutEvent, "QGraphicsSvgItem.focusOutEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_focusOutEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            sipCpp->sipProtectVirt_focusOutEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_focusOutEvent, doc_QGraphicsSvgItem_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_hoverEnterEvent, "QGraphicsSvgItem.hoverEnterEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_hoverEnterEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverEnterEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_hoverEnterEvent, doc_QGraphicsSvgItem_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_hoverLeaveEvent, "QGraphicsSvgItem.hoverLeaveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_hoverLeaveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverLeaveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_hoverLeaveEvent, doc_QGraphicsSvgItem_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_hoverMoveEvent, "QGraphicsSvgItem.hoverMoveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_hoverMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            sipCpp->sipProtectVirt_hoverMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_hoverMoveEvent, doc_QGraphicsSvgItem_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_inputMethodEvent, "QGraphicsSvgItem.inputMethodEvent(QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_inputMethodEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            sipCpp->sipProtectVirt_inputMethodEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_inputMethodEvent, doc_QGraphicsSvgItem_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_inputMethodQuery, "QGraphicsSvgItem.inputMethodQuery(Qt.InputMethodQuery) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsSvgItem_inputMethodQuery(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        const sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BE", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->sipProtectVirt_inputMethodQuery(sipSelfWasArg,a0));

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_inputMethodQuery, doc_QGraphicsSvgItem_inputMethodQuery);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_itemChange, "QGraphicsSvgItem.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsSvgItem_itemChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_itemChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant* a1;
        int a1State = 0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BEJ1", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant, &a1, &a1State))
        {
            QVariant*sipRes;

            sipRes = new QVariant(sipCpp->sipProtectVirt_itemChange(sipSelfWasArg,a0,*a1));
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_itemChange, doc_QGraphicsSvgItem_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_keyPressEvent, "QGraphicsSvgItem.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_keyPressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyPressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_keyPressEvent, doc_QGraphicsSvgItem_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_keyReleaseEvent, "QGraphicsSvgItem.keyReleaseEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_keyReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            sipCpp->sipProtectVirt_keyReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_keyReleaseEvent, doc_QGraphicsSvgItem_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_mouseDoubleClickEvent, "QGraphicsSvgItem.mouseDoubleClickEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_mouseDoubleClickEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseDoubleClickEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_mouseDoubleClickEvent, doc_QGraphicsSvgItem_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_mouseMoveEvent, "QGraphicsSvgItem.mouseMoveEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_mouseMoveEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseMoveEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_mouseMoveEvent, doc_QGraphicsSvgItem_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_mousePressEvent, "QGraphicsSvgItem.mousePressEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_mousePressEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mousePressEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_mousePressEvent, doc_QGraphicsSvgItem_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_mouseReleaseEvent, "QGraphicsSvgItem.mouseReleaseEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_mouseReleaseEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            sipCpp->sipProtectVirt_mouseReleaseEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_mouseReleaseEvent, doc_QGraphicsSvgItem_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_prepareGeometryChange, "QGraphicsSvgItem.prepareGeometryChange()");

extern "C" {static PyObject *meth_QGraphicsSvgItem_prepareGeometryChange(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            sipCpp->sipProtect_prepareGeometryChange();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_prepareGeometryChange, doc_QGraphicsSvgItem_prepareGeometryChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_sceneEvent, "QGraphicsSvgItem.sceneEvent(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsSvgItem_sceneEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEvent(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_sceneEvent, doc_QGraphicsSvgItem_sceneEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_sceneEventFilter, "QGraphicsSvgItem.sceneEventFilter(QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsSvgItem_sceneEventFilter(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem* a0;
        QEvent* a1;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8J8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_sceneEventFilter(sipSelfWasArg,a0,a1);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_sceneEventFilter, doc_QGraphicsSvgItem_sceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_wheelEvent, "QGraphicsSvgItem.wheelEvent(QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_wheelEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            sipCpp->sipProtectVirt_wheelEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_wheelEvent, doc_QGraphicsSvgItem_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_sender, "QGraphicsSvgItem.sender() -> QObject");

extern "C" {static PyObject *meth_QGraphicsSvgItem_sender(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_sender(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            QObject*sipRes = 0;

#line 546 "sip/QtCore/qobject.sip"
        // sender() must be called without the GIL to avoid possible deadlocks between
        // the GIL and Qt's internal thread data mutex.
        
        Py_BEGIN_ALLOW_THREADS
        
        #if defined(SIP_PROTECTED_IS_PUBLIC)
        sipRes = sipCpp->sender();
        #else
        sipRes = sipCpp->sipProtect_sender();
        #endif
        
        Py_END_ALLOW_THREADS
        
        if (!sipRes)
        {
            typedef QObject *(*qtcore_qobject_sender_t)();
        
            static qtcore_qobject_sender_t qtcore_qobject_sender = 0;
        
            if (!qtcore_qobject_sender)
                qtcore_qobject_sender = (qtcore_qobject_sender_t)sipImportSymbol("qtcore_qobject_sender");
        
            if (qtcore_qobject_sender)
                sipRes = qtcore_qobject_sender();
        }
#line 1843 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"

            return sipConvertFromType(sipRes,sipType_QObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_sender, doc_QGraphicsSvgItem_sender);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_receivers, "QGraphicsSvgItem.receivers(signal) -> int");

extern "C" {static PyObject *meth_QGraphicsSvgItem_receivers(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_receivers(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        PyObject * a0;
        const sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BP0", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, &a0))
        {
            int sipRes = 0;
            sipErrorState sipError = sipErrorNone;

#line 575 "sip/QtCore/qobject.sip"
        // We need to handle the signal object.  Import the helper if it hasn't already
        // been done.
        typedef sipErrorState (*pyqt5_get_signal_signature_t)(PyObject *, const QObject *, const QByteArray &);
        
        static pyqt5_get_signal_signature_t pyqt5_get_signal_signature = 0;
        
        if (!pyqt5_get_signal_signature)
            pyqt5_get_signal_signature = (pyqt5_get_signal_signature_t)sipImportSymbol("pyqt5_get_signal_signature");
        
        if (pyqt5_get_signal_signature)
        {
            QByteArray signal_signature;
            
        #if defined(SIP_PROTECTED_IS_PUBLIC)
            if ((sipError = pyqt5_get_signal_signature(a0, sipCpp, signal_signature)) == sipErrorNone)
            {
                sipRes = sipCpp->receivers(signal_signature.constData());
            }
        #else
            if ((sipError = pyqt5_get_signal_signature(a0, static_cast<const QObject *>(sipCpp), signal_signature)) == sipErrorNone)
            {
                sipRes = sipCpp->sipProtect_receivers(signal_signature.constData());
            }
        #endif
            else if (sipError == sipErrorContinue)
            {
                sipError = sipBadCallableArg(0, a0);
            }
        }
#line 1902 "C:\\Users\\marcus\\Downloads\\PyQt-gpl-5.4\\PyQt-gpl-5.4\\QtSvg/sipQtSvgQGraphicsSvgItem.cpp"

            if (sipError == sipErrorFail)
                return 0;

            if (sipError == sipErrorNone)
            {
            return SIPLong_FromLong(sipRes);
            }

            sipAddException(sipError, &sipParseErr);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_receivers, doc_QGraphicsSvgItem_receivers);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_timerEvent, "QGraphicsSvgItem.timerEvent(QTimerEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_timerEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_timerEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QTimerEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QTimerEvent, &a0))
        {
            sipCpp->sipProtectVirt_timerEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_timerEvent, doc_QGraphicsSvgItem_timerEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_childEvent, "QGraphicsSvgItem.childEvent(QChildEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_childEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_childEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QChildEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QChildEvent, &a0))
        {
            sipCpp->sipProtectVirt_childEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_childEvent, doc_QGraphicsSvgItem_childEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_customEvent, "QGraphicsSvgItem.customEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_customEvent(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_customEvent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QEvent, &a0))
        {
            sipCpp->sipProtectVirt_customEvent(sipSelfWasArg,a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_customEvent, doc_QGraphicsSvgItem_customEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_connectNotify, "QGraphicsSvgItem.connectNotify(QMetaMethod)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_connectNotify(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_connectNotify(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QMetaMethod* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_connectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_connectNotify, doc_QGraphicsSvgItem_connectNotify);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_disconnectNotify, "QGraphicsSvgItem.disconnectNotify(QMetaMethod)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_disconnectNotify(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_disconnectNotify(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QMetaMethod* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QMetaMethod, &a0))
        {
            sipCpp->sipProtectVirt_disconnectNotify(sipSelfWasArg,*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_disconnectNotify, doc_QGraphicsSvgItem_disconnectNotify);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_senderSignalIndex, "QGraphicsSvgItem.senderSignalIndex() -> int");

extern "C" {static PyObject *meth_QGraphicsSvgItem_senderSignalIndex(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_senderSignalIndex(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->sipProtect_senderSignalIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_senderSignalIndex, doc_QGraphicsSvgItem_senderSignalIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_isSignalConnected, "QGraphicsSvgItem.isSignalConnected(QMetaMethod) -> bool");

extern "C" {static PyObject *meth_QGraphicsSvgItem_isSignalConnected(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_isSignalConnected(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QMetaMethod* a0;
        const sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ9", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QMetaMethod, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtect_isSignalConnected(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_isSignalConnected, doc_QGraphicsSvgItem_isSignalConnected);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_updateMicroFocus, "QGraphicsSvgItem.updateMicroFocus()");

extern "C" {static PyObject *meth_QGraphicsSvgItem_updateMicroFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            sipCpp->sipProtect_updateMicroFocus();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_updateMicroFocus, doc_QGraphicsSvgItem_updateMicroFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_event, "QGraphicsSvgItem.event(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsSvgItem_event(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_event(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        sipQGraphicsSvgItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "BJ8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->sipProtectVirt_event(sipSelfWasArg,a0);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_event, doc_QGraphicsSvgItem_event);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setSharedRenderer, "QGraphicsSvgItem.setSharedRenderer(QSvgRenderer)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setSharedRenderer(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setSharedRenderer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QSvgRenderer* a0;
        PyObject *a0Keep;
        QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, &a0Keep, sipType_QSvgRenderer, &a0))
        {
            sipCpp->setSharedRenderer(a0);

            sipKeepReference(sipSelf, -2, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setSharedRenderer, doc_QGraphicsSvgItem_setSharedRenderer);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_renderer, "QGraphicsSvgItem.renderer() -> QSvgRenderer");

extern "C" {static PyObject *meth_QGraphicsSvgItem_renderer(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_renderer(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            QSvgRenderer*sipRes;

            sipRes = sipCpp->renderer();

            return sipConvertFromType(sipRes,sipType_QSvgRenderer,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_renderer, doc_QGraphicsSvgItem_renderer);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setElementId, "QGraphicsSvgItem.setElementId(str)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setElementId(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setElementId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setElementId(*a0);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setElementId, doc_QGraphicsSvgItem_setElementId);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_elementId, "QGraphicsSvgItem.elementId() -> str");

extern "C" {static PyObject *meth_QGraphicsSvgItem_elementId(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_elementId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            QString*sipRes;

            sipRes = new QString(sipCpp->elementId());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_elementId, doc_QGraphicsSvgItem_elementId);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_setMaximumCacheSize, "QGraphicsSvgItem.setMaximumCacheSize(QSize)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_setMaximumCacheSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_setMaximumCacheSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QSize* a0;
        QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QSize, &a0))
        {
            sipCpp->setMaximumCacheSize(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_setMaximumCacheSize, doc_QGraphicsSvgItem_setMaximumCacheSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_maximumCacheSize, "QGraphicsSvgItem.maximumCacheSize() -> QSize");

extern "C" {static PyObject *meth_QGraphicsSvgItem_maximumCacheSize(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_maximumCacheSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            QSize*sipRes;

            sipRes = new QSize(sipCpp->maximumCacheSize());

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_maximumCacheSize, doc_QGraphicsSvgItem_maximumCacheSize);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_boundingRect, "QGraphicsSvgItem.boundingRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsSvgItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            QRectF*sipRes;

            sipRes = new QRectF((sipSelfWasArg ? sipCpp->QGraphicsSvgItem::boundingRect() : sipCpp->boundingRect()));

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_boundingRect, doc_QGraphicsSvgItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_paint, "QGraphicsSvgItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None)");

extern "C" {static PyObject *meth_QGraphicsSvgItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2 = 0;
        QGraphicsSvgItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            (sipSelfWasArg ? sipCpp->QGraphicsSvgItem::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_paint, doc_QGraphicsSvgItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsSvgItem_type, "QGraphicsSvgItem.type() -> int");

extern "C" {static PyObject *meth_QGraphicsSvgItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsSvgItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsSvgItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsSvgItem, &sipCpp))
        {
            int sipRes;

            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsSvgItem::type() : sipCpp->type());

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsSvgItem, sipName_type, doc_QGraphicsSvgItem_type);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsSvgItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsSvgItem(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsSvgItem)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsObject)->ctd_cast((QGraphicsObject *)(QGraphicsSvgItem *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsSvgItem(void *, int);}
static void release_QGraphicsSvgItem(void *sipCppV,int)
{
    QGraphicsSvgItem *sipCpp = reinterpret_cast<QGraphicsSvgItem *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QGraphicsSvgItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsSvgItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsSvgItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsSvgItem(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsSvgItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsSvgItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsSvgItem *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QGraphicsItem, &a0, sipOwner))
        {
            sipCpp = new sipQGraphicsSvgItem(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsItem* a1 = 0;

        static const char *sipKwdList[] = {
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1|JH", sipType_QString,&a0, &a0State, sipType_QGraphicsItem, &a1, sipOwner))
        {
            sipCpp = new sipQGraphicsSvgItem(*a0,a1);
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsSvgItem[] = {{132, 2, 1}};


static PyMethodDef methods_QGraphicsSvgItem[] = {
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsSvgItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_childEvent), (PyCFunction)meth_QGraphicsSvgItem_childEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_connectNotify), (PyCFunction)meth_QGraphicsSvgItem_connectNotify, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), (PyCFunction)meth_QGraphicsSvgItem_contextMenuEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_customEvent), (PyCFunction)meth_QGraphicsSvgItem_customEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_disconnectNotify), (PyCFunction)meth_QGraphicsSvgItem_disconnectNotify, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), (PyCFunction)meth_QGraphicsSvgItem_dragEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), (PyCFunction)meth_QGraphicsSvgItem_dragLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), (PyCFunction)meth_QGraphicsSvgItem_dragMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_dropEvent), (PyCFunction)meth_QGraphicsSvgItem_dropEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_elementId), meth_QGraphicsSvgItem_elementId, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_elementId)},
    {SIP_MLNAME_CAST(sipName_event), (PyCFunction)meth_QGraphicsSvgItem_event, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusInEvent), (PyCFunction)meth_QGraphicsSvgItem_focusInEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), (PyCFunction)meth_QGraphicsSvgItem_focusOutEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), (PyCFunction)meth_QGraphicsSvgItem_hoverEnterEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), (PyCFunction)meth_QGraphicsSvgItem_hoverLeaveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), (PyCFunction)meth_QGraphicsSvgItem_hoverMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), (PyCFunction)meth_QGraphicsSvgItem_inputMethodEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), (PyCFunction)meth_QGraphicsSvgItem_inputMethodQuery, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_isSignalConnected), (PyCFunction)meth_QGraphicsSvgItem_isSignalConnected, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_itemChange), (PyCFunction)meth_QGraphicsSvgItem_itemChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), (PyCFunction)meth_QGraphicsSvgItem_keyPressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), (PyCFunction)meth_QGraphicsSvgItem_keyReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_maximumCacheSize), meth_QGraphicsSvgItem_maximumCacheSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_maximumCacheSize)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), (PyCFunction)meth_QGraphicsSvgItem_mouseDoubleClickEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), (PyCFunction)meth_QGraphicsSvgItem_mouseMoveEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), (PyCFunction)meth_QGraphicsSvgItem_mousePressEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), (PyCFunction)meth_QGraphicsSvgItem_mouseReleaseEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsSvgItem_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_paint)},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), (PyCFunction)meth_QGraphicsSvgItem_prepareGeometryChange, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_receivers), (PyCFunction)meth_QGraphicsSvgItem_receivers, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_renderer), meth_QGraphicsSvgItem_renderer, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_renderer)},
    {SIP_MLNAME_CAST(sipName_sceneEvent), (PyCFunction)meth_QGraphicsSvgItem_sceneEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), (PyCFunction)meth_QGraphicsSvgItem_sceneEventFilter, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_sender), (PyCFunction)meth_QGraphicsSvgItem_sender, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_senderSignalIndex), (PyCFunction)meth_QGraphicsSvgItem_senderSignalIndex, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_setElementId), meth_QGraphicsSvgItem_setElementId, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setElementId)},
    {SIP_MLNAME_CAST(sipName_setMaximumCacheSize), meth_QGraphicsSvgItem_setMaximumCacheSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setMaximumCacheSize)},
    {SIP_MLNAME_CAST(sipName_setSharedRenderer), meth_QGraphicsSvgItem_setSharedRenderer, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_setSharedRenderer)},
    {SIP_MLNAME_CAST(sipName_timerEvent), (PyCFunction)meth_QGraphicsSvgItem_timerEvent, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsSvgItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsSvgItem_type)},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), (PyCFunction)meth_QGraphicsSvgItem_updateMicroFocus, METH_VARARGS|METH_KEYWORDS, NULL},
    {SIP_MLNAME_CAST(sipName_wheelEvent), (PyCFunction)meth_QGraphicsSvgItem_wheelEvent, METH_VARARGS|METH_KEYWORDS, NULL}
};

PyDoc_STRVAR(doc_QGraphicsSvgItem, "\1QGraphicsSvgItem(QGraphicsItem parent=None)\n"
    "QGraphicsSvgItem(str, QGraphicsItem parent=None)");


pyqt5ClassTypeDef sipTypeDef_QtSvg_QGraphicsSvgItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsSvgItem,
        {0}
    },
    {
        sipNameNr_QGraphicsSvgItem,
        {0, 0, 1},
        43, methods_QGraphicsSvgItem,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsSvgItem,
    -1,
    -1,
    supers_QGraphicsSvgItem,
    0,
    init_type_QGraphicsSvgItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsSvgItem,
    0,
    0,
    0,
    release_QGraphicsSvgItem,
    cast_QGraphicsSvgItem,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QGraphicsSvgItem::staticMetaObject,
    0,
    0,
    0
};
