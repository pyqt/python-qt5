// qlowenergycontroller.sip generated by MetaSIP on Thu Dec 25 10:18:50 2014
//
// This file is part of the QtBluetooth Python extension module.
//
// Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_5_4_0 -)

class QLowEnergyController : QObject
{
%TypeHeaderCode
#include <qlowenergycontroller.h>
%End

public:
    enum Error
    {
        NoError,
        UnknownError,
        UnknownRemoteDeviceError,
        NetworkError,
        InvalidBluetoothAdapterError,
    };

    enum ControllerState
    {
        UnconnectedState,
        ConnectingState,
        ConnectedState,
        DiscoveringState,
        DiscoveredState,
        ClosingState,
    };

    enum RemoteAddressType
    {
        PublicAddress,
        RandomAddress,
    };

    QLowEnergyController(const QBluetoothAddress &remoteDevice, QObject *parent /TransferThis/ = 0);
    QLowEnergyController(const QBluetoothAddress &remoteDevice, const QBluetoothAddress &localDevice, QObject *parent /TransferThis/ = 0);
    virtual ~QLowEnergyController();
    QBluetoothAddress localAddress() const;
    QBluetoothAddress remoteAddress() const;
    QLowEnergyController::ControllerState state() const;
    QLowEnergyController::RemoteAddressType remoteAddressType() const;
    void setRemoteAddressType(QLowEnergyController::RemoteAddressType type);
    void connectToDevice();
    void disconnectFromDevice();
    void discoverServices();
    QList<QBluetoothUuid> services() const;
    QLowEnergyService *createServiceObject(const QBluetoothUuid &service, QObject *parent /TransferThis/ = 0) /Factory/;
    QLowEnergyController::Error error() const;
    QString errorString() const;

signals:
    void connected();
    void disconnected();
    void stateChanged(QLowEnergyController::ControllerState state);
    void error(QLowEnergyController::Error newError);
    void serviceDiscovered(const QBluetoothUuid &newService);
    void discoveryFinished();
};

%End
