// qjsengine.sip generated by MetaSIP on Thu Dec 25 10:18:50 2014
//
// This file is part of the QtQml Python extension module.
//
// Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt5.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QJSEngine : QObject
{
%TypeHeaderCode
#include <qjsengine.h>
%End

%ConvertToSubClassCode
    static struct class_graph {
        const char *name;
        sipTypeDef **type;
        int yes, no;
    } graph[] = {
        {sipName_QQmlExpression, &sipType_QQmlExpression, -1, 1},
    #if QT_VERSION >= 0x050200
        {sipName_QQmlFileSelector, &sipType_QQmlFileSelector, -1, 2},
    #else
        {0, 0, -1, 2},
    #endif
        {sipName_QQmlContext, &sipType_QQmlContext, -1, 3},
        {sipName_QQmlPropertyMap, &sipType_QQmlPropertyMap, -1, 4},
        {sipName_QQmlComponent, &sipType_QQmlComponent, -1, 5},
        {sipName_QQmlExtensionPlugin, &sipType_QQmlExtensionPlugin, -1, 6},
        {sipName_QJSEngine, &sipType_QJSEngine, 7, -1},
        {sipName_QQmlEngine, &sipType_QQmlEngine, 8, -1},
    #if QT_VERSION >= 0x050100
        {sipName_QQmlApplicationEngine, &sipType_QQmlApplicationEngine, -1, -1},
    #else
        {0, 0, -1, -1},
    #endif
    };
    
    int i = 0;
    
    sipType = NULL;
    
    do
    {
        struct class_graph *cg = &graph[i];
    
        if (cg->name != NULL && sipCpp->inherits(cg->name))
        {
            sipType = *cg->type;
            i = cg->yes;
        }
        else
            i = cg->no;
    }
    while (i >= 0);
%End

public:
    QJSEngine();
    explicit QJSEngine(QObject *parent /TransferThis/);
    virtual ~QJSEngine();
    QJSValue globalObject() const;
    QJSValue evaluate(const QString &program, const QString &fileName = QString(), int lineNumber = 1) /ReleaseGIL/;
    QJSValue newObject();
    QJSValue newArray(uint length = 0);
    QJSValue newQObject(QObject *object /Transfer/);
    void collectGarbage();
%If (Qt_5_4_0 -)
    void installTranslatorFunctions(const QJSValue &object = QJSValue(QJSValue::UndefinedValue));
%End

private:
    QJSEngine(const QJSEngine &);
};

%ModuleHeaderCode
#include "qpyqml_api.h"
%End

%PostInitialisationCode
qpyqml_post_init(sipModuleDict);
%End
